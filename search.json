[{"path":"https://thewanglab.github.io/algatr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 algatr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"generalized-dissimilarity-modeling-gdm","dir":"Articles","previous_headings":"","what":"Generalized dissimilarity modeling (GDM)","title":"GDM","text":"using GDM, please cite following: GDM method, Ferrier S., Manion G., Elith J., Richardson K. (2007) Using generalized dissimilarity modelling analyse predict patterns beta diversity regional biodiversity assessment, gdm package, Fitzpatrick M., Mokany K., Manion G., Nieto-Lugilde D., Ferrier S. (2022). gdm: Generalized Dissimilarity Modeling. R package version 1.5.0-9.1. Generalized dissimilarity modeling (GDM) matrix regression method explanatory variables (case, genetic data, form distance matrix) regressed response matrix (e.g., environmental variables locations samples obtained geographic distances locations). GDM calculates compositional dissimilarity pairs sites, importantly allows nonlinear relationships modeled. additional information GDM, please see Ferrier et al. 2007 description basic use estimating patterns beta diversity, Freedman et al. 2010 classic example use, Fitzpatrick & Keller 2015 Mokany et al. 2022 perspectives application. Finally, code primarily uses gdm package excellent documentation (see ) including thorough vignette describes theory behind GDM. Within algatr, one main function perform GDM analysis: gdm_do_everything(). function runs GDM (using gdm() function within gdm package) allows user run GDM variables, model selection choose best-supported variables. Contained within gdm_do_everything() following functions, ’ll walk : gdm_run() runs GDM gdm_df() generates statistics coefficients predictor variables gdm_plot_isplines() plots fitted -splines variable gdm_map() generates PCA map compositional dissimilarity based GDM results","code":"library(algatr) library(raster) library(terra)"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"assumptions","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM)","what":"Assumptions","title":"GDM","text":"assumptions built within function user must aware : (1) coords gendist files must ordering individuals; isn’t check , (2) function assumes individual sampling coordinates (even population-based sampling performed). Running GDM analysis algatr work individual-based (.e., one individual per sampling locality population) population-based sampling. test dataset performed using individual-based sampling, vignette walk users running GDM sampling scheme. population-based sampling, users provide allele frequency site-based genetic distances site locations rather dosage matrices individual locations. Alternatively, users can select single representative sample population mimic individual-based sampling, desired; important consideration ensure genetic data match sampling locations. remainder analysis identical.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"read-in-and-process-input-data","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM)","what":"Read in and process input data","title":"GDM","text":"Let’s first load objects within example dataset.","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"extract-environmental-variables","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM)","what":"Extract environmental variables","title":"GDM","text":"run GDM, need generate site-pair table extracted extracted variable values site. environmental layers (.e., CA_env) example dataset, need extract environmental values layers sampling locality lizards collected:","code":"env <- raster::extract(CA_env, liz_coords)"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"gdm-with-all-variables","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM) > Run GDM with gdm_run()","what":"GDM with all variables","title":"GDM","text":"Given GDM regression method, “full” model (.e., including predictor variables) include environmental layers addition geographic distance, also considered predictor. Thus, example, maximum number variables can end significant four (three enviro PCs + geographic distance). can specify running full model using model argument. Extracted environmental values sampling coordinate specified using env argument, genetic distances bounded 0-1, must scaled using scale_gendist argument. Keep mind several arguments model selection used.","code":"gdm_full <- gdm_run(   gendist = liz_gendist,   coords = liz_coords,   env = env,   model = \"full\",   scale_gendist = TRUE )"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"gdm-with-model-selection","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM) > Run GDM with gdm_run()","what":"GDM with model selection","title":"GDM","text":"can also run GDM using significant variables (.e., “best” model). case, variable selection process done using permutation test assess significance: predictor variables randomly permuted sites deviance explained fitted model compared obtained random permutation. important aware GDM (implemented gdm package) always considers geographic distance variable , default, allow user perform variable selection without geographic distances considered. algatr adjusted functionality variable selection predictor variables, including geographic distances. additional considerations make running GDM model selection. first number permutations performed (nperm argument); permutations represent number times site-pair tables permuted perform backwards elimination procedure variable selection. next argument sig, specifying significance threshold (alpha value). N.B.: Sometimes, gdm_run() function return NULL, implying none predictor variables significantly associated genetic distances. sure run adequate numbers permutations; occasionally NULL returned insufficient permutations specified. See example model selection run; code run within vignette significant GDM model algatr test dataset. Within resulting object(gdm_best), pvalues varimp elements longer NULL (full model); model selection performed. pvalues indicate significance environmental variable genetic distance (given user-defined threshold), varimp contains information variable importance relevant statistics model.","code":"gdm_best <- gdm_run(gendist = liz_gendist,                      coords = liz_coords,                      env = env,                      model = \"best\",                      scale_gendist = TRUE,                     nperm = 500,                      sig = 0.05)  # Look at p-values gdm_best$pvalues gdm_best$varimp"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"interpreting-gdm-results","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM)","what":"Interpreting GDM results","title":"GDM","text":"resulting object gdm_run() contains three elements: model, containing information model run, pvalues, varimp. full model, latter two elements empty model selection performed. Let’s take closer look model element. relevant items list predictors (predictor variables considered model), splines (three -splines variable; see information), coefficients (coefficients predictor -splines; .e., 12 total). Predictor variables highest summed coefficient values influence predicted dissimilarity. predicted ecological distances given within ecological element, predicted dissimilarity within predicted element, observed compositional dissimilarity within observed element. Let’s assume want move forward examining results full model. can look relationships predicted ecological distance (raw predictor) predicted compositional dissimilarity observed compositional dissimilarity using gdm_plot_diss() function. Within plots, data point corresponds site-pair comparison, lines obtained fitting (applying link function) linear predictor.","code":"summary(gdm_full$model) #> [1]  #> [1]  #> [1] GDM Modelling Summary #> [1] Creation Date:  Wed Apr  3 22:30:58 2024 #> [1]  #> [1] Name:  $        Name:  gdm_full Name:  model    #> [1]  #> [1] Data:  gdmData #> [1]  #> [1] Samples:  1378 #> [1]  #> [1] Geographical distance used in model fitting?  TRUE #> [1]  #> [1] NULL Deviance:  131.531 #> [1] GDM Deviance:  83.008 #> [1] Percent Deviance Explained:  36.89 #> [1]  #> [1] Intercept:  0.363 #> [1]  #> [1] PREDICTOR ORDER BY SUM OF I-SPLINE COEFFICIENTS: #> [1]  #> [1] Predictor 1: Geographic #> [1] Splines: 3 #> [1] Min Knot: 0 #> [1] 50% Knot: 3.203 #> [1] Max Knot: 11.074 #> [1] Coefficient[1]: 0.44 #> [1] Coefficient[2]: 0.464 #> [1] Coefficient[3]: 0.447 #> [1] Sum of coefficients for Geographic: 1.351 #> [1]  #> [1] Predictor 2: CA_rPCA2 #> [1] Splines: 3 #> [1] Min Knot: -3.939 #> [1] 50% Knot: 0.413 #> [1] Max Knot: 5.107 #> [1] Coefficient[1]: 0.059 #> [1] Coefficient[2]: 0 #> [1] Coefficient[3]: 0 #> [1] Sum of coefficients for CA_rPCA2: 0.059 #> [1]  #> [1] Predictor 3: CA_rPCA3 #> [1] Splines: 3 #> [1] Min Knot: -4.138 #> [1] 50% Knot: -0.457 #> [1] Max Knot: 2.475 #> [1] Coefficient[1]: 0 #> [1] Coefficient[2]: 0.021 #> [1] Coefficient[3]: 0 #> [1] Sum of coefficients for CA_rPCA3: 0.021 #> [1]  #> [1] Predictor 4: CA_rPCA1 #> [1] Splines: 3 #> [1] Min Knot: -5.466 #> [1] 50% Knot: -0.914 #> [1] Max Knot: 3.849 #> [1] Coefficient[1]: 0 #> [1] Coefficient[2]: 0 #> [1] Coefficient[3]: 0 #> [1] Sum of coefficients for CA_rPCA1: 0 gdm_plot_diss(gdm_full$model)"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"plotting-fitted-i-splines-for-variables","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM) > Interpreting GDM results","what":"Plotting fitted I-splines for variables","title":"GDM","text":"Let’s plot GDM-fitted functions full model. functions fitted -splines relate predictor variable genetic distance data. Briefly, maximum height curve indicates contribution predictor variable changes (dissimilarity) genetic distances, shape curve provides information genetic distances change across environment gradient predictor variable. y-axis (“partial regression distance”) relates genetic distances variable variables held constant. can look -splines using gdm_plot_isplines() function. general, three -splines found sufficient capture dissimilarity across gradient avoids -fitting (see Mokany et al. 2022 information). can see plots, PCA1 relationship genetic distance, also coefficient variable 0.","code":"par(mfrow = c(2, 2)) gdm_plot_isplines(gdm_full$model)"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"table-of-gdm-statistics","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM) > Interpreting GDM results","what":"Table of GDM statistics","title":"GDM","text":"can generate nice table relevant GDM statistics report using gdm_table() function. understand relative contributions explained IBE (environmental predictor variables) IBD (geographic distance), sum three -spline coefficients variable; non-zero sums variables significantly associated genetic dissimilarity. coefficients contained table sum three -spline coefficients saw looked coefficients element within GDM model.","code":"gdm_table(gdm_full)"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"visualizing-gdm-results","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM)","what":"Visualizing GDM results","title":"GDM","text":"two ways can visualize results GDM within algatr, using gdm_map() function. First, can transform original environmental layers based biological importance (.e., based -splines), run raster PCA environmental layers, visualize first three PC axes assigning axis red, green, blue color scales create RGB plot. way, similar colors map correspond similar genetic composition samples. Secondly, can visualize genetic composition associated variables plotting vector coloring individual points PC RGB space.","code":"gdm_map(gdm_full$model, CA_env, liz_coords)"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"masking-out-irrelevant-areas","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM) > Visualizing GDM results","what":"Masking out irrelevant areas","title":"GDM","text":"important consideration researcher aware overinterpret GDM maps. particular, areas limited () samples still assigned values due model extrapolation; thus, may helpful mask areas sampling overinterpret results. looking map PCA plot , can see two regions California lacking samples: southeastern north-central parts state. Using algatr’s extrap_mask() function (see masking vignette information), can mask areas GDM map several ways. , mask areas (white) fall outside user-defined buffer around sampling coordinates.","code":"# Extract the GDM map from the GDM model object map <- gdm_map(gdm_full$model, CA_env, liz_coords, plot_vars = FALSE) maprgb <- map$pcaRastRGB  # Now, use `extrap_mask()` to do buffer-based masking map_mask <- extrap_mask(liz_coords, maprgb, method = \"buffer\", buffer_width = 1.25)  # Plot the resulting masked map plot_extrap_mask(maprgb, map_mask, RGB = TRUE, mask_col = rgb(1, 1, 1, alpha = 0.6))"},{"path":"https://thewanglab.github.io/algatr/articles/GDM_vignette.html","id":"running-gdm-with-gdm_do_everything","dir":"Articles","previous_headings":"Generalized dissimilarity modeling (GDM)","what":"Running GDM with gdm_do_everything()","title":"GDM","text":"algatr package also option run functionality single function, gdm_do_everything(). function output fitted -splines, table, map, PCA. resulting object looks identical output object gdm_run(). Please aware do_everything() functions meant exploratory. recommend use final analyses unless certain properly parameterized. Running GDM gdm_do_everything() requires three data files input: genetic distance matrix (gendist argument), coordinates samples (coords argument), environmental layers (envlayers argument).","code":"gdm_full_everything <- gdm_do_everything(liz_gendist,   liz_coords,   envlayers = CA_env,   model = \"full\",   scale_gendist = TRUE ) #> Please be aware: the do_everything functions are meant to be exploratory. We do not recommend their use for final analyses unless certain they are properly parameterized. #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette)"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"latent-factor-mixed-models-lfmm","dir":"Articles","previous_headings":"","what":"Latent factor mixed models (LFMM)","title":"LFMM","text":"using LFMM, please cite following: LFMM method, Caye et al. 2019. lfmm package, please cite Jumentier B. (2021). lfmm: Latent Factor Mixed Models. R package version 1.1. LFMM (Frichot et al. 2013) genotype-environment association (GEA) method mixed models used determine loci significantly associated environmental variables. method similar performing RDA, except LFMM takes account – corrects – unobserved variables may confound results (known latent factors). good example latent factor may want correct prior examining environment-associated loci population structure. variety ways determine best number latent factors LFMM (called K values, although TESS K values). algatr provides option test using four methods: (1) Tracy-Widom test; (2) quick elbow test (.e., scree test); (3) using clustering algorithm TESS (.e., determining latent factors corresponding measure population structure); (4) K-means clustering. explore , compare results, vignette. Importantly, RDA, LFMM take missing values. Imputation based per-site median commonly performed, several ways researchers can deal missing values. example, algatr contains str_impute() function impute missing values based population structure using LEA::impute() function. However, , ’ll impute median, strongly urge researchers use extreme caution using form simplistic imputation. mainly provide code impute median testing datasets highly discourage use analyses (please use str_impute() instead!). perform LFMM analysis (Caye et al. 2019), algatr uses lfmm package (see details). Despite name, package implements LFMM2 method, similar original LFMM algorithm, computationally faster. LEA package (Frichot & Francois 2015) also provides wrapper lfmm2 using lfmm2() function.","code":"library(algatr) library(here) library(raster)"},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"read-in-and-process-data-files","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM)","what":"Read in and process data files","title":"LFMM","text":"run LFMM, need genotype dosage matrix environmental values extracted sampling coordinates. Let’s load example dataset, convert vcf dosage matrix using vcf_to_dosage() function, extract environmental data sampling coordinates environmental raster stack (CA_env). mentioned , LFMM requires genotype matrix contains missing values. Let’s impute missing values based per-site median. N.B.: type simplistic imputation strongly recommended downstream analyses used example’s sake!","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>  # Convert vcf to dosage matrix gen <- vcf_to_dosage(liz_vcf) #> Loading required namespace: adegenet # Also, our code assumes that sample IDs from gendist and coords are the same order; be sure to check this before moving forward! env <- raster::extract(CA_env, liz_coords) # Are there NAs in the data? gen[1:5, 1:5] #>        Locus_10 Locus_15 Locus_22 Locus_28 Locus_32 #> ALT3          0        0        0        0        0 #> BAR360        0        0        0       NA        0 #> BLL5          0       NA        0        0       NA #> BNT5          0        0       NA       NA        0 #> BOF1          0       NA       NA       NA       NA gen <- simple_impute(gen) # Check that NAs are gone gen[1:5, 1:5] #>        Locus_10 Locus_15 Locus_22 Locus_28 Locus_32 #> ALT3          0        0        0        0        0 #> BAR360        0        0        0        0        0 #> BLL5          0        0        0        0        0 #> BNT5          0        0        0        0        0 #> BOF1          0        0        0        0        0"},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"determining-the-number-of-latent-factors-using-select_k","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM)","what":"Determining the number of latent factors using select_K()","title":"LFMM","text":"LFMM requires user define number latent factors (K values). algatr provides options perform four types K selection using K_selection parameter within select_K() function: K_selection = \"tracy_widom\": Tracy-Widom test performed. Briefly, method finds significant eigenvalues matrix performing PCA. argument uses tw() function within AssocTests package, also requires user provide criticalpoint, corresponds significance level. Significance levels alpha=0.05, 0.01, 0.005, 0.001 correspond critical point values 0.9793, 2.0234, 2.4224, 3.2724, respectively. default significance level 0.05, default criticalpoint parameter 2.0234. Tracy-Widom test also default method select_K() function. K_selection = \"quick_elbow\": “quick elbow” found automatically, refers large percent drop eigenvalues given variance 5% principal component (essentially scree test). code determine quick elbow adapted developed Nicholas Cooper . argument requires users set threshold defines whether principal component explains ‘much’ variance using low argument, also maximum percentage variance capture elbow (.e., cumulative sum PC ‘n’) using max.pc argument. default low 0.08, default max.pc 0.90. K_selection = \"tess\": automatic K selection performed running TESS. method minimizes slope line connects cross-entropy scores K values. approach described . argument requires users provide coordinates (coords) set range K values test (Kvals; defaults 1:10). K_selection = \"find_clusters\": Uses K-means clustering detect number clusters best describe data; uses find.clusters() function adegenet package. method, data first transformed using PCA, successive K-means clustering run increasing number K values. “best” K selected using \"diffNgroup” criterion adegenet’s find.clusters function. algatr’s \"find_clusters\" argument requires users set several parameters PCA K-means clustering steps: user must specify minimum amount total variance preserved retained axes using perc.pca argument. default argument 90%. maximum number clusters tested using max.n.clust parameter; default 10. options within find.clusters function adegenet, ’ve chosen include algatr (e.g., pca.select argument set \"percVar\"). Please refer adegenet documentation information. Let’s see methods compare one another terms K values compare. Regardless K selection ’s done, user must provide dosage matrix (gen) K selection procedure like perform (K_selection).   can see, K selection method quite effect best number latent factors discovered data. vignette, let’s move forward best K default method (Tracy-Widom test), means K = 6.","code":"# Keep relevant params but retain default values for them select_K(gen, K_selection = \"tracy_widom\", criticalpoint = 2.0234) # 6 #> [1] 6  select_K(gen, K_selection = \"quick_elbow\", low = 0.08, max.pc = 0.90) # 3 #> [1] 3  select_K(gen, K_selection = \"tess\", coords = liz_coords, Kvals = 1:10) # 3 #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done #> [1] 3  select_K(gen, K_selection = \"find_clusters\", perc.pca = 90, max.n.clust = 10) # 4 #> [1] 4"},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"comparing-different-lfmm-methods-with-lfmm_run","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM)","what":"Comparing different LFMM methods with lfmm_run()","title":"LFMM","text":"main function algatr runs LFMM lfmm_run(). function requires users provide dosage matrix (gen), extracted environmental variables (env), number latent factors (K), LFMM method (lfmm_method). Importantly, LFMM can performed using two main methods (\"lasso\" \"ridge\"), primarily differ penalized loss functions incorporated least-squares minimization specified using lfmm_method argument. least-squares minimization statistical significance determined SNPs associated environmental variables. primary difference two methods ridge method minimizes problem L^2 penalty, whereas lasso method minimizes L^1 penalty. According Caye & François 2017, user want select lasso method (.e., L^1-norm) induce “sparsity fixed effects, corresponds prior information response variables may associated variables interest. specifically, prior implies limited number rows effect size matrix B effectively non-zero.” ridge penalty described Caye et al. 2019. One argument aware within lfmm_run() adjustment p-values, specified using p_adj. two options p_adj: \"fdr\", adjusts calibrated p-values based false discovery rate (default). options p-value adjustment can found within p.adjust() function stats package. Finally, last argument aware within lfmm_run() calibrate, calibrates p-values based resulting z-scores. two options argument: \"gif\" (default), \"median+MAD\". LFMM documentation: “”gif” option set (default), significance values calibrated using genomic control method. Genomic control uses robust estimate variance z-scores called “genomic inflation factor”. “median+MAD” option set, pvalues calibrated computing median MAD zscores. NULL, pvalues calibrated.” Now ’ve identified number latent factors provide model, let’s run LFMM using ridge lasso penalties default settings (.e., FDR p-value adjustment “gif” calibration). results object lfmm_run() contains 5 elements: lfmm_snps: list candidate SNPs statistically significantly associated environmental variables, including relevant information pertaining LFMM analysis (e.g., p-values, fixed effects, etc.) df: SNPs associations, including relevant information pertaining LFMM analysis model: parameters LFMM model, including matrices B, U, V lfmm_test_result: results association testing K: number latent factors LFMM run using (case, 6)","code":"ridge_results <- lfmm_run(gen, env, K = 6, lfmm_method = \"ridge\") lasso_results <- lfmm_run(gen, env, K = 6, lfmm_method = \"lasso\")"},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"visualizing-lfmm-results","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM)","what":"Visualizing LFMM results","title":"LFMM","text":"three main ways can visualize results LFMM analysis. automatically produced lfmm_run(), can produce individually well functions . lfmm_table(): Build table SNP association (p-value) environmental variable. function allows quite bit customization terms displayed: sig: significance threshold (alpha value) sig_only: whether display SNPs significance threshold top: SNPs significantly associated multiple environmental variables, display top association (.e., variable maximum B value) order: whether order SNPs descending order based B value, otherwise ordered based environmental variable var: display SNPs associated one environmental variable nrow: number rows display digits: number decimal places include footnotes: whether include footnotes describing variables displayed p_adj: whether p-values adjusted lfmm_run() lfmm_qqplot(): Build QQ-plot (quantile-quantile plot) plots expected quantiles (percentiles) p-values. lfmm_manhattanplot(): Build Manhattan plot defined significance threshold.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"building-a-table-of-snp-associations-with-lfmm_table","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM) > Visualizing LFMM results","what":"Building a table of SNP associations with lfmm_table()","title":"LFMM","text":"Let’s see top candidate SNPs LFMM runs: can see , penalty chosen makes quite bit difference terms many significant SNPs found (6 lasso method, 35 ridge method). However, three SNPs largest effect size two methods (loci 2338, 125, 859), effect sizes p-values comparable. tables also contain columns calibrated z-score, calibrated p-values, adjusted p-values. Recall adjusted p-values calculated based setting p_adj argument; case, adjusted based false discovery rate, differ non-adjusted p-values (.e., values p-value column). Let’s look SNPs significantly associated PCA2 environmental variable lasso method:","code":"# Build tables for each of our LFMM runs, displaying only significant SNPs and ordering according to effect size (B) lfmm_table(lasso_results$df, order = TRUE) lfmm_table(ridge_results$df, order = TRUE) lfmm_table(lasso_results$df, order = TRUE, var = \"CA_rPCA2\") # Be aware that if significant SNPs < nrow, function will return NULL object # lfmm_table(lasso_results$df, sig_only = FALSE, order = FALSE, nrow=10)  # Similarly, the same will occur if you try to specify a variable that is not significantly associated with a SNP # lfmm_table(lasso_results$df, sig_only = TRUE, var = \"CA_rPCA1\")"},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"building-a-qqplot-with-lfmm_qqplot","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM) > Visualizing LFMM results","what":"Building a QQplot with lfmm_qqplot()","title":"LFMM","text":"QQplot plots theoretical quantiles p-value quantiles, providing way visualize normality test significance values. line plotted runs intercept slope 1. points ideally fall along reference line:","code":"lfmm_qqplot(lasso_results$df) #> Warning: Removed 414 rows containing non-finite outside the scale range #> (`stat_qq()`)."},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"building-a-manhattan-plot-using-lfmm_manhattanplot","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM) > Visualizing LFMM results","what":"Building a Manhattan plot using lfmm_manhattanplot()","title":"LFMM","text":"Manhattan plots helpful ways visualize position outlier SNPs across genome, well much exceed user-specified significance threshold environmental variable.  ridge method LFMM run, can see () outliers lasso method , (b) majority outliers associated environmental PC2.","code":"# As displayed in our table from above, only six SNPs are visible on the lasso method plots as outliers: lfmm_manhattanplot(lasso_results$df, sig = 0.05) #> Warning: Removed 414 rows containing missing values or values outside the scale range #> (`geom_point()`). lfmm_manhattanplot(ridge_results$df, sig = 0.05) #> Warning: Removed 414 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"running-lfmm-with-lfmm_do_everything","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM)","what":"Running LFMM with lfmm_do_everything()","title":"LFMM","text":"algatr package also option run functionality single function, lfmm_do_everything(). function automatically extract relevant values environmental layers given coordinate data; also automatically convert vcf object dosage matrix us impute missing values present. output looks output lfmm_run() , plots automatically produced. Please aware do_everything() functions meant exploratory. recommend use final analyses unless certain properly parameterized.","code":"lfmm_full_everything <- lfmm_do_everything(liz_vcf, CA_env, liz_coords,                                impute = \"structure\",                               K_impute = 3,                               lfmm_method = \"lasso\",                                K_selection = \"tracy_widom\")"},{"path":"https://thewanglab.github.io/algatr/articles/LFMM_vignette.html","id":"additional-documentation-and-citations","dir":"Articles","previous_headings":"Latent factor mixed models (LFMM)","what":"Additional documentation and citations","title":"LFMM","text":"Retrieve LFMM’s vignette:","code":"vignette(\"lfmm\") #> starting httpd help server ... done"},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"multiple-matrix-regression-with-randomization-mmrr","dir":"Articles","previous_headings":"","what":"Multiple matrix regression with randomization (MMRR)","title":"MMRR","text":"using MMRR, please cite following: Wang .J. (2013) Examining full effects landscape heterogeneity spatial genetic variation: multiple matrix regression approach quantifying geographic ecological isolation. Evolution 67(1):3403-3411. DOI:10.1111/evo.12134 Multiple matrix regression randomization (Wang 2013) examines heterogeneity landscape (geographic environmental) affects spatial genetic variation, allowing user determine relative contributions isolation distance (.e., association genetic geographic distances) isolation environment (.e., association genetic environmental distances). MMRR can provide information concerning dependent variables (case, genetic data) change respect multiple independent variables (environmental geographic distances). randomization aspect MMRR significance testing performed random permutations rows columns dependent matrix (genetic distances), necessary non-independence values pairwise distance matrices. significance testing completed, MMRR provides individual regression coefficients p-values dependent variable “coefficient ratio,” ratio regression coefficients, thus provides idea relative contributions IBD IBE explaining variation genetic distances data. assumptions built function users aware : (1) coordinates genetic distance files MUST ordering individuals; isn’t check , (2) function assumes individual sampling coordinates (even population-based sampling performed).","code":"library(algatr) library(here) library(raster)"},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"read-in-and-process-genetic-data","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR)","what":"Read in and process genetic data","title":"MMRR","text":"Let’s load example dataset extract environmental variables based sampling coordinates. perform MMRR, need genetic distance matrix; please refer genetic distances vignette information generate algatr using vcf file.","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>  Y <- as.matrix(liz_gendist)"},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"process-environmental-data","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR)","what":"Process environmental data","title":"MMRR","text":"Let’s calculate environmental distances extracted environmental values using env_dist() function, add geographic distances matrix using geo_dist() function. information two functions work, please refer algatr’s environmental data processing vignette.","code":"# Extract values from our environmental raster (CA_env) env <- raster::extract(CA_env, liz_coords) # Calculate environmental distances X <- env_dist(env) # Add geographic distance to X X[[\"geodist\"]] <- geo_dist(liz_coords)"},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"run-mmrr","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR)","what":"Run MMRR","title":"MMRR","text":"can run MMRR using mmrr_run() function. can either run full model (variable selection) setting model = \"full\", running variable selection procedure using backwards elimination setting model = \"best\" within function. arguments mmrr_run() follows: Y: matrix genetic distances X: matrix environmental distances (including geographic distances) sampling coordinate nperm: number permutations perform stdz: whether matrices standardized","code":""},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"mmrr-with-all-variables","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR) > Run MMRR","what":"MMRR with all variables","title":"MMRR","text":"First, let’s run full MMRR model variables included (.e., variable selection). results running “full” MMRR model contains four elements: coeff_df: dataframe statistics relating variable’s distance related genetic distance, including coefficient values environmental variable geographic distance mod: dataframe containing statistics results model, including R^2 value, F statistics X Y: input data","code":"set.seed(10) results_full <- mmrr_run(Y, X, nperm = 99, stdz = TRUE, model = \"full\")"},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"mmrr-with-model-selection","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR) > Run MMRR","what":"MMRR with model selection","title":"MMRR","text":"Now, let’s run MMRR variable selection. , results running mmrr_run() model selection contains elements “full”, except “best” model result now also X_best element, contains values significant variables; case, significant variable found geographic distance. can also see coeff_df element reduced four variables variables significantly associated genetic distance (test example case, geographic distance).","code":"# Run MMRR with all variables set.seed(01) results_best <- mmrr_run(Y, X, nperm = 99, stdz = TRUE, model = \"best\")"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"plotting-mmrr-results-with-mmrr_plot","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR) > Visualizing MMRR results","what":"Plotting MMRR results with mmrr_plot()","title":"MMRR","text":"Let’s take look results MMRR analyses . can produce several plots visualize results mmrr_plot() function, including plotting single variable relationships (plot_type = \"vars\"), plotting fitted relationship compares predicted observed genetic distances (plot_type = \"fitted\"), plotting covariances predictor variables (plot_type = \"cov\"). Lastly, can set plot_type = \"\" produce three plots MMRR run.    results compare “best” model?","code":"# Single variable plot mmrr_plot(Y, X, mod = results_full$mod, plot_type = \"vars\", stdz = TRUE) # Fitted variable plot mmrr_plot(Y, X, mod = results_full$mod, plot_type = \"fitted\", stdz = TRUE) # Covariance plot mmrr_plot(Y, X, mod = results_full$mod, plot_type = \"cov\", stdz = TRUE) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 mmrr_plot(Y, X, mod = results_best$mod, plot_type = \"all\", stdz = TRUE)"},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"look-at-mmrr-output-statistics-with-mmrr_table","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR) > Visualizing MMRR results","what":"Look at MMRR output statistics with mmrr_table()","title":"MMRR","text":"can also take closer look output statistics MMRR runs using mmrr_table() function. function also provide summary statistics set summary_stats TRUE (default). estimate column contains coefficients variables. N.B.: significance values may change slightly due permutation procedure.","code":"mmrr_table(results_full, digits = 2, summary_stats = TRUE)"},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"running-mmrr-with-mmrr_do_everything","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR)","what":"Running MMRR with mmrr_do_everything()","title":"MMRR","text":"algatr package also option run functionality single function, mmrr_do_everything(). function runs MMRR specifying whether user like run variable selection (using model argument), producing table plots automatically. automatically extract environmental variables based coordinates calculate environmental distances data. Users can also choose include geographic distances within independent variable matrix setting geo = TRUE (default setting). Please aware do_everything() functions meant exploratory. recommend use final analyses unless certain properly parameterized.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"mmrr-with-all-variables-1","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR) > Running MMRR with mmrr_do_everything()","what":"MMRR with all variables","title":"MMRR","text":"","code":"set.seed(01) mmrr_full_everything <- mmrr_do_everything(liz_gendist, liz_coords, env = CA_env, geo = TRUE, model = \"full\")"},{"path":"https://thewanglab.github.io/algatr/articles/MMRR_vignette.html","id":"extending-mmrrs-functionality-with-resistance-distances","dir":"Articles","previous_headings":"Multiple matrix regression with randomization (MMRR) > Running MMRR with mmrr_do_everything()","what":"Extending MMRR’s functionality with resistance distances","title":"MMRR","text":"relationships geographic distance /environmental variables spatial genetic variation result patterns isolation distance (IBD) isolation environment (IBE), respectively. However, one key phenomenon can occur - one landscape genomicists often interested examining - one landscape features act restrict gene flow, resulting pattern known isolation resistance (IBR). IBR typically investigated first generating resistance surface provides information landscape “resists” gene flow given study organism. , given resistance surface, resistance distances can calculated using () variety methods, typically use circuit theory model connectivity across landscape. resistance surface can generated using species distribution models, habitat suitability models, types approaches simulate forward evolution given sampling localities genotypes (e.g., resistanceGA; Peterman 2018). Building reliable resistance surface can quite complex, requiring many decisions part researcher , cases, extensive parameterization model testing generate type surface. sets decisions precisely algatr explicitly implement IBR methods, describe one way package can extended . briefly mentioned environmental data vignette, geo_dist() function able calculate resistance-based distances, largely using gdistance package (van Etten 2017). Importantly, user must provide resistance surface using whichever preferred method specifying lyr argument. function creates transition surface calculates circuit distances (random-walk commute distances) using gdistance::commuteDistance() function. Although algatr explicit functionality quantify visualize IBR, can investigate IBR using MMRR given method conducts multiple Mantel test given distance metric. Thus, possible run geo_dist() specifying lyr resistance raster use resulting distances input MMRR. following toy example done. example ’ll pretend resistance surface one environmental layers (greater values indicate resistance) use calculate resistance distances.  Now, can run MMRR including resistance-based distances input data.","code":"# here we aggregate the layer for computational speed lyr <- aggregate(CA_env$CA_rPCA1, 50) plot(lyr) points(liz_coords) # Recreate MMRR input with resistance distances # Calculate environmental distances X <- env_dist(env) # Add geographic distance to X X[[\"resistdist\"]] <- geo_dist(liz_coords, type = \"resistance\", lyr = lyr) #> Calculating resistance distances... This can be time consuming with many points and large rasters. # Run MMRR with resistance distances results_resist <- mmrr_run(Y, X, nperm = 99, stdz = TRUE, model = \"full\") mmrr_plot(Y, X, mod = results_resist$mod, plot_type = \"all\", stdz = TRUE) mmrr_table(results_resist)"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"redundancy-analysis-rda","dir":"Articles","previous_headings":"","what":"Redundancy analysis (RDA)","title":"RDA","text":"using RDA, please cite following: Capblancq T., Forester B.R. (2021) Redundancy analysis: Swiss Army Knife landscape genomics. Methods Ecology Evolution 12:2298-2309. DOI:10.1111/2041-210X.13722 Redundancy analysis (RDA) genotype-environment association (GEA) method uses constrained ordination detect outlier loci significantly associated environmental variables. combining regression (response variables genetic data, case, explanatory variables environmental data) ordination (PCA). Importantly, RDA multivariate (.e., multiple loci can considered time), appealing cases multilocus selection may occurring. Model selection performed starting null model wherein response explained intercept, environmental variables added amount variance explained model includes variables reached. , method minimizes redundancy among explanatory variables. Importantly, can also perform RDA accounts covariables (“conditioning variables”) account neutral population structure. covariables included, called partial RDA. algatr, population structure quantified running PCA genetic data, selecting number PC axes best represent type neutral variation. earliest examples uses RDA identifying environment-associated loci Lasky et al. 2012 Forester et al. 2016. Since , several reviews walkthroughs method provide additional information, including workflows comparisons GEA methods (e.g., Forester et al. 2018). Much algatr’s code adapted one paper, Capblancq & Forester 2021, code available . algatr’s general workflow roughly follows framework Capblancq & Forester (2021). RDA take missing values. Imputation based per-site median commonly performed, several ways researchers can deal missing values. example, algatr contains str_impute() function impute missing values based population structure using LEA::impute() function. However, , ’ll opt impute median, strongly urge researchers use extreme caution using form simplistic imputation. mainly provide code impute median testing datasets highly discourage use analyses (please use str_impute() instead!). general workflow perform RDA algatr follows: Simple vs. partial RDAs: can run simple RDA (covariables) partial RDA (conditioning covariables included) using rda_run() Variable selection: simple partial RDAs can performed considering variables (\"full\" model) performing variable selection determine variables contribute genetic variance (\"best\" model) Variance partitioning: can perform variance partitioning considering variables contribute significantly genetic variance using rda_varpart() Detecting outlier loci: Based results , can detect outlier loci rda_getoutliers()","code":"library(algatr) library(dplyr) library(raster) library(vegan)"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"read-in-and-process-genetic-data","dir":"Articles","previous_headings":"Redundancy analysis (RDA)","what":"Read in and process genetic data","title":"RDA","text":"Running RDA requires two data files input: genotype dosage matrix (gen argument) environmental values extracted sampling coordinates (env argument). Let’s first convert vcf dosage matrix using vcf_to_dosage() function. N.B.: code assumes sample IDs genetic data coords order; sure check moving forward! mentioned , running RDA requires genotype matrix contains missing values. Let’s impute missing values based per-site median. N.B.: type simplistic imputation strongly recommended downstream analyses used example’s sake!","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>  # Convert from vcf to dosage matrix: gen <- vcf_to_dosage(liz_vcf) #> Loading required namespace: adegenet # Are there NAs in the data? gen[1:5, 1:5] #>        Locus_10 Locus_15 Locus_22 Locus_28 Locus_32 #> ALT3          0        0        0        0        0 #> BAR360        0        0        0       NA        0 #> BLL5          0       NA        0        0       NA #> BNT5          0        0       NA       NA        0 #> BOF1          0       NA       NA       NA       NA gen <- simple_impute(gen) # Check that NAs are gone gen[1:5, 1:5] #>        Locus_10 Locus_15 Locus_22 Locus_28 Locus_32 #> ALT3          0        0        0        0        0 #> BAR360        0        0        0        0        0 #> BLL5          0        0        0        0        0 #> BNT5          0        0        0        0        0 #> BOF1          0        0        0        0        0"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"process-environmental-data","dir":"Articles","previous_headings":"Redundancy analysis (RDA)","what":"Process environmental data","title":"RDA","text":"Let’s extract environmental variables using extract() function raster package. also need standardize environmental variables. particularly important using (example) bioclimatic variables input, units measurement completely different (e.g., mm precipitation vs. degrees Celsius temperature). , ’ll use scale() function within raster package.","code":"#  Extract values from our environmental raster (CA_env) env <- raster::extract(CA_env, liz_coords)  # Standardize environmental variables and make into dataframe env <- scale(env, center = TRUE, scale = TRUE) env <- data.frame(env)"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"running-simple-and-partial-rdas-using-rda_run-with-and-without-variable-selection","dir":"Articles","previous_headings":"Redundancy analysis (RDA)","what":"Running simple and partial RDAs using rda_run(), with and without variable selection","title":"RDA","text":"main function within algatr perform RDA rda_run(), uses rda() function within vegan package.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"run-a-simple-rda-with-no-variable-selection","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Running simple and partial RDAs using rda_run(), with and without variable selection","what":"Run a simple RDA with no variable selection","title":"RDA","text":"simple RDA one model account covariables model, default rda_run(). Let’s first run simple RDA environmental variables (.e., variable selection). specified using model = \"full\" argument. resulting object large, containing 12 elements relevant RDA. Let’s take look function called. can see environmental variables (CA_rPCA1, 2, 3) included model, geography structure included model (conditioning variables). Now, let’s take look summary model. One important parts object partitioning variance. Within RDA, term “inertia” can interpreted variance, results show us amount variance explained explanatory variables alone (constrained inertia) 9.768%. Unconstrained inertia residual variance, high (90.232%). summary also provides site scores, site constraints, biplot scores. One relevant statistics present RDA model adjusted R2 value. R2 value must adjusted; , biased always increase independent variables added (.e., penalization adding independent variables aren’t significantly affecting dependent variables within model). adjusted R2 value full (global) model can also help us determine stopping point go variable selection. can see, unadjusted R2 0.098, adjusted value 0.042. sure always report adjusted R2 values.","code":"mod_full <- rda_run(gen, env, model = \"full\") mod_full$call #> rda(formula = gen ~ CA_rPCA1 + CA_rPCA2 + CA_rPCA3, data = moddf) head(summary(mod_full)) #>  #> Call: #> rda(formula = gen ~ CA_rPCA1 + CA_rPCA2 + CA_rPCA3, data = moddf)  #>  #> Partitioning of variance: #>               Inertia Proportion #> Total          143.39    1.00000 #> Constrained     14.01    0.09768 #> Unconstrained  129.38    0.90232 #>  #> Eigenvalues, and their contribution to the variance  #>  #> Importance of components: #>                          RDA1    RDA2    RDA3     PC1     PC2     PC3     PC4 #> Eigenvalue            7.28806 4.98205 1.73568 18.6608 9.31326 7.51572 5.53312 #> Proportion Explained  0.05083 0.03474 0.01210  0.1301 0.06495 0.05241 0.03859 #> Cumulative Proportion 0.05083 0.08557 0.09768  0.2278 0.29277 0.34518 0.38377 #>                           PC5    PC6     PC7     PC8     PC9    PC10    PC11 #> Eigenvalue            4.51893 4.0443 3.69111 3.30413 3.09940 3.04539 3.00412 #> Proportion Explained  0.03152 0.0282 0.02574 0.02304 0.02162 0.02124 0.02095 #> Cumulative Proportion 0.41529 0.4435 0.46923 0.49228 0.51389 0.53513 0.55608 #>                          PC12    PC13    PC14    PC15    PC16   PC17    PC18 #> Eigenvalue            2.83164 2.80969 2.74342 2.58682 2.47393 2.4664 2.32471 #> Proportion Explained  0.01975 0.01959 0.01913 0.01804 0.01725 0.0172 0.01621 #> Cumulative Proportion 0.57583 0.59542 0.61456 0.63260 0.64985 0.6671 0.68326 #>                          PC19    PC20    PC21    PC22    PC23    PC24    PC25 #> Eigenvalue            2.29159 2.22955 2.15249 2.10481 2.01172 1.94388 1.90538 #> Proportion Explained  0.01598 0.01555 0.01501 0.01468 0.01403 0.01356 0.01329 #> Cumulative Proportion 0.69925 0.71480 0.72981 0.74449 0.75852 0.77207 0.78536 #>                          PC26    PC27    PC28    PC29    PC30    PC31    PC32 #> Eigenvalue            1.82439 1.79687 1.68505 1.64293 1.59963 1.56602 1.50690 #> Proportion Explained  0.01272 0.01253 0.01175 0.01146 0.01116 0.01092 0.01051 #> Cumulative Proportion 0.79808 0.81062 0.82237 0.83382 0.84498 0.85590 0.86641 #>                          PC33     PC34    PC35     PC36    PC37     PC38 #> Eigenvalue            1.46174 1.433419 1.34638 1.331355 1.28477 1.253763 #> Proportion Explained  0.01019 0.009997 0.00939 0.009285 0.00896 0.008744 #> Cumulative Proportion 0.87661 0.886602 0.89599 0.905277 0.91424 0.922981 #>                          PC39     PC40    PC41     PC42     PC43     PC44 #> Eigenvalue            1.23738 1.175289 1.13416 1.072082 1.067608 1.017457 #> Proportion Explained  0.00863 0.008197 0.00791 0.007477 0.007446 0.007096 #> Cumulative Proportion 0.93161 0.939807 0.94772 0.955193 0.962639 0.969734 #>                           PC45     PC46     PC47     PC48     PC49 #> Eigenvalue            0.998927 0.910062 0.866439 0.836444 0.727872 #> Proportion Explained  0.006967 0.006347 0.006043 0.005833 0.005076 #> Cumulative Proportion 0.976701 0.983048 0.989090 0.994924 1.000000 #>  #> Accumulated constrained eigenvalues #> Importance of components: #>                         RDA1   RDA2   RDA3 #> Eigenvalue            7.2881 4.9820 1.7357 #> Proportion Explained  0.5204 0.3557 0.1239 #> Cumulative Proportion 0.5204 0.8761 1.0000 #>  #> Scaling 2 for species and site scores #> * Species are scaled proportional to eigenvalues #> * Sites are unscaled: weighted dispersion equal on all dimensions #> * General scaling constant of scores:  9.29244  #>  #>  #> Species scores #>  #>                RDA1       RDA2       RDA3        PC1        PC2        PC3 #> Locus_10  3.073e-02 -1.130e-02  2.569e-02 -1.786e-02  1.512e-02  3.392e-02 #> Locus_15  8.232e-02 -5.560e-02 -9.949e-02 -9.373e-02  9.032e-03  1.796e-02 #> Locus_22  9.598e-03  1.021e-03  2.333e-02  1.249e-01 -2.411e-02 -8.721e-03 #> Locus_28 -7.716e-02 -8.271e-02 -6.968e-02 -2.229e-02  3.464e-02  4.338e-02 #> Locus_32  1.095e-02 -1.692e-04  3.179e-02 -1.580e-02  7.483e-03  2.773e-02 #> Locus_35 -4.632e-32 -1.047e-31 -8.290e-32 -6.887e-17 -1.174e-16  4.446e-17 #> ....                                                                       #>  #>  #> Site scores (weighted sums of species scores) #>  #>           RDA1    RDA2    RDA3     PC1      PC2     PC3 #> ALT3    0.1226 -2.0313 -1.2154 -1.4589 -5.19649 -0.2248 #> BAR360 -0.1057  0.4007  1.8064  3.0848 -0.65319 -0.1428 #> BLL5    1.0500  0.2750 -1.8505 -0.3736  0.06138 -0.9738 #> BNT5   -3.0872 -1.0264 -1.1162 -0.3220  0.95783 -0.5125 #> BOF1    1.4722 -1.1017  0.2533 -0.2387  0.85134  0.9245 #> BOT3    0.8133  1.4762 -3.2847 -0.9511 -0.83835 -0.9639 #> ....                                                    #>  #>  #> Site constraints (linear combinations of constraining variables) #>  #>           RDA1    RDA2    RDA3     PC1      PC2     PC3 #> ALT3   -1.8641 -1.5623 -0.2679 -1.4589 -5.19649 -0.2248 #> BAR360  0.1641 -0.9647 -0.5288  3.0848 -0.65319 -0.1428 #> BLL5    1.8430  0.6239 -2.8780 -0.3736  0.06138 -0.9738 #> BNT5   -2.2991 -1.2711 -0.6227 -0.3220  0.95783 -0.5125 #> BOF1    1.4722 -1.0680  0.1644 -0.2387  0.85134  0.9245 #> BOT3    0.9142  1.3548 -2.0063 -0.9511 -0.83835 -0.9639 #> ....                                                    #>  #>  #> Biplot scores for constraining variables #>  #>             RDA1    RDA2    RDA3 PC1 PC2 PC3 #> CA_rPCA1 -0.2047  0.5350  0.8197   0   0   0 #> CA_rPCA2  0.5188  0.8393 -0.1625   0   0   0 #> CA_rPCA3  0.5561 -0.6174  0.5564   0   0   0 RsquareAdj(mod_full) #> $r.squared #> [1] 0.0976769 #>  #> $adj.r.squared #> [1] 0.04243263"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"run-a-simple-rda-with-variable-selection","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Running simple and partial RDAs using rda_run(), with and without variable selection","what":"Run a simple RDA with variable selection","title":"RDA","text":"Now, let’s run RDA model variable selection specifying \"best\" model within rda_run(). Variable selection occurs using ordiR2step() function vegan package, forward selection method begins null model adds explanatory variables one time genetic variance maximized. perform forward selection, need specify stopping criteria (.e., stop adding explanatory variables). two primary ways specify stopping criteria: parameters involved permutation-based significance test (two parameters: limits permutation p-values adding (Pin) dropping (Pout) term model, number permutations used estimation adjusted R2 (R2permutations)), whether use adjusted R2 value stopping criterion (R2scope; models adjusted R2 values lower specified accepted). Let’s look best model, see compares full model. also additional element mod_best object, results ANOVA-like permutation test. look call, can now see environmental PCs 2 3 considered model, meaning PC1 considered significantly associated genetic variance. Importantly, adjusted R2 value 0.039 (compared 0.042 full model), tells us model two environmental variables explains nearly much RDA three. Following variable selection, want retain two environmental variables (CA_rPCA2 CA_rPCA3) subsequent analyses.","code":"mod_best <- rda_run(gen, env,   model = \"best\",   Pin = 0.05,   R2permutations = 1000,   R2scope = T ) #> Step: R2.adj= 0  #> Call: gen ~ 1  #>   #>                  R2.adjusted #> <All variables> 0.0424326339 #> + CA_rPCA2      0.0196214014 #> + CA_rPCA3      0.0137427906 #> + CA_rPCA1      0.0009953656 #> <none>          0.0000000000 #>  #>            Df    AIC      F Pr(>F)    #> + CA_rPCA2  1 264.09 2.0407  0.008 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Step: R2.adj= 0.0196214  #> Call: gen ~ CA_rPCA2  #>   #>                 R2.adjusted #> <All variables>  0.04243263 #> + CA_rPCA3       0.03919420 #> + CA_rPCA1       0.01991617 #> <none>           0.01962140 #>  #>            Df    AIC      F Pr(>F)    #> + CA_rPCA3  1 263.97 2.0389  0.002 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Step: R2.adj= 0.0391942  #> Call: gen ~ CA_rPCA2 + CA_rPCA3  #>   #>                 R2.adjusted #> <All variables>  0.04243263 #> + CA_rPCA1       0.04243263 #> <none>           0.03919420 #>  #>            Df    AIC      F Pr(>F) #> + CA_rPCA1  1 264.72 1.1691  0.178 mod_best$call #> rda(formula = gen ~ CA_rPCA2 + CA_rPCA3, data = moddf) mod_best$anova #>                   R2.adj Df    AIC      F Pr(>F)    #> + CA_rPCA2      0.019621  1 264.09 2.0407  0.008 ** #> + CA_rPCA3      0.039194  1 263.97 2.0389  0.002 ** #> <All variables> 0.042433                            #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 RsquareAdj(mod_best) #> $r.squared #> [1] 0.07614827 #>  #> $adj.r.squared #> [1] 0.0391942"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"run-a-partial-rda-with-geography-as-a-covariable","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Running simple and partial RDAs using rda_run(), with and without variable selection","what":"Run a partial RDA with geography as a covariable","title":"RDA","text":"partial RDA, described beginning vignette, covariables (conditioning variables) incorporated RDA. Within rda_run(), correct geography, users can set correctGEO = TRUE, case sampling coordinates (coords) must also provided. Let’s now run partial RDA, without variable selection (full model) view results. Let’s take look partial RDA results. Note now, call includes conditioning variables x y, correspond latitude longitude values. Conditioning variables specified within rda() function using Condition() function. Finally, look summary resulting object, can see along total, constrained, unconstrained inertia (variance) simple RDA, additional row conditioned inertia partial RDA includes conditioning variables. Interestingly, conditioned inertia higher constrained inertia, suggesting geography associated genetic variance environmental variables .","code":"mod_pRDA_geo <- rda_run(gen, env, liz_coords,   model = \"full\",   correctGEO = TRUE,   correctPC = FALSE ) anova(mod_pRDA_geo) #> Permutation test for rda under reduced model #> Permutation: free #> Number of permutations: 999 #>  #> Model: rda(formula = gen ~ CA_rPCA1 + CA_rPCA2 + CA_rPCA3 + Condition(x + y), data = moddf) #>          Df Variance      F Pr(>F)     #> Model     3   11.306 1.5948  0.001 *** #> Residual 47  111.068                   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 RsquareAdj(mod_pRDA_geo) # 0.0305 #> $r.squared #> [1] 0.07884828 #>  #> $adj.r.squared #> [1] 0.03058243 head(summary(mod_pRDA_geo)) #>  #> Call: #> rda(formula = gen ~ CA_rPCA1 + CA_rPCA2 + CA_rPCA3 + Condition(x +      y), data = moddf)  #>  #> Partitioning of variance: #>               Inertia Proportion #> Total          143.39    1.00000 #> Conditioned     21.01    0.14656 #> Constrained     11.31    0.07885 #> Unconstrained  111.07    0.77459 #>  #> Eigenvalues, and their contribution to the variance  #> after removing the contribution of conditiniong variables #>  #> Importance of components: #>                          RDA1    RDA2    RDA3      PC1     PC2     PC3     PC4 #> Eigenvalue            6.87372 2.80216 1.63009 11.00385 7.49907 5.16346 4.68171 #> Proportion Explained  0.05617 0.02290 0.01332  0.08992 0.06128 0.04219 0.03826 #> Cumulative Proportion 0.05617 0.07907 0.09239  0.18231 0.24359 0.28578 0.32404 #>                           PC5     PC6     PC7     PC8     PC9    PC10    PC11 #> Eigenvalue            4.21148 3.72312 3.45801 3.19495 3.01860 2.98188 2.93280 #> Proportion Explained  0.03441 0.03042 0.02826 0.02611 0.02467 0.02437 0.02397 #> Cumulative Proportion 0.35845 0.38888 0.41714 0.44324 0.46791 0.49228 0.51624 #>                          PC12    PC13   PC14    PC15    PC16    PC17    PC18 #> Eigenvalue            2.79673 2.59175 2.5826 2.49887 2.45425 2.32321 2.29777 #> Proportion Explained  0.02285 0.02118 0.0211 0.02042 0.02006 0.01898 0.01878 #> Cumulative Proportion 0.53910 0.56028 0.5814 0.60180 0.62186 0.64084 0.65962 #>                          PC19    PC20    PC21    PC22    PC23   PC24    PC25 #> Eigenvalue            2.15916 2.14664 2.03834 2.00771 1.91618 1.8479 1.80441 #> Proportion Explained  0.01764 0.01754 0.01666 0.01641 0.01566 0.0151 0.01475 #> Cumulative Proportion 0.67726 0.69480 0.71146 0.72787 0.74352 0.7586 0.77337 #>                         PC26    PC27    PC28    PC29    PC30    PC31    PC32 #> Eigenvalue            1.7740 1.68265 1.64600 1.58626 1.52630 1.47782 1.45805 #> Proportion Explained  0.0145 0.01375 0.01345 0.01296 0.01247 0.01208 0.01191 #> Cumulative Proportion 0.7879 0.80162 0.81507 0.82803 0.84050 0.85258 0.86449 #>                          PC33    PC34    PC35    PC36    PC37     PC38     PC39 #> Eigenvalue            1.42866 1.37519 1.30318 1.27465 1.24443 1.221578 1.169694 #> Proportion Explained  0.01167 0.01124 0.01065 0.01042 0.01017 0.009982 0.009558 #> Cumulative Proportion 0.87617 0.88741 0.89805 0.90847 0.91864 0.928622 0.938181 #>                           PC40     PC41     PC42     PC43     PC44     PC45 #> Eigenvalue            1.073702 1.068009 1.045150 1.006285 0.935246 0.866846 #> Proportion Explained  0.008774 0.008727 0.008541 0.008223 0.007643 0.007084 #> Cumulative Proportion 0.946955 0.955682 0.964223 0.972446 0.980088 0.987172 #>                           PC46     PC47 #> Eigenvalue            0.841414 0.728431 #> Proportion Explained  0.006876 0.005952 #> Cumulative Proportion 0.994048 1.000000 #>  #> Accumulated constrained eigenvalues #> Importance of components: #>                        RDA1   RDA2   RDA3 #> Eigenvalue            6.874 2.8022 1.6301 #> Proportion Explained  0.608 0.2478 0.1442 #> Cumulative Proportion 0.608 0.8558 1.0000 #>  #> Scaling 2 for species and site scores #> * Species are scaled proportional to eigenvalues #> * Sites are unscaled: weighted dispersion equal on all dimensions #> * General scaling constant of scores:  9.29244  #>  #>  #> Species scores #>  #>                RDA1       RDA2       RDA3        PC1        PC2        PC3 #> Locus_10  3.455e-02  8.516e-03  2.220e-02  2.631e-02  3.045e-02 -5.347e-03 #> Locus_15  3.361e-02 -8.041e-02 -7.979e-02  5.156e-02  3.933e-02 -1.483e-01 #> Locus_22  4.500e-02  3.760e-03  1.079e-02 -8.323e-02 -1.622e-02 -5.073e-02 #> Locus_28 -6.112e-02 -6.035e-02 -6.888e-02  3.955e-02  3.835e-02  1.034e-02 #> Locus_32  1.352e-02  1.105e-02  2.971e-02  1.883e-02  2.562e-02  1.820e-02 #> Locus_35 -5.728e-32 -2.203e-31 -4.550e-32  5.385e-17 -1.621e-16  6.186e-17 #> ....                                                                       #>  #>  #> Site scores (weighted sums of species scores) #>  #>           RDA1    RDA2    RDA3     PC1     PC2      PC3 #> ALT3   -0.6074  1.5856  0.3496 -3.5502  0.5751  1.36394 #> BAR360  1.9028 -0.7660 -0.6439 -2.1245 -0.2723  0.32928 #> BLL5    0.6935  1.9687 -2.1865 -0.8111 -1.6626  0.32307 #> BNT5   -2.6158 -0.2921 -1.0298  0.5356 -0.7971  0.92231 #> BOF1    1.5909 -0.2182  0.1445  0.9682  0.7195  0.00126 #> BOT3   -1.1366 -1.4518 -1.2000 -0.1237 -0.2652 -1.77037 #> ....                                                    #>  #>  #> Site constraints (linear combinations of constraining variables) #>  #>           RDA1     RDA2     RDA3     PC1     PC2      PC3 #> ALT3   -1.4796  1.42372 -0.56620 -3.5502  0.5751  1.36394 #> BAR360  0.9953 -1.10207 -0.72739 -2.1245 -0.2723  0.32928 #> BLL5    0.7741  1.44224 -2.79896 -0.8111 -1.6626  0.32307 #> BNT5   -2.0626 -0.81597 -0.56826  0.5356 -0.7971  0.92231 #> BOF1    1.8148 -0.09947 -0.03338  0.9682  0.7195  0.00126 #> BOT3   -0.4265 -0.95308 -1.45302 -0.1237 -0.2652 -1.77037 #> ....                                                      #>  #>  #> Biplot scores for constraining variables #>  #>             RDA1    RDA2     RDA3 PC1 PC2 PC3 #> CA_rPCA1 -0.2345  0.4009  0.82275   0   0   0 #> CA_rPCA2  0.2021  0.3349 -0.08967   0   0   0 #> CA_rPCA3  0.6824 -0.2889  0.51661   0   0   0"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"run-a-partial-rda-with-population-genetic-structure-and-geography-as-covariables","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Running simple and partial RDAs using rda_run(), with and without variable selection","what":"Run a partial RDA with population genetic structure and geography as covariables","title":"RDA","text":"Lastly, let’s run partial RDA geography (correctGEO = TRUE) population structure (correctPC = TRUE) conditioning variables. Within algatr, population structure quantified using PCA, user can specify number axes retain RDA model. case, ’ll retain three axes, can specify using nPC argument. argument set \"manual\", screeplot printed user can manually enter number PCs feel best describe data.  Now, see even inertia/variance explained conditioning variables.","code":"mod_pRDA_gs <- rda_run(gen, env, liz_coords,   model = \"full\",   correctGEO = TRUE,   correctPC = TRUE,   nPC = 3 ) head(summary(mod_pRDA_gs)) #>  #> Call: #> rda(formula = gen ~ CA_rPCA1 + CA_rPCA2 + CA_rPCA3 + Condition(PC1 +      PC2 + PC3 + x + y), data = moddf)  #>  #> Partitioning of variance: #>               Inertia Proportion #> Total         143.389    1.00000 #> Conditioned    48.063    0.33519 #> Constrained     6.672    0.04653 #> Unconstrained  88.654    0.61828 #>  #> Eigenvalues, and their contribution to the variance  #> after removing the contribution of conditiniong variables #>  #> Importance of components: #>                          RDA1    RDA2    RDA3     PC1     PC2     PC3     PC4 #> Eigenvalue            2.72234 2.30006 1.64942 5.15035 4.44551 3.82383 3.55107 #> Proportion Explained  0.02856 0.02413 0.01730 0.05403 0.04663 0.04011 0.03725 #> Cumulative Proportion 0.02856 0.05269 0.06999 0.12402 0.17065 0.21077 0.24802 #>                           PC5     PC6     PC7     PC8     PC9    PC10    PC11 #> Eigenvalue            3.24764 3.02810 2.99645 2.95013 2.79913 2.65085 2.59129 #> Proportion Explained  0.03407 0.03177 0.03143 0.03095 0.02936 0.02781 0.02718 #> Cumulative Proportion 0.28209 0.31385 0.34529 0.37623 0.40560 0.43341 0.46059 #>                          PC12    PC13    PC14    PC15    PC16    PC17    PC18 #> Eigenvalue            2.52112 2.46520 2.34331 2.30029 2.16258 2.15304 2.05042 #> Proportion Explained  0.02645 0.02586 0.02458 0.02413 0.02269 0.02259 0.02151 #> Cumulative Proportion 0.48704 0.51290 0.53748 0.56161 0.58430 0.60688 0.62839 #>                          PC19    PC20    PC21   PC22    PC23    PC24    PC25 #> Eigenvalue            2.01366 1.92134 1.85435 1.8112 1.79300 1.68266 1.65184 #> Proportion Explained  0.02112 0.02016 0.01945 0.0190 0.01881 0.01765 0.01733 #> Cumulative Proportion 0.64952 0.66967 0.68912 0.7081 0.72693 0.74458 0.76191 #>                          PC26    PC27    PC28    PC29    PC30    PC31    PC32 #> Eigenvalue            1.58977 1.52980 1.47897 1.46048 1.44680 1.38037 1.30440 #> Proportion Explained  0.01668 0.01605 0.01551 0.01532 0.01518 0.01448 0.01368 #> Cumulative Proportion 0.77859 0.79464 0.81015 0.82547 0.84065 0.85513 0.86882 #>                          PC33    PC34    PC35    PC36    PC37    PC38    PC39 #> Eigenvalue            1.27639 1.24668 1.22365 1.17070 1.07515 1.06819 1.05602 #> Proportion Explained  0.01339 0.01308 0.01284 0.01228 0.01128 0.01121 0.01108 #> Cumulative Proportion 0.88221 0.89528 0.90812 0.92040 0.93168 0.94289 0.95396 #>                          PC40     PC41    PC42     PC43     PC44 #> Eigenvalue            1.00764 0.940164 0.86839 0.842461 0.729857 #> Proportion Explained  0.01057 0.009863 0.00911 0.008838 0.007656 #> Cumulative Proportion 0.96453 0.974396 0.98351 0.992344 1.000000 #>  #> Accumulated constrained eigenvalues #> Importance of components: #>                        RDA1   RDA2   RDA3 #> Eigenvalue            2.722 2.3001 1.6494 #> Proportion Explained  0.408 0.3447 0.2472 #> Cumulative Proportion 0.408 0.7528 1.0000 #>  #> Scaling 2 for species and site scores #> * Species are scaled proportional to eigenvalues #> * Sites are unscaled: weighted dispersion equal on all dimensions #> * General scaling constant of scores:  9.29244  #>  #>  #> Species scores #>  #>                RDA1       RDA2       RDA3        PC1        PC2        PC3 #> Locus_10 -1.265e-02 -1.062e-02  2.431e-02  9.693e-03 -2.614e-03 -1.546e-03 #> Locus_15  7.156e-02 -4.414e-02 -7.566e-02  1.528e-01 -1.710e-02  9.218e-02 #> Locus_22  6.219e-03  1.821e-04  1.421e-02  3.812e-02 -1.478e-02 -2.112e-02 #> Locus_28  7.276e-02  6.051e-02 -7.430e-02 -2.306e-02 -2.088e-02  9.904e-03 #> Locus_32 -1.466e-02  1.498e-03  2.902e-02 -1.417e-02 -3.597e-03  4.626e-02 #> Locus_35  5.557e-32 -1.811e-32 -4.247e-32  6.817e-17 -7.435e-17  1.546e-18 #> ....                                                                       #>  #>  #> Site scores (weighted sums of species scores) #>  #>            RDA1     RDA2    RDA3      PC1      PC2      PC3 #> ALT3   -3.04653  0.18212 -1.0379 -0.18125  1.19052 -0.81292 #> BAR360  1.30674  0.16343 -0.8067 -0.88740 -0.67411  0.08499 #> BLL5   -0.49562  0.28265 -1.8134 -1.24385  0.01825  0.64437 #> BNT5    1.40006  2.26681 -0.9036 -1.60174  0.47698  0.20989 #> BOF1    0.02238 -0.58659  0.3529  0.09616  0.13024 -0.17068 #> BOT3    1.17354 -0.09847 -1.3900  1.99555 -0.56848  0.21693 #> ....                                                        #>  #>  #> Site constraints (linear combinations of constraining variables) #>  #>            RDA1     RDA2    RDA3      PC1      PC2      PC3 #> ALT3   -2.30233  0.17848 -1.2731 -0.18125  1.19052 -0.81292 #> BAR360  1.37941 -0.06513 -0.6461 -0.88740 -0.67411  0.08499 #> BLL5   -0.43214  0.25009 -2.2783 -1.24385  0.01825  0.64437 #> BNT5    1.44455  1.47169 -0.5322 -1.60174  0.47698  0.20989 #> BOF1   -0.06742 -1.15996  0.1743  0.09616  0.13024 -0.17068 #> BOT3    0.55754 -0.97519 -1.5380  1.99555 -0.56848  0.21693 #> ....                                                        #>  #>  #> Biplot scores for constraining variables #>  #>             RDA1     RDA2     RDA3 PC1 PC2 PC3 #> CA_rPCA1 -0.3709  0.31874  0.78617   0   0   0 #> CA_rPCA2 -0.3373 -0.09457 -0.06287   0   0   0 #> CA_rPCA3  0.2301 -0.44499  0.58235   0   0   0"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"variance-partitioning-with-partial-rda","dir":"Articles","previous_headings":"Redundancy analysis (RDA)","what":"Variance partitioning with partial RDA","title":"RDA","text":"many cases, want understand independent contributions explanatory variable combination covariables. Also, can understand much confounded variance (.e., variation explained combination multiple explanatory variables). best way run partial RDAs set explanatory variables examine inertia pRDA result compares full model. case, full model RDA considers neutral processes explanatory variables rather conditioning variables (covariables). call full model looks like : rda(gen ~ env + covariable, data), rather true partial RDA take form: rda(gen ~ env + Condition(covariable), data). algatr, can run variance partitioning using function rda_varpart(), run full model () run successive pRDAs conditioned three successive sets variables. variable sets significant environmental variables (case, environmental PCs 2 3), population genetic structure (determined using PC user-specified number PC axes), geography (sampling coordinates). function provide us information variance partitioned form table containing relevant statistics; table nearly identical Table 2 Capblancq & Forester 2021. rda_varpart() parameters identical rda_run(). rda_run(), can provide number number PCs consider population structure (nPC), argument can set \"manual\" user like manually enter number console viewing screeplot. can use rda_varpart_table() visualize results aesthetically pleasing way; users can specify whether display function call table (call_col; defaults FALSE) number digits round digits (default 2).  table, can see full model explains 27% total variance genetic data. Furthermore, pure environmental model explains small proportion variance (“inertia”) contained within full model (9%), population structure explains substantially (44%). also large amount variance (37%) within full model confounded, meaning variables within three variable sets explain substantial amount full model’s variance combination one another. relatively common occurrence (see Capblancq & Forester 2021), users always keep mind collinearity may affect results (account , possible; see algatr’s environmental data vignette information ). However, accounting collinearity may also elevate false positive rates, failing account can lead elevated false negative rates. case, clear variance partitioning analysis much variation genetic data can explained population structure, thus users may want explore sophisticated approaches quantifying demographic history population structure moving forward outlier loci detection. analyses, careful consideration input data biology system critical draw robust reliable conclusions.","code":"varpart <- rda_varpart(gen, env, liz_coords,   Pin = 0.05, R2permutations = 1000,   R2scope = T, nPC = 3 ) #> Step: R2.adj= 0  #> Call: gen ~ 1  #>   #>                  R2.adjusted #> <All variables> 0.0424326339 #> + CA_rPCA2      0.0196214014 #> + CA_rPCA3      0.0137427906 #> + CA_rPCA1      0.0009953656 #> <none>          0.0000000000 #>  #>            Df    AIC      F Pr(>F)    #> + CA_rPCA2  1 264.09 2.0407  0.004 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Step: R2.adj= 0.0196214  #> Call: gen ~ CA_rPCA2  #>   #>                 R2.adjusted #> <All variables>  0.04243263 #> + CA_rPCA3       0.03919420 #> + CA_rPCA1       0.01991617 #> <none>           0.01962140 #>  #>            Df    AIC      F Pr(>F)    #> + CA_rPCA3  1 263.97 2.0389  0.006 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Step: R2.adj= 0.0391942  #> Call: gen ~ CA_rPCA2 + CA_rPCA3  #>   #>                 R2.adjusted #> <All variables>  0.04243263 #> + CA_rPCA1       0.04243263 #> <none>           0.03919420 #>  #>            Df    AIC      F Pr(>F) #> + CA_rPCA1  1 264.72 1.1691   0.17 rda_varpart_table(varpart, call_col = TRUE)"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"identifying-candidate-snps-with-rda_getoutliers","dir":"Articles","previous_headings":"Redundancy analysis (RDA)","what":"Identifying candidate SNPs with rda_getoutliers()","title":"RDA","text":"run variance partitioning data, can now move forward detecting outlier loci significantly associated environmental variables. , ’ll first run partial RDA significant environmental variables, ’ll also want add population structure covariable (.e., conditioning variable). ’ll retain two PC axes measurement population structure.  Given partial RDA, environmental PC2 considered significant. Now RDA model, can discover SNPs outliers. algatr, can done using two different methods detect outlier loci, specified outlier_method argument. first uses Z-scores outlier detection, Forester et al. 2018; code can found . method transforms RDA loadings p-values, developed Capblancq et al. 2018 described Capblancq & Forester 2021; code developed run associated Capblancq Forester 2021 can found . provide brief explanations methods . N.B.: researchers may prefer MAF filtering linkage disequilibrium pruning outlier detection (e.g., Capblancq & Forester 2021). case, one SNP per contig selected based highest loading. algatr pipeline filtering initially processing genetic data; see data processing vignette information.","code":"mod_pRDA <- rda_run(gen, env, model = \"best\", correctPC = TRUE, nPC = 2) #> Step: R2.adj= 0  #> Call: gen ~ 1  #>   #>                         R2.adjusted #> <All variables>        0.0202527037 #> + CA_rPCA2             0.0196214014 #> + CA_rPCA3             0.0137427906 #> + CA_rPCA1             0.0009953656 #> <none>                 0.0000000000 #> + Condition(PC1 + PC2) 0.0000000000 #>  #>            Df    AIC      F Pr(>F)    #> + CA_rPCA2  1 264.09 2.0407  0.002 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Step: R2.adj= 0.0196214  #> Call: gen ~ CA_rPCA2  #>   #>                        R2.adjusted #> + CA_rPCA3              0.03919420 #> <All variables>         0.02025270 #> + CA_rPCA1              0.01991617 #> <none>                  0.01962140 #> + Condition(PC1 + PC2)  0.01834925 mod_pRDA$anova #>                   R2.adj Df    AIC      F Pr(>F)    #> + CA_rPCA2      0.019621  1 264.09 2.0407  0.002 ** #> <All variables> 0.020253                            #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"identifying-outliers-using-the-z-scores-method","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Identifying candidate SNPs with rda_getoutliers()","what":"Identifying outliers using the Z-scores method","title":"RDA","text":"understand Z-scores method works detect outliers, let’s first take look loadings SNPs first two RDA axes using rda_plot() function. show us histograms selected RDA axes. SNPs associated environmental variables fall center distributions, outliers falling edges. Z-score method works setting Z-score (number standard deviations) threshold beyond SNPs considered outliers (see details). set value stringently, minimize false positive rate risk detecting false negatives; ’s set high, increase false positive rate. Researchers want adjust parameter based tolerance detecting false positives, also strength selection outliers subject (assuming SNPs significantly associated environmental variables also stronger selection). one environmental variable associated genetic data, one resulting RDA axis.  Now, let’s discover outliers rda_getoutliers() function. method specified using outlier_method argument, number standard deviations detect outliers specified z argument; defaults 3. resulting object dataframe containing SNP name, RDA axis ’s associated , loading along axis. screeplot RDA axes automatically generated (can switched using plot argument).","code":"rda_plot(mod_pRDA, axes = \"all\", binwidth = 20) rda_sig_z <- rda_getoutliers(mod_pRDA, naxes = \"all\", outlier_method = \"z\", z = 3, plot = FALSE)  # How many outlier SNPs were detected? length(rda_sig_z$rda_snps) #> [1] 19"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"identifying-outliers-using-the-p-value-method","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Identifying candidate SNPs with rda_getoutliers()","what":"Identifying outliers using the p-value method","title":"RDA","text":"Another method detect outliers p-value method wherein rather using loadings along RDA axes identify extreme outliers (Z-scores method ), loadings transformed p-values. , Mahalanobis distances calculated locus, scaled based genomic inflation factor, p-values q-values can computed. adjust p-values (based false discovery rate, example; adjustment done using p.adjust() function) subsequently identify outliers based user-specified significance threshold. Rather detecting outliers based p-value significance threshold, one also detect outliers based q-values (also provided output algatr), done Capblancq et al. 2018 Capblancq & Forester 2021. , select loci fall user-specified threshold based proportion false positives allow. example, allow 10% fewer outliers false positives, outliers identified based loci q-values =< 0.1. Now, let’s detect outliers using method. , along outlier_method, need specify p_adj, method p-values adjusted, well sig, significance threshold. also tell function produce screeplot. One limitation p-value outlier method calculate outliers given fewer two RDA axes (case partial RDA results). , let’s move forward outlier detection method using results simple RDA model variable selection, mod_best. mentioned , also identify outliers based q-values. , can extract q-values resulting object rda_getoutliers(). Note differences two methods: using p-value method, found many outlier SNPs Z-scores method (101 vs. 19). Even outliers found using q-values significant threshold (170). can also see 19 SNPs detected using three methods.","code":"rda_sig_p <- rda_getoutliers(mod_best, naxes = \"all\", outlier_method = \"p\", p_adj = \"fdr\", sig = 0.01, plot = FALSE)  # How many outlier SNPs were detected? length(rda_sig_p$rda_snps) #> [1] 101 # Extract SNP names; choices is number of axes snp_names <- rownames(scores(mod_best, choices = 2, display = \"species\"))  # Identify outliers that have q-values < 0.1 q_sig <-   rda_sig_p$rdadapt %>%   mutate(snp_names = snp_names) %>%   filter(q.values <= 0.1)  # How many outlier SNPs were detected? nrow(q_sig) #> [1] 170 Reduce(intersect, list(   q_sig$snp_names,   rda_sig_p$rda_snps,   rda_sig_z$rda_snps )) #>  [1] \"Locus_517\"  \"Locus_771\"  \"Locus_786\"  \"Locus_945\"  \"Locus_1247\" #>  [6] \"Locus_1263\" \"Locus_1278\" \"Locus_1318\" \"Locus_1374\" \"Locus_1439\" #> [11] \"Locus_1524\" \"Locus_1801\" \"Locus_1949\" \"Locus_2045\" \"Locus_2338\" #> [16] \"Locus_2431\" \"Locus_2559\" \"Locus_2665\" \"Locus_2947\""},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"visualizing-rda-results-with-rda_plot","dir":"Articles","previous_headings":"Redundancy analysis (RDA)","what":"Visualizing RDA results with rda_plot()","title":"RDA","text":"algatr provides options visualizing RDA results two ways rda_plot() function: biplot Manhattan plot.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"rda-biplot","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Visualizing RDA results with rda_plot()","what":"RDA biplot","title":"RDA","text":"Let’s build biplot (call triplot, since also shows loadings environmental variables) RDA axes 1 2, specified using rdaplot argument. case, also need specify number axes display using biplot_axes argument. default rda_plot() plot variables, regardless whether considered significant .","code":"rda_plot(mod_best, rda_sig_p$rda_snps, biplot_axes = c(1, 2), rdaplot = TRUE, manhattan = FALSE) # In the case of our partial RDA, there was only one RDA axis, so a histogram is generated rda_plot(mod_pRDA, rda_sig_z$rda_snps, rdaplot = TRUE, manhattan = FALSE, binwidth = 0.01)"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"manhattan-plot","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Visualizing RDA results with rda_plot()","what":"Manhattan plot","title":"RDA","text":"Let’s now build Manhattan plot significance level 0.05 using manhattan argument; set TRUE, must also provide significance threshold value using sig argument (default 0.05). aware outliers detected different p-value threshold grey points threshold line (.e., data points colorized according threshold model, visualization).","code":"rda_plot(mod_best, rda_sig_p$rda_snps, rda_sig_p$pvalues, rdaplot = FALSE, manhattan = TRUE)"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"interpreting-rda-results","dir":"Articles","previous_headings":"Redundancy analysis (RDA)","what":"Interpreting RDA results","title":"RDA","text":"discussed Capblancq & Forester 2021, users aware “statistical selection variables optimizes variance explained , , identify ecological mechanistic drivers genetic variation.”","code":""},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"identifying-environmental-associations-with-rda_cor-and-rda_table","dir":"Articles","previous_headings":"Redundancy analysis (RDA) > Interpreting RDA results","what":"Identifying environmental associations with rda_cor() and rda_table()","title":"RDA","text":"Now ’ve identified outlier loci, useful able identify much correlate environmental variable. , can run correlation test SNP using rda_cor() summarize results customizable table using rda_table().","code":"# Extract genotypes for outlier SNPs rda_snps <- rda_sig_p$rda_snps rda_gen <- gen[, rda_snps]  # Run correlation test cor_df <- rda_cor(rda_gen, env)  # Make a table from these results (displaying only the first 5 rows): rda_table(cor_df, nrow = 5) # Order by the strength of the correlation rda_table(cor_df, order = TRUE, nrow = 5) # Only retain the top variable for each SNP based on the strength of the correlation rda_table(cor_df, top = TRUE, nrow = 5) # Display results for only one environmental variable rda_table(cor_df, var = \"CA_rPCA2\", nrow = 5)"},{"path":"https://thewanglab.github.io/algatr/articles/RDA_vignette.html","id":"running-rda-with-rda_do_everything","dir":"Articles","previous_headings":"Redundancy analysis (RDA)","what":"Running RDA with rda_do_everything()","title":"RDA","text":"algatr package also option run functionality single function, rda_do_everything(). function similar structure rda_run(), also performs imputation (impute option), can generate figures, correlation test table (cortest option; default TRUE), variance partitioning (varpart option; default FALSE). Please aware do_everything() functions meant exploratory. recommend use final analyses unless certain properly parameterized. resulting object rda_do_everything() contains: Candidate SNPs: rda_snps Data frame environmental associations outlier SNPs: cor_df RDA model specifics: rda_mod Outlier test results: rda_outlier_test Relevant R-squared values: rsq ANOVA results: anova List p-values: pvalues Variance partitioning results: varpart Let’s first run simple RDA, imputing median, variable selection p-value outlier method: Now, let’s run partial RDA, imputing based 3 sNMF clusters, correcting geography structure, instead using Z-score method detect outlier loci, including variance partitioning. ’ll keep number PCs population structure set default, three axes (nPC):","code":"results <- rda_do_everything(liz_vcf, CA_env, liz_coords,                              impute = \"simple\",                              correctGEO = FALSE,                              correctPC = FALSE,                              outlier_method = \"p\",                              sig = 0.05,                              p_adj = \"fdr\",                              cortest = TRUE,                              varpart = FALSE ) results <- rda_do_everything(liz_vcf, CA_env, liz_coords,                              impute = \"structure\",                              K_impute = 3,                              model = \"full\",                              correctGEO = TRUE,                              correctPC = TRUE,                              nPC = 3,                              varpart = TRUE,                              outlier_method = \"z\",                              z = 3 )"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"tess","dir":"Articles","previous_headings":"","what":"TESS","title":"TESS","text":"using TESS, please cite following: Caye K., Deist T.M., Martins H., Michel O., François O. (2016) TESS3: fast inference spatial population structure genome scans selection. Molecular Ecology Resources 16(2):540-548. DOI: 10.1111/1755-0998.12471. TESS method estimate population structure using ancestry coefficient estimates. STRUCTURE, one first describes genetic variation assigning individuals according numbers clusters (K values). Given “best” number K values, individuals given proportions belong K. proportions correspond ancestry coefficients, can interpreted proportion individual’s ancestry belonging different ancestral groups. Keep mind may want prune SNPs may linkage disequilibrium prior running TESS bias overinflate significance results. Please refer data processing vignette information can done algatr using ld_prune() function. Unlike STRUCTURE, TESS spatially explicit, taking account coordinate data; thus, ancestry coefficient estimates incorporate knowledge sampling space. TESS3 (Caye et al. 2016) later developed extension TESS algorithm, modifications underlying statistical clustering algorithm increase computational speed. additional information original development implementation algorithm used TESS, see François et al. 2006 Chen et al. 2007. Finally, code primarily uses tess3r package (see documentation).","code":"library(algatr) library(here) library(wingen) library(tess3r) library(ggplot2) library(terra) library(raster) library(fields) library(rworldmap) library(automap) library(cowplot)  # for plotting (from TESS) source(\"http://membres-timc.imag.fr/Olivier.Francois/Conversion.R\") source(\"http://membres-timc.imag.fr/Olivier.Francois/POPSutilities.R\") #> [1] \"Loading fields\" #> [1] \"Loading RColorBrewer\""},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"read-in-and-process-input-data","dir":"Articles","previous_headings":"TESS","what":"Read in and process input data","title":"TESS","text":"Running TESS3 requires three data files: genotype dosage matrix (gen argument), coordinates samples (coords argument), environmental layers (envlayers argument). can use vcf vcf_to_dosage() function convert vcf dosage matrix.","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>  # Our code assumes that the first column is longitude and second is latitude; check this: head(liz_coords) #>           x        y #> 1 -120.3972 41.56120 #> 3 -116.8923 34.16940 #> 5 -124.0408 40.90450 #> 7 -118.5614 37.78830 #> 8 -119.7194 37.72386 #> 9 -121.8467 36.35440 # Also, our code assumes that sample IDs from gendist and coords are the same order; be sure to check this before moving forward! # Convert vcf to genotype matrix liz_dosage <- vcf_to_dosage(liz_vcf) #> Loading required namespace: adegenet"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"process-environmental-data","dir":"Articles","previous_headings":"TESS","what":"Process environmental data","title":"TESS","text":"algatr can create interpolated maps ancestry coefficient estimates using method known kriging, uses spatially explicit model spatial interpolation. N.B.: aware tess3r uses different type kriging generate maps ancestry coefficients (algatr uses autoKrige() function within automap package), tess3r performs interpolation plotting function, easy way produce raster output. generate map, need raster onto can map Q values. can either retrieve , generate one using wingen’s coords_to_raster() function. Please refer wingen documentation found , environmental data vignette, information function.","code":"# First, create a grid for kriging # We can use one environmental layer (PC1), aggregated (i.e., increased cell size) to increase computational speed krig_raster <- raster::aggregate(CA_env[[1]], fact = 6)  # If you want to see the difference between the non-aggregated (original) and aggregated rasters: terra::plot(CA_env[[1]], col = mako(100), axes = FALSE) terra::plot(krig_raster, col = mako(100), axes = FALSE)"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"k-selection","dir":"Articles","previous_headings":"TESS","what":"K selection","title":"TESS","text":"algatr allows users option test range K values using tess_ktest() function. K selection often accomplished minimizing cross entropy, can -simplify K selection. tess_ktest() function allows users specify K selection done using K_selection argument; users can set K values manually (\"manual\") using automatic approach described (\"auto\"). tess_ktest() runs TESS value K within user-specified range, outputs cross-validation scores different K values allows user select “best” K dataset. Users option select algorithm TESS run using tess_method argument; options argument either projected least squares algorithm (\"projected.ls\"; default) alternating quadratic programming algorithm (\"qp\"). Finally, mentioned beginning vignette, TESS spatially explicit meaning can take account distance samples. degree users suspect spatial autocorrelation data points can controlled using spatial regularization (alpha) parameter, specified lambda argument. Values closer 1 samples geographically closer also suspected genetically similar values closer 0 imply little spatial autocorrelation.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"manual-k-selection","dir":"Articles","previous_headings":"TESS > K selection","what":"Manual K selection","title":"TESS","text":"default K selection (\"manual\") within tess_ktest() runs TESS set K values ranging 1-10, allows user select “best” K value manually based cross-validation scores. Typically, researchers select “best” K value minimizing cross-validation scores.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"automatic-k-selection","dir":"Articles","previous_headings":"TESS > K selection","what":"Automatic K selection","title":"TESS","text":"K selection method available automatic K selection specifying \"auto\" within tess_ktest() function. method based minimizing cross-entropy scores (typically done), minimizes slope line connects cross-entropy scores K values. way, best K selected “elbow” visible, cross-entropy scores begin plateau slope approaches 0. function makes use approach described . resulting object contains tess3_obj, provides cross-validation scores different K values tested. Let’s automatic K-value testing procedure K values 1-10. can see, tess_ktest() function outputs plot cross-validation scores K value, red dashed line indicating best K value obtained automatic K selection procedure described . vignette, ’ll use automatic K selection.","code":"# Best K is 3; this provides a more reasonable estimate for the \"best\" K compared to manual selection above tess3_result <- tess_ktest(liz_dosage, liz_coords, Kvals = 1:10, ploidy = 2, K_selection = \"auto\")"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"k-selection-results-from-test_ktest","dir":"Articles","previous_headings":"TESS > K selection","what":"K selection results from test_ktest()","title":"TESS","text":"tess3_result object contains results best-supported K value, including: K: value best-supported K (3, case) tess3_obj: Results cross-validation analysis values K coords: Sampling coordinates Kvals: range K values tested grid: RasterLayer upon ancestry coefficients mapped; NULL case pops: Population assignments (determined based maximum Q value) individual best K value","code":""},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"running-tess-with-no-k-selection","dir":"Articles","previous_headings":"TESS > K selection","what":"Running TESS with no K selection","title":"TESS","text":"want run TESS without K selection, just run TESS normal following: resulting object run typical TESS output format (also contained within tess3_obj object); see tess3r vignette details read .","code":"tess3_obj_noK <- tess3(liz_dosage, coord = as.matrix(liz_coords), K = 3, method = \"projected.ls\", ploidy = 2) #> == Computing spectral decomposition of graph laplacian matrix: done #> ==Main loop with 1 threads: done"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"extracting-tess-results","dir":"Articles","previous_headings":"TESS","what":"Extracting TESS results","title":"TESS","text":"Now know K value want use (K = 3) automatic K selection results, can move forward TESS. need extract tess3 object results, create Q-matrix ancestry coefficient values K = 3 using qmatrix() function can visualize results.","code":"# Get TESS object and best K from results tess3_obj <- tess3_result$tess3_obj bestK <- tess3_result[[\"K\"]]  # Get Qmatrix with ancestry coefficients qmat <- qmatrix(tess3_obj, K = bestK)  # qmat contains ancestry coefficient values for each individual (row) and each K value (column) head(qmat) #>              [,1]         [,2]         [,3] #> [1,] 8.912318e-06 9.999822e-01 8.912318e-06 #> [2,] 9.078581e-06 9.078581e-06 9.999818e-01 #> [3,] 1.400880e-01 7.283417e-01 1.315702e-01 #> [4,] 8.160929e-01 1.177097e-01 6.619744e-02 #> [5,] 9.826377e-06 8.991739e-01 1.008163e-01 #> [6,] 7.303619e-02 9.269539e-01 9.867361e-06"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"krige-q-values","dir":"Articles","previous_headings":"TESS","what":"Krige Q values","title":"TESS","text":"tess_krig() function take ancestry coefficient values (Q-matrix) krige values based raster provided (krig_raster ). produce Raster* type object.","code":"krig_admix <- tess_krig(qmat, liz_coords, krig_raster)"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"bar-plot-of-q-values","dir":"Articles","previous_headings":"TESS > Visualizing TESS results","what":"Bar plot of Q values","title":"TESS","text":"typical representation population structure results STRUCTURE-style bar plot, stacked bar represents individual proportion stacked color represents proportion ancestry assigned individual cluster (K value). case, K=3, three colors representing K values. algatr custom function, tess_barplot(), generate plots TESS results. automatically sort individuals based Q values (although can modified using sort_by_Q argument, desired); outputted “order” message indicates individuals ordered bar plot.  can also build bar plots using ggplot2 tess_ggbarplot() function.","code":"tess_barplot(qmat) #> $order #>  [1]  4 13 20 28 29 31 32 35 36 52 53  2 10 19 24 25 40 41 49 50 51  1  3  5  6 #> [26]  7  8  9 11 12 14 15 16 17 18 21 22 23 26 27 30 33 34 37 38 39 42 43 44 45 #> [51] 46 47 48 tess_ggbarplot(qmat, legend = FALSE)"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"building-maps-in-tess3-using-tess_ggplot","dir":"Articles","previous_headings":"TESS > Visualizing TESS results","what":"Building maps in TESS3 using tess_ggplot()","title":"TESS","text":"Now let’s explore Q values (ancestry coefficients) mapped. tess_ggplot() function take kriged admixture values sampling coordinates (user wants points mapped), provides several options plot method (plot_method argument): \"maxQ\" plots maximum Q value cell (default) \"allQ\" plots Q-values greater user-specified minQ value \"maxQ_poly\" plots maxQ polygons K-value instead continuous Q values \"allQ_poly\" plots allQ polygons K-value instead continuous Q values","code":"par(mfrow = c(2, 2), pty = \"s\", mar = rep(0, 4))  tess_ggplot(krig_admix, plot_method = \"maxQ\") #> Warning: Using alpha for a discrete variable is not advised. tess_ggplot(krig_admix, plot_method = \"allQ\", minQ = 0.20) #> Warning: Using alpha for a discrete variable is not advised. #> $plot #>  #> $legend #> Warning: Using alpha for a discrete variable is not advised. tess_ggplot(krig_admix, plot_method = \"maxQ_poly\") tess_ggplot(krig_admix, plot_method = \"allQ_poly\", minQ = 0.20)"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"extended-plotting","dir":"Articles","previous_headings":"TESS > Visualizing TESS results","what":"Extended plotting","title":"TESS","text":"many cases, user may want customizability mapping TESS results. users want control color, can use ggplot_fill argument. Also, users want x y axes displayed, can set using plot_axes argument:  may also want plot individual layers (K values), can using tess_plot_allK().","code":"tess_ggplot(krig_admix, plot_method = \"maxQ\", ggplot_fill = scale_fill_manual(values = c(\"#bd9dac\", \"#257b94\", \"#476e9e\")), plot_axes = TRUE) par(mfrow = c(1, nlyr(krig_admix)), mar = rep(2, 4), oma = rep(1, 4)) tess_plot_allK(krig_admix, col_breaks = 20, legend.width = 2)"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"plotting-with-default-tess3r-package-functions","dir":"Articles","previous_headings":"TESS","what":"Plotting with default tess3r package functions","title":"TESS","text":"can, course, also plot TESS results using tess3r package defaults provided algatr. TESS function barplot barplot().  can also map kriged Q-values using tess3r plot() function.  can see , interpolation done using different method tess3r, resulting smoothed surface differs produced using algatr.","code":"barplot(qmat, sort.by.Q = TRUE, border = NA, space = 0, xlab = \"Individuals\", ylab = \"Ancestry coefficients\") #> Use CreatePalette() to define color palettes. #> $order #>  [1]  4 13 20 28 29 31 32 35 36 52 53  2 10 19 24 25 40 41 49 50 51  1  3  5  6 #> [26]  7  8  9 11 12 14 15 16 17 18 21 22 23 26 27 30 33 34 37 38 39 42 43 44 45 #> [51] 46 47 48 plot(qmat,   liz_coords,   method = \"map.max\",   interpol = FieldsKrigModel(10),   main = \"Ancestry coefficients\",   xlab = \"Longitude\", ylab = \"Latitude\",   col.palette = CreatePalette(),   resolution = c(300, 300), cex = .4 ) #> Warning:  #> Grid searches over lambda (nugget and sill variances) with  minima at the endpoints:  #>   (REML) Restricted maximum likelihood  #>    minimum at  right endpoint  lambda  =  0.003324997 (eff. df= 38.94999 ) #> Warning:  #> Grid searches over lambda (nugget and sill variances) with  minima at the endpoints:  #>   (REML) Restricted maximum likelihood  #>    minimum at  right endpoint  lambda  =  0.003324997 (eff. df= 38.94999 ) #> Warning:  #> Grid searches over lambda (nugget and sill variances) with  minima at the endpoints:  #>   (REML) Restricted maximum likelihood  #>    minimum at  right endpoint  lambda  =  0.003324997 (eff. df= 38.94999 )"},{"path":"https://thewanglab.github.io/algatr/articles/TESS_vignette.html","id":"running-tess-with-tess_do_everything","dir":"Articles","previous_headings":"TESS","what":"Running TESS with tess_do_everything()","title":"TESS","text":"algatr package also option run functionality single function, tess_do_everything(). N.B.: tess_do_everything() function require dosage matrix; conversion automatically vcf provided. Please aware do_everything() functions meant exploratory. recommend use final analyses unless certain properly parameterized. tess_do_everything() function print barplot, cross-validation scores range K values tested, kriged map (grid provided). also print order individuals ordered barplot. resulting object function contains: K: best K value based user-specified K selection Qmatrix: matrix individual ancestry coefficients, Q values krig_admix: RasterBrick object containing kriged ancestry coefficient values mapping; grid provided, function skip kriging tess_results: tess3r object containing cross-entropy scores K value tested coords: Sampling coordinates Kvals: Range K values tested grid: RasterLayer upon Q values mapped","code":"# One could also use krig_raster as the grid object results <- tess_do_everything(liz_vcf, liz_coords, grid = CA_env[[1]], Kvals = 1:10, K_selection = \"auto\") #> Please be aware: the do_everything functions are meant to be exploratory. We do not recommend their use for final analyses unless certain they are properly parameterized. #> New names: #> • `` -> `...1`"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/data_processing_vignette.html","id":"processing-genomic-data-files","dir":"Articles","previous_headings":"","what":"Processing genomic data files","title":"Genetic data processing","text":"landscape genomic analyses, first need process input data files various ways. important understand data processing , vignette, ’ll following: vcf_to_dosage() convert vcf file dosage matrix str_impute() simple_impute() impute missing data two different ways ld_prune() prune variants linkage disequilibrium one another; primarily uses snpgdsLDpruning() function within SNPRelate package (Zheng et al. 2012; see information)","code":"library(algatr) library(purrr) library(dplyr) library(ggplot2) library(here)"},{"path":"https://thewanglab.github.io/algatr/articles/data_processing_vignette.html","id":"converting-a-vcf-to-a-dosage-matrix-with-vcf_to_dosage","dir":"Articles","previous_headings":"Processing genomic data files","what":"Converting a vcf to a dosage matrix with vcf_to_dosage()","title":"Genetic data processing","text":"Recall way genotypes encoded within vcf: \"0/0\" denotes individual homozygous reference allele, \"0/1\" heterozygote, \"1/1\" homozygote alternate allele; NA missing data. dosage matrix contains row individual (unlike vcf) column site. Importantly, genotypes now encoded single number. diploid organism, three possibilities coding genotypes dosage matrix: 0, 1, 2 (corresponding 0/0, 1/1, 0/1 vcf, respectively). NA still represents missing data. can convert vcf dosage matrix using vcf_to_dosage() function:","code":"# Load the example data load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>   # Look at genotypes for five individuals at eight sites: liz_vcf@gt[1:8, 2:6] #>      ALT3  BAR360 BLL5  BNT5  BOF1  #> [1,] \"0/0\" \"0/0\"  \"0/0\" \"0/0\" \"0/0\" #> [2,] \"0/0\" \"0/0\"  NA    \"0/0\" NA    #> [3,] \"0/0\" \"0/0\"  \"0/0\" NA    NA    #> [4,] \"0/0\" NA     \"0/0\" NA    NA    #> [5,] \"0/0\" \"0/0\"  NA    \"0/0\" NA    #> [6,] NA    \"0/0\"  \"0/0\" \"0/0\" NA    #> [7,] NA    \"0/0\"  \"0/0\" NA    \"0/0\" #> [8,] \"1/1\" \"1/1\"  \"0/1\" \"0/0\" \"0/0\" dosage <- vcf_to_dosage(liz_vcf) #> Loading required namespace: adegenet  # Look at genotypes for five individuals at five sites: dosage[1:5, 1:8] #>        Locus_10 Locus_15 Locus_22 Locus_28 Locus_32 Locus_35 Locus_37 Locus_61 #> ALT3          0        0        0        0        0       NA       NA        2 #> BAR360        0        0        0       NA        0        0        0        2 #> BLL5          0       NA        0        0       NA        0        0        1 #> BNT5          0        0       NA       NA        0        0       NA        0 #> BOF1          0       NA       NA       NA       NA       NA        0        0"},{"path":"https://thewanglab.github.io/algatr/articles/data_processing_vignette.html","id":"imputation-of-missing-values","dir":"Articles","previous_headings":"Processing genomic data files","what":"Imputation of missing values","title":"Genetic data processing","text":"underlying statistical framework, several landscape genomics methods accept missing data input. Within algatr, two GEA methods (RDA LFMM) examples methods. deal inevitable missing data, researchers typically perform imputation, wherein values assigned missing data based criteria. example, simplistic imputation one missing values imputed based median value across individuals; one can imagine extremely simplistic assumes lot data samples. quite developments missing data imputation recent years; suggest take look Money et al. 2015 Shi et al. 2018 starting point examples can done. algatr functionality impute missing values two ways: simplistic median-based approach described using simple_impute() sophisticated imputation method, str_impute() uses underlying population structure assign missing values. Let’s first take look simple_impute() using dosage matrix just generated step prior one: Now, let’s use str_impute() impute missing values based population structure. function two main things: (1) runs SNMF generate ancestry coefficients based single range K-values; (2) uses LEA::impute() function impute missing values based SNMF results. way, imputation method taking consideration population structure assuming individuals sharing ancestral clusters similar one another; certainly, better assumption imputing based median across individuals. number arguments str_impute() function, inherit LEA::snmf(): gen specifies genotype data can dosage matrix, vcfR object, path vcf file, sNMF project (.e., object type snmfProject) ’ve already run SNMF want use imputation K specifies single value range K-values sNMF run entropy whether calculate cross-entropy criteria (defaults TRUE) repetitions specifies number repetitions (runs) K-value (defaults 10) project specifies whether want start new sNMF project (\"new\"; default), whether want continue existing SNMF project (\"continue\") overwrite existing results (\"force\") quiet produces plot cross-entropy scores K value sNMF, set FALSE. default nothing printed (quiet = TRUE). best K value sNMF results based minimizing cross-entropy scores save_output specifies whether like output files saved file (string) (left NULL; default). string provided, output files saved argument’s string prefix. Files saved include SNMF results, original dosage matrix .geno .lfmm files, imputed .lfmm file  Let’s take look two imputation methods compare calculating genetic distances using gen_dist_corr() function plots relationship two distance metrics (please see genetic distances vignette information).","code":"# Are there NAs in the data? dosage[1:5, 1:5] #>        Locus_10 Locus_15 Locus_22 Locus_28 Locus_32 #> ALT3          0        0        0        0        0 #> BAR360        0        0        0       NA        0 #> BLL5          0       NA        0        0       NA #> BNT5          0        0       NA       NA        0 #> BOF1          0       NA       NA       NA       NA simple_dos <- simple_impute(dosage) # Check that NAs are gone simple_dos[1:5, 1:5] #>        Locus_10 Locus_15 Locus_22 Locus_28 Locus_32 #> ALT3          0        0        0        0        0 #> BAR360        0        0        0        0        0 #> BLL5          0        0        0        0        0 #> BNT5          0        0        0        0        0 #> BOF1          0        0        0        0        0 str_dos <- str_impute(gen = dosage, K = 1:3, entropy = TRUE, repetitions = 3, quiet = FALSE, save_output = FALSE) str_dist <- as.matrix(ecodist::distance(str_dos, method = \"euclidean\")) simple_dist <- as.matrix(ecodist::distance(simple_dos, method = \"euclidean\")) gen_dist_corr(dist_x = simple_dist, dist_y = str_dist, metric_name_x = \"simple\", metric_name_y = \"SNMF\")"},{"path":"https://thewanglab.github.io/algatr/articles/data_processing_vignette.html","id":"removing-sites-that-are-in-linkage-disequilibrium-using-ld_prune","dir":"Articles","previous_headings":"Processing genomic data files","what":"Removing sites that are in linkage disequilibrium using ld_prune()","title":"Genetic data processing","text":"analyses, may want prune linked sites data bias results. particularly case methods estimate population structure (e.g., TESS), population structure can overinflated SNPs appear independently support pattern. analyses - genotype-environment association methods like RDA LFMM - SNPs LD sometimes removed prior running analyses, recommend SNPs strongly associated environmental variables may pruned . However, failing account linkage may result overinflated conclusions environmental associations. solution perform LD-pruning run GEA methods; one approach retain SNPs strongest association (.e., lowest p-value) removing others linkage particular SNP (see approach described Capblancq & Forester 2021 information). perform LD-pruning, can use ld_prune() function (largely uses snpgdsLDpruning() function within SNPRelate package). function works first removing variants occur given minor allele frequency, pruning variants given correlation using sliding window approach. main arguments within function follows: ld.threshold specifies LD pruning threshold (default correlation coefficient value; thus, higher ld.threshold value, fewer variants pruned) slide.max.n specifies maximum number SNPs sliding window (defaults 100) maf specifies minor allele frequency (defaults 0.05) vcf specifies path vcf file like pruned out_name specifies prefix output file names out_format specifies file type (options \"vcf\" vcf gds files [default], \"plink\" ped map files) save_output specifies whether like new directory made containing output (intermediate) files; default TRUE. set FALSE, function simply return vcf object. way call function follows: vcf_ldpruned <- ld_prune(vcf = \"test.vcf\", out_name = \"liz\", out_format = \"vcf\", ld.threshold = 0.9, slide.max.n = 10) running function within vignette avoid generating intermediate files, example line creates new directory called liz_LDpruned, contains five files: LOGFILE, information many sites pruned many remain, three gds files (pre- post-pruned SNP GDS files GDS SeqArray file), pruned vcf. output files named ld.threshold slide.max.n parameter settings contained file names.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/data_processing_vignette.html","id":"additional-options-for-data-visualization","dir":"Articles","previous_headings":"Processing genomic data files","what":"Additional options for data visualization","title":"Genetic data processing","text":"alternate way visualize matrices can helpful many overlapping data points using geom_hex() function ggplot2 package. plotting style bins data points hexagons colorized based number data points contained within hexagon. Let’s take look style plot using comparison imputed genetic distances generated earlier vignette. makes things easy, let’s re-run gen_dist_corr() function extract data output. way, ’s already processed us.","code":"if (!require(\"hexbin\", quietly = TRUE)) install.packages(\"hexbin\") library(hexbin) # Gather data plot <- gen_dist_corr(dist_x = simple_dist, dist_y = str_dist, metric_name_x = \"simple\", metric_name_y = \"SNMF\")  # Now, build plot ggplot(plot$data, aes(x = simple, y = SNMF) ) +   geom_hex() +   theme_bw() +   scale_fill_continuous(type = \"viridis\")"},{"path":"https://thewanglab.github.io/algatr/articles/data_processing_vignette.html","id":"additional-documentation-and-citations","dir":"Articles","previous_headings":"Processing genomic data files","what":"Additional documentation and citations","title":"Genetic data processing","text":"Retrieve SNPRelate’s vignette:","code":"vignette(\"SNPRelate\") #> starting httpd help server ... done"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"processing-environmental-data-for-landscape-genomics","dir":"Articles","previous_headings":"","what":"Processing environmental data for landscape genomics","title":"Environmental data processing","text":"landscape genomic analyses, environmental data layers must processed several ways can used input methods. vignette explore several ways process environmental data: get_worldclim() pull environmental layers remotely WorldClim database Detect collinearity: check_env() detect collinearity environmental layers check_vals() detect collinearity extracted environmental values check_dists() detect collinearity geographic environmental distances rasterPCA() perform raster PCA stack environmental layers reduce dimensionality coords_to_raster() create raster layer coordinate data (using wingen package) env_dist() calculate environmental distances geo_dist() calculate geographic distances coordinates","code":"library(algatr) library(terra) library(raster) library(RStoolbox) library(ggplot2) library(geodata) library(viridis) library(wingen) library(tidyr) library(tibble)"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"load-example-data","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Load example data","title":"Environmental data processing","text":"","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"introduction-to-environmental-data-files-and-object-types","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Introduction to environmental data files and object types","title":"Environmental data processing","text":"Briefly, R, (geo)spatial data can represented using points, vectors, rasters. Points represent coordinates. Vectors used discrete phenomena clear boundaries (e.g., country), rasters used represent continuous data (e.g., precipitation). Rasters able represent continuous data dividing landscape grid equally sized cells; cell assigned one () values relevant variables. case, taking California example, points represent sampling coordinates, vectors represent polygons (e.g., state California), rasters store different environmental layers (e.g. temperature, precipitation) California. two main packages algatr uses process manipulate environmental data: terra (Hijmans 2022) raster (Hijmans 2022). packages excellent resources walkthroughs (see terra; see raster) explain depth environmental data processing manipulation R. packages classes represent rasters. Within terra package, SpatRaster class used represent rasters, raster package uses RasterLayer (single-layer raster data), RasterBrick RasterStack (multi-variable raster data differ many files can linked ) classes. matter class used represent rasters, fundamental parameters describe rasters always : numbers rows, columns, spatial extent, coordinate reference system (CRS) proper projection. Ensuring CRS coordinates raster layer particularly important. algatr’s methods, CRS provided, warning generated respective method run assuming coordinates raster CRS match; CRS two inputs match, algatr throw error. Also keep mind methods performed non-projected data (kriging), users must always transform coordinates ’re lat/long, example. Refer wingen vignette () information convert lat/long coordinates projected system.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"gather-environmental-data-using-get_worldclim","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Gather environmental data using get_worldclim()","title":"Environmental data processing","text":"WorldClim database provides environmental layers entire globe (excluding Antarctica); data contained four monthly variables 18 bioclimatic variables, provided tiles. get_worldclim() function retrieves extracts WorldClim data (using worldclim_tile() function geodata package) relevant tiles based sampling coordinates, drawing convex hull shape connect data points. Users can add buffer around sampling coordinates using buff argument, corresponds proportion spatial extent coordinates. Tile size (.e., spatial resolution) specified using res argument, corresponds arc-minutes. default 30s dataset (0.5 arc-mins), buffer 0.01. get_worldclim can take time, following code knit within vignette give idea run function example data. Notice wclim terra SpatRaster object. Let’s take look object looks like. Now, let’s plot one variables overlay sampling coordinates top.","code":"wclim <- get_worldclim(coords = liz_coords, res = 5) # can set save_output = TRUE if you want a directory with files made # Load wclim object data(\"wclim\") # Look at one of the layers, which corresponds to tile_15_wc2.1_30s_bio_1 wclim[[1]] #> class      : RasterLayer  #> dimensions : 113, 120, 13560  (nrow, ncol, ncell) #> resolution : 0.08333333, 0.08333333  (x, y) #> extent     : -125.25, -115.25, 32.58333, 42  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> source     : memory #> names      : bio1  #> values     : -1.311542, 24.08433  (min, max) plot(wclim[[1]], col = turbo(100), axes = FALSE) points(liz_coords, pch = 19)"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"detecting-collinearity","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Detecting collinearity","title":"Environmental data processing","text":"important first check landscape genomics analysis detect collinearity sets variables. Specifically, always want verify collinearity (within given threshold) environmental layers (using check_env()), extracted values environmental layers (using check_vals()), geographic environmental distances (using check_dists()) many methods used landscape genomics assume variables independent.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"collinearity-among-environmental-layers","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics > Detecting collinearity","what":"Collinearity among environmental layers","title":"Environmental data processing","text":"check_env() function calculates Pearson correlation coefficient pairwise comparisons environmental layers. threshold correlation coefficient; defaults 0.7. output function list containing (1) dataframe correlated environmental pairs fall threshold, (2) correlation matrix pairwise correlation coefficients.","code":"cors_env <- check_env(wclim) #> Warning: The extracted values for 19 pairs of variables had correlation coefficients > 0.7. algatr recommends reducing collinearity by removing correlated variables or performing a PCA before proceeeding. # There are many pairs of layers that have correlation coefficients > 0.7 (the default threshold) # For the sake of argument, we can also run this function on the CA_env object: check_env(CA_env) #> $cor_df #> [1] var1 var2 r    #> <0 rows> (or 0-length row.names) #>  #> $cor_matrix #>              CA_rPCA1     CA_rPCA2     CA_rPCA3 #> CA_rPCA1 1.000000e+00 2.367727e-11 4.231118e-11 #> CA_rPCA2 2.367727e-11 1.000000e+00 3.888803e-11 #> CA_rPCA3 4.231118e-11 3.888803e-11 1.000000e+00 # None of the pairwise comparisons exceed the threshold value"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"collinearity-among-extracted-environmental-values","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics > Detecting collinearity","what":"Collinearity among extracted environmental values","title":"Environmental data processing","text":"Similar , check_vals() function determines collinearity using Pearson’s correlation coefficients, extracted environmental variables sampling coordinates. also generate plot showing pairwise correlations environmental variables.","code":"# Once again, we can see that there are many pairs of variables that exceed the threshold check_result <- check_vals(wclim, liz_coords) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) #> Warning: The extracted values for 25 pairs of variables had correlation coefficients > 0.7. algatr recommends reducing collinearity by removing correlated variables or performing a PCA before proceeeding. head(check_result$cor_df) #>   var1 var2         r #> 1 bio2 bio4 0.7363230 #> 2 bio1 bio6 0.8829763 #> 3 bio2 bio7 0.8851769 #> 4 bio4 bio7 0.9640441 #> 5 bio1 bio8 0.9317171 #> 6 bio6 bio8 0.9761442 # Check using the CA_env object; note that these values are quite different from those from check_env() check_vals(CA_env, liz_coords) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) #> $cor_df #> [1] var1 var2 r    #> <0 rows> (or 0-length row.names) #>  #> $cor_matrix #>                  ID   CA_rPCA1   CA_rPCA2    CA_rPCA3 #> ID       1.00000000 0.20306375  0.1439392  0.04309331 #> CA_rPCA1 0.20306375 1.00000000  0.2095724  0.01194543 #> CA_rPCA2 0.14393920 0.20957242  1.0000000 -0.32015438 #> CA_rPCA3 0.04309331 0.01194543 -0.3201544  1.00000000"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"collinearity-between-distances","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics > Detecting collinearity","what":"Collinearity between distances","title":"Environmental data processing","text":"check_dists() function determines collinearity geographic environmental distances. extracting values sampling coordinates, calculating geographic environmental distances runs Mantel test resulting distances. Environmental distances calculated using Euclidean distances, geographic distances can Euclidean, topographic, resistance distances, though default Euclidean. result function output p-value Mantel’s r indicate distances significantly correlated.","code":"check_results <- check_dists(wclim, liz_coords) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) #> Warning: The distances for 123 pairs of variables are significantly correlated. algatr recommends reducing collinearity by removing correlated variables or performing a PCA before proceeeding. head(check_results$mantel_df) #>   var1 var2    p          r #> 1  geo bio2 0.03 0.14655852 #> 2 bio2 bio3 0.01 0.36879426 #> 3  geo bio4 0.01 0.16604751 #> 4   ID bio4 0.04 0.07768818 #> 5 bio2 bio4 0.01 0.57247312 #> 6 bio3 bio4 0.01 0.84170158 # We can see that PC2 from CA_env and geo dists are significantly correlated! check_dists(CA_env, liz_coords) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) #> Warning: The distances for 4 pairs of variables are significantly correlated. algatr recommends reducing collinearity by removing correlated variables or performing a PCA before proceeeding. #> $mantel_df #>       var1     var2    p          r #> 1      geo       ID 0.04 0.07244890 #> 2      geo CA_rPCA2 0.01 0.20374038 #> 3       ID CA_rPCA3 0.04 0.08223415 #> 4 CA_rPCA2 CA_rPCA3 0.01 0.25441819 #>  #> $p #>          [,1] [,2] [,3] [,4] [,5] #> geo        NA 0.04 0.59 0.01 0.30 #> ID         NA   NA 0.75 0.09 0.04 #> CA_rPCA1   NA   NA   NA 0.51 0.77 #> CA_rPCA2   NA   NA   NA   NA 0.01 #> CA_rPCA3   NA   NA   NA   NA   NA #>  #> $r #>          [,1]      [,2]        [,3]        [,4]        [,5] #> geo        NA 0.0724489 -0.01841863  0.20374038  0.04462286 #> ID         NA        NA -0.04253070  0.06336224  0.08223415 #> CA_rPCA1   NA        NA          NA -0.00798325 -0.07707443 #> CA_rPCA2   NA        NA          NA          NA  0.25441819 #> CA_rPCA3   NA        NA          NA          NA          NA"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"perform-a-raster-pca-on-environmental-layers","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Perform a raster PCA on environmental layers","title":"Environmental data processing","text":"collinearity issues, may want deal dozens environmental layers time, can perform PCA rasters using rasterPCA() function RStoolbox package; function can take SpatRaster RasterStack object. Let’s use wclim object generated using get_worldclim() function, contains 19 environmental variables. result function list containing model information, RasterBrick object containing multiple layers PCA scores. One can also use nComp argument extract top n PCs; many cases, top three PCs may explain majority variance data, considered analyses.","code":"env_pcs <- rasterPCA(wclim, spca = TRUE)  # Let's take a look at the results for the top three PCs plots <- lapply(1:3, function(x) ggR(env_pcs$map, x, geom_raster = TRUE))  plots[[1]] plots[[2]] plots[[3]] # We can also create a single composite raster plot with 3 PCs (each is assigned R, G, or B) ggRGB(env_pcs$map, 1, 2, 3, stretch = \"lin\", q = 0)"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"create-raster-from-coordinates-with-wingen-coords_to_raster","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Create raster from coordinates with wingen: coords_to_raster()","title":"Environmental data processing","text":"cases, may raster already prepared. Using wingen package, can use coordinate data generate raster given user-specified buffer around sampling coordinates (using buff argument) given resolution (using res argument). raster meaningful values assigned , can used create maps genetic diversity wingen (see wingen documentation ).","code":"raster <- coords_to_raster(liz_coords, res = 1) plot(raster, axes = FALSE) points(liz_coords, pch = 19)"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"calculate-environmental-distances-using-env_dist","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Calculate environmental distances using env_dist()","title":"Environmental data processing","text":"analyses within algatr, GDM MMRR, require comparing genetic distances environmental distances. can calculate environmental distances using env_dist() function, allows users calculate environmental distances variables given sampling locations. first need extract environmental variables sampling coordinates. Now, ’re ready calculate environmental distances.  can make heat map ggplot pairwise distances.","code":"env <- raster::extract(CA_env, liz_coords)  # You can there are extracted values (n=53) for each environmental layer head(env) #>       CA_rPCA1   CA_rPCA2    CA_rPCA3 #> [1,] -1.851397 -3.9385712 -0.71366495 #> [2,] -2.288577 -0.7470118 -0.05549845 #> [3,] -4.294456  4.4240017 -1.50788176 #> [4,] -1.916433 -3.7858098 -1.37762737 #> [5,] -1.942174  0.2111327  1.20659840 #> [6,] -2.463599  4.4038172 -2.02557206 env_dist <- env_dist(env) plot(env_dist$CA_rPCA1) as.data.frame(env_dist$CA_rPCA1) %>%   rownames_to_column(\"sample\") %>%   pivot_longer(-\"sample\", names_to = \"sample_comp\", values_to = \"dist\") %>%   ggplot(aes(x = as.numeric(sample), y = as.numeric(sample_comp), fill = dist)) +   geom_tile() +   coord_equal() +   scale_fill_viridis() +   xlab(\"Sample\") +   ylab(\"Sample\")"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"calculate-geographic-distances-using-geo_dist","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Calculate geographic distances using geo_dist()","title":"Environmental data processing","text":"geo_dist() function allows users choose five environmental distance metrics using type argument: Geodesic distances (\"euclidean\" \"linear\") using geodist package (Padgham & Sumner 2021) Topographic distances (\"topo\" \"topographic\") using topoDistance package (Wang 2020); requires digital elevation model (DEM) raster specified lyr argument Resistance distances (\"resistance\", \"cost\", \"res\") using gdistance package (van Etten 2017); requires resistance raster specified lyr argument","code":""},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"euclidean-distances","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics > Calculate geographic distances using geo_dist()","what":"Euclidean distances","title":"Environmental data processing","text":"can make heat map ggplot pairwise distances.","code":"geo_dist <- geo_dist(liz_coords, type = \"Euclidean\") plot(geo_dist) # Make a fun heat map with the pairwise distances geo_dist <- as.data.frame(geo_dist) colnames(geo_dist) <- rownames(geo_dist) geo_dist %>%   rownames_to_column(\"sample\") %>%   gather(\"sample_comp\", \"dist\", -\"sample\") %>%   ggplot(aes(x = as.numeric(sample), y = as.numeric(sample_comp), fill = dist)) +   geom_tile() +   coord_equal() +   scale_fill_viridis() +   xlab(\"Sample\") +   ylab(\"Sample\")"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"topographic-distances","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics > Calculate geographic distances using geo_dist()","what":"Topographic distances","title":"Environmental data processing","text":"can also calculate topographic distances, need provide digital elevation model (DEM) raster . can retrieve DEM using geodata package, cropping California using CA_env object example dataset. Take look DEM looks like, samples plotted top.  Now, let’s calculate topographic distances using CA_dem object layer lyr argument. Plot resulting topographic distances heatmap.","code":"# Download the DEM raster using the elevation_30s function # This will save a .tif file in your current dir dem <- elevation_30s(country = \"USA\", path = tempdir())  # Crop to California limits CA_dem <- crop(dem, CA_env) plot(CA_dem, axes = FALSE) points(liz_coords, pch = 19) topo_dist <- geo_dist(liz_coords, type = \"topo\", lyr = CA_dem) #> Calculating topo distances... This can be time consuming with many points and large rasters. # Make a fun heat map with the pairwise distances topo_dist <- as.data.frame(topo_dist) colnames(topo_dist) <- 1:53 rownames(topo_dist) <- 1:53  topo_dist %>%   rownames_to_column(\"sample\") %>%   gather(\"sample_comp\", \"dist\", -\"sample\") %>%   ggplot(aes(x = as.numeric(sample), y = as.numeric(sample_comp), fill = dist)) +   geom_tile() +   coord_equal() +   scale_fill_viridis() +   xlab(\"Sample\") +   ylab(\"Sample\")"},{"path":"https://thewanglab.github.io/algatr/articles/enviro_data_vignette.html","id":"additional-documentation-and-citations","dir":"Articles","previous_headings":"Processing environmental data for landscape genomics","what":"Additional documentation and citations","title":"Environmental data processing","text":"Retrieve relevant vignettes:","code":"vignette(\"topoDistance-vignette\") #> starting httpd help server ... done vignette(\"geodist\") #> Warning: vignette 'geodist' not found"},{"path":"https://thewanglab.github.io/algatr/articles/gen_dist_vignette.html","id":"calculating-genetic-distances","dir":"Articles","previous_headings":"","what":"Calculating genetic distances","title":"Genetic distances","text":"several landscape genomics analyses, pairwise genetic distance matrix required input. variety ways calculate genetic distance, main function package, gen_dist(), allows user choose five different genetic distances saves square distance matrices csv files. five genetic distance metrics specified using dist_type argument follows: Euclidean distance (\"euclidean\" argument), uses distance() function within ecodist package Bray-Curtis distance (\"bray_curtis\" argument), uses distance() function within ecodist package Proportion shared alleles (\"dps\" argument), uses propShared() function within adegenet package PC-based distance (\"pc\" argument), uses prcomp() function within stats package selects number PCs using Tracy-Widom test (npc_selection = \"auto\"; also requires specifying criticalpoint [see details]) user-inputted PCs based examining screeplot manually entering value console (npc_selection = \"manual\") Processing distances generated using Plink (\"plink\" argument). type distance requires providing paths two plink output files (distance file, plink_file, ID file, plink_id_file) good place start understand metrics Shirk et al., 2017, tested number different genetic distance metrics (including ) compared results use landscape genetics analyses. package also allows user look relationship distance metrics using gen_dist_corr() function, visualize genetic distance matrices heatmap using gen_dist_hm() function.","code":"library(algatr) library(cowplot)"},{"path":"https://thewanglab.github.io/algatr/articles/gen_dist_vignette.html","id":"load-example-dataset","dir":"Articles","previous_headings":"Calculating genetic distances","what":"Load example dataset","title":"Genetic distances","text":"","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>"},{"path":"https://thewanglab.github.io/algatr/articles/gen_dist_vignette.html","id":"calculate-genetic-distances-with-gen_dist","dir":"Articles","previous_headings":"Calculating genetic distances","what":"Calculate genetic distances with gen_dist()","title":"Genetic distances","text":"Euclidean, Bray-Curtis, PC-based genetic distance metrics require missing data. simple imputation (median mean, depending distance metric) built gen_dist() function mostly creating test datasets; highly discourage using form imputation analyses. can take look str_impute() function description data processing vignette information alternate imputation method provided algatr. calculate Euclidean distances samples: Now, let’s process Plink distances: Finally, let’s calculate PC-based distances. two options selecting “best” number PCs, specified using npc_selection argument: \"auto\", runs Tracy-Widom test selects number significant eigenvalues PC, \"manual\", screeplot printed screen user can manually enter number PCs choose console. automatic option, significance threshold must specified using criticalpoint argument; significance levels 0.05, 0.01, 0.005, 0.001 correspond criticalpoint argument 0.9793, 2.0234, 2.4224, 3.2724, respectively).","code":"# Calculate Euclidean distance matrix euc_dists <- gen_dist(liz_vcf, dist_type = \"euclidean\") #> Loading required package: vcfR #>  #>    *****       ***   vcfR   ***       ***** #>    This is vcfR 1.15.0  #>      browseVignettes('vcfR') # Documentation #>      citation('vcfR') # Citation #>    *****       *****      *****       ***** #> Loading required namespace: adegenet #> Warning in gen_dist(liz_vcf, dist_type = \"euclidean\"): NAs found in genetic #> data, imputing to the median (NOTE: this simplified imputation approach is #> strongly discouraged. Consider using another method of removing missing data)  euc_dists[1:5, 1:5] #>            ALT3   BAR360     BLL5     BNT5     BOF1 #> ALT3    0.00000 22.92379 17.26992 21.08910 18.77498 #> BAR360 22.92379  0.00000 17.85357 19.50000 17.56417 #> BLL5   17.26992 17.85357  0.00000 15.76388 12.63922 #> BNT5   21.08910 19.50000 15.76388  0.00000 15.99219 #> BOF1   18.77498 17.56417 12.63922 15.99219  0.00000 plink_dists <- gen_dist(plink_file = system.file(\"extdata\", \"liz_test.dist\", package = \"algatr\"), plink_id_file = system.file(\"extdata\", \"liz_test.dist.id\", package = \"algatr\"), dist_type = \"plink\") #> Rows: 53 Columns: 53 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> dbl (53): X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, ... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 53 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \"\\t\" #> chr (2): X1, X2 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. pc_dists <- gen_dist(liz_vcf, dist_type = \"pc\", npc_selection = \"auto\", criticalpoint = 2.0234) #> Warning in gen_dist(liz_vcf, dist_type = \"pc\", npc_selection = \"auto\", #> criticalpoint = 2.0234): NAs found in genetic data, imputing to the median #> (NOTE: this simplified imputation approach is strongly discouraged. Consider #> using another method of removing missing data)"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/gen_dist_vignette.html","id":"plot-comparisons-between-two-genetic-distances-with-gen_dist_corr","dir":"Articles","previous_headings":"Calculating genetic distances > Compare genetic distance results","what":"Plot comparisons between two genetic distances with gen_dist_corr()","title":"Genetic distances","text":"compare genetic distances just produced, can plot :","code":"# Plot some pairwise comparisons, providing names for the metrics p_euc_plink <- gen_dist_corr(euc_dists, plink_dists, \"Euclidean\", \"Plink\") #> Joining with `by = join_by(comparison, name)` p_pc_plink <- gen_dist_corr(pc_dists, plink_dists, \"PC_based\", \"Plink\") #> Joining with `by = join_by(comparison, name)`  # Show all plots as panels on a single plot plot_grid(p_euc_plink, p_pc_plink, nrow = 1) #> Warning: Removed 1378 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Removed 1378 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://thewanglab.github.io/algatr/articles/gen_dist_vignette.html","id":"plot-heatmap-of-one-of-the-genetic-distances-with-gen_dist_hm","dir":"Articles","previous_headings":"Calculating genetic distances > Compare genetic distance results","what":"Plot heatmap of one of the genetic distances with gen_dist_hm()","title":"Genetic distances","text":"Let’s look heatmap Euclidean distance example dataset.  proportions shared alleles distance metric, keep mind similar two samples , higher distance , metric’s heatmap show opposite trend distance metrics available within gen_dist():","code":"gen_dist_hm(euc_dists) dps_dists <- gen_dist(liz_vcf, dist_type = \"dps\") gen_dist_hm(dps_dists)"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"masking-maps-for-landscape-genomics","dir":"Articles","previous_headings":"","what":"Masking maps for landscape genomics","title":"Masking","text":"Often, may want mask areas maps visualize landscape genomics results. example, may want mask areas beyond study organism’s range, areas undersampled (sampled ). allows users avoid -interpreting results several analyses mapping useful visualization tool (e.g., generalized dissimilarity modeling). vignette makes use following masking functions: extrap_mask() function reduce extrapolation masking areas fall outside data (either based environmental spatial coverage) plot_extrap_mask() generates map masked areas rm_islands() masks specified islands map","code":"library(algatr) library(raster) #> Loading required package: sp library(terra) #> terra 1.7.71 library(viridis) #> Loading required package: viridisLite"},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"read-in-data","dir":"Articles","previous_headings":"Masking maps for landscape genomics","what":"Read in data","title":"Masking","text":"","code":"# Load test data, including CA_env which are the environmental raster layers we'll be using load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #>   # For the purposes of simplicity, let's just use one of the PCs for mapping: envlayers <- CA_env$CA_rPCA1  par(mar = c(0, 0, 0, 0)) # Let's take a look at the map with no masking: plot(envlayers, col = viridis(100), axes = FALSE, box = FALSE)"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"make-a-range-based-based","dir":"Articles","previous_headings":"Masking maps for landscape genomics > Making masked maps","what":"Make a range-based based","title":"Masking","text":"can use extrap_mask() function mask areas outside range environmental values included data (\"range\" argument). argument masks conservatively, meaning area falls outside range data variable, area masked.","code":"par(mar = c(0, 0, 0, 0))  # Extrapolate env values for given coordinates map_mask <- extrap_mask(liz_coords, envlayers, method = \"range\") #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette)  # Now, plot the map with masked areas plot_extrap_mask(envlayers, map_mask, RGB_cols = FALSE) # Let's make the masked areas white with no transparency plot_extrap_mask(envlayers, map_mask, RGB_cols = FALSE, mask_col = rgb(1, 1, 1, alpha = 1))"},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"standard-deviation-based-mask","dir":"Articles","previous_headings":"Masking maps for landscape genomics > Making masked maps","what":"Standard deviation-based mask","title":"Masking","text":"can also mask using \"sd\" argument, masks areas outside mean, +/- number standard deviations outside environmental values included data (normalized using nsd parameter). method still conservative \"range\" argument .","code":"par(mar = c(0, 0, 0, 0))  # Let's start with nsd=2 map_mask <- extrap_mask(liz_coords, envlayers, method = \"sd\", nsd = 2) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) plot_extrap_mask(envlayers, map_mask, RGB = FALSE) # Now, increase nsd to 3 and see how the map masking changes: map_mask <- extrap_mask(liz_coords, envlayers, method = \"sd\", nsd = 3) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) plot_extrap_mask(envlayers, map_mask, RGB = FALSE)"},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"buffer-based-mask","dir":"Articles","previous_headings":"Masking maps for landscape genomics > Making masked maps","what":"Buffer-based mask","title":"Masking","text":"can mask areas outside circular buffer fixed width around coordinates provided using \"buffer\" argument. Given buffer calculated, masking agnostic environment. can adjust size circular buffer using buffer_width option.","code":"par(mar = c(0, 0, 0, 0))  map_mask <- extrap_mask(liz_coords, envlayers, method = \"buffer\", buffer_width = 0.25) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) #> Warning: [mask] CRS do not match plot_extrap_mask(envlayers, map_mask, RGB = FALSE) # Increase buffer size map_mask <- extrap_mask(liz_coords, envlayers, method = \"buffer\", buffer_width = 0.5) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette)  #> Warning in crs_check(coords, envlayers): [mask] CRS do not match plot_extrap_mask(envlayers, map_mask, RGB = FALSE) # Increase buffer size and change masking color and transparency map_mask <- extrap_mask(liz_coords, envlayers, method = \"buffer\", buffer_width = 1) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette)  #> Warning in crs_check(coords, envlayers): [mask] CRS do not match plot_extrap_mask(envlayers, map_mask, RGB = FALSE, mask_col = rgb(1, 1, 1, alpha = 1))"},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"convex-hull-based-mask","dir":"Articles","previous_headings":"Masking maps for landscape genomics > Making masked maps","what":"Convex hull-based mask","title":"Masking","text":"convex hull describes smallest convex polygon contains sets points (case, sampling coordinates). can mask areas outside convex hull around coordinates provided using \"chull\" argument (largely uses st_convex_hull() function sf package). buffer-based masking, masking also agnostic environment, size buffer changed buffer_width argument","code":"par(mar = c(0, 0, 0, 0))  map_mask <- extrap_mask(liz_coords, envlayers, method = \"chull\") #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) plot_extrap_mask(envlayers, map_mask, RGB = FALSE) # Increase the buffer size map_mask <- extrap_mask(liz_coords, envlayers, method = \"chull\", buffer_width = 0.5) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) plot_extrap_mask(envlayers, map_mask, RGB = FALSE) # Increase the buffer size again map_mask <- extrap_mask(liz_coords, envlayers, method = \"chull\", buffer_width = 1) #> Warning in crs_check(coords, envlayers): No CRS found for the provided #> coordinates. Make sure the coordinates and the raster have the same projection #> (see function details or vignette) plot_extrap_mask(envlayers, map_mask, RGB = FALSE)"},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"removing-islands-from-maps-using-rm_islands","dir":"Articles","previous_headings":"Masking maps for landscape genomics","what":"Removing islands from maps using rm_islands()","title":"Masking","text":"cases, sampling islands, want areas mapped can use rm_islands() function . example, example dataset include endemic S. occidentalis subspecies occurs Channel Islands California, thus, may want exclude Channel Islands maps. function largely uses ms_filter_islands() function rmapshaper package, identifies islands based small size detached larger polygon (.e., mainland). Users can specify size island remove using min_vertices argument, minimum number vertices retain.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"retrieve-polygon","dir":"Articles","previous_headings":"Masking maps for landscape genomics > Removing islands from maps using rm_islands()","what":"Retrieve polygon","title":"Masking","text":"First, let’s get shape (polygon) state California. include Channel Islands. can retrieve administrative boundaries using gadm() function within geodata package.","code":"par(mar = c(0, 0, 0, 0))  states <- getData(\"GADM\", country = \"United States\", level = 1) #> Warning in getData(\"GADM\", country = \"United States\", level = 1): getData will be removed in a future version of raster #> . Please use the geodata package instead # states <- gadm(\"United States\", level = 1, path = here()) cali <- states[states$NAME_1 == \"California\", ] plot(cali)"},{"path":"https://thewanglab.github.io/algatr/articles/masking_vignette.html","id":"remove-islands","dir":"Articles","previous_headings":"Masking maps for landscape genomics > Removing islands from maps using rm_islands()","what":"Remove islands","title":"Masking","text":"rm_islands() requires polygon (case, state California ) environmental layers want island(s) removed (case, CA_env envlayers).  function works even multiple layers, CA_env.","code":"par(mar = c(0, 0, 0, 0))  cali_noislands <- rm_islands(envlayers, cali)  # Now, let's plot the env layer and see how it's removed the Channel Islands plot(cali_noislands) par(mar = c(0, 0, 0, 0))  cali_noislands <- rm_islands(CA_env, cali)  # Islands are gone from all three enviro PC layers plot(cali_noislands)"},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"read-in-and-process-input-data","dir":"Articles","previous_headings":"","what":"Read in and process input data","title":"Wingen","text":"wingen requires vcf, sampling coordinates, raster layer upon move sliding window across. Coordinates rasters used wingen projected (planar) coordinate system raster cells equal sizes. Therefore, spherical systems (including latitude-longitude coordinate systems) projected prior use. example can accomplished shown . CRS provided, warning given. reproject latitude-longitude coordinates equal-area projection California. ’ll also want shape California subsequent plotting, ’ll save one environmental PC layers SpatRaster object purpose reproject coordinate reference system coordinates.","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with example environmental layers  #>  #> ------------------------------------------------- #>  #> # First, we reformat our dataframe of coordinates into sf coordinates coords_longlat <- st_as_sf(liz_coords, coords = c(\"x\", \"y\"), crs = \"+proj=longlat\")  # Next, the coordinates and raster can be projected to an equal area projection, in this case NAD83 / California Albers (EPSG 3310) coords_proj <- st_transform(coords_longlat, crs = 3310) envlayer <- rast(CA_env[[1]])  # Aggregate the layer so plotting is a bit faster envlayer <- aggregate(envlayer, 5)  # Reproject to same crs as the projected coordinates envlayer <- project(envlayer, crs(coords_proj))"},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"generate-raster-layer-for-sliding-window","dir":"Articles","previous_headings":"","what":"Generate raster layer for sliding window","title":"Wingen","text":"Although can use one PCs within CA_env object raster wingen, resolution layers unnecessarily high given sampling localities, running wingen (particularly kriging step) take long time. remedy , can generate raster layer using coords_to_raster() function algatr providing sampling coordinates. Using function, can specify resolution raster res argument. choose low resolution (.e., large cells) 50 km make processing time faster. Note resolution units depend coordinate reference system.","code":"liz_lyr <- coords_to_raster(coords_proj, res = 50000, buffer = 5, plot = TRUE)"},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"moving-window-calculations-using-preview_gd-and-window_gd","dir":"Articles","previous_headings":"","what":"Moving window calculations using preview_gd() and window_gd()","title":"Wingen","text":"window_gd() function takes vcf file (vcf argument), sampling coordinates (coords argument), RasterLayer window move across (lyr argument), genetic diversity summary statistic calculate (stat argument); choices allelic richness (\"allelic.richness\" \"biallelic.richness\"), nucleotide diversity (\"pi\"), average heterozygosity (\"Ho\"). options file types statistics see original wingen vignette. number additional arguments within function, wingen package documentation provides extensive explanations (guidelines testing) parameters. Briefly, fact aggregates input raster layer (given factor), wdim specifies window dimensions, rarify specifies whether user like samples rarified (requires users specify rarify_n rarify_nit), finally parallel specifies whether like parallelize.","code":""},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"preview-the-moving-window","dir":"Articles","previous_headings":"Moving window calculations using preview_gd() and window_gd()","what":"Preview the moving window","title":"Wingen","text":"First, can get idea size cell moving window look like using preview_gd() function. want adjust window size (using wdim argument) ensure (extent) window size capturing samples slides across landscape. Ideally, wdim set study system mind (e.g., dispersal distance neighborhood size species). also specify genetic diversity calculated windows contain least two samples (min_n). function produces plot allows us visualize size window compared raster layer sampling coordinates. function also returns sample count raster map value cell many samples included cell’s calculation (stop raster produced set sample_count = FALSE).","code":"sample_count <- preview_gd(liz_lyr, coords_proj, wdim = 3, fact = 0) # Visualize the sample count layer ggplot_count(sample_count)"},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"run-the-moving-window","dir":"Articles","previous_headings":"Moving window calculations using preview_gd() and window_gd()","what":"Run the moving window","title":"Wingen","text":"Next, let’s run moving window function (window_gd()) using parameters specified , calculating nucleotide diversity (stat = \"pi\") diversity metric. simplicity’s sake, perform rarefaction samples (rarify = FALSE, default).","code":"wgd <- window_gd(liz_vcf,   coords_proj,   liz_lyr,   stat = \"pi\",   wdim = 3,   fact = 0 ) #> Loading required package: vcfR #>  #>    *****       ***   vcfR   ***       ***** #>    This is vcfR 1.15.0  #>      browseVignettes('vcfR') # Documentation #>      citation('vcfR') # Citation #>    *****       *****      *****       ***** #> Loading required namespace: adegenet"},{"path":[]},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"plot-wingen-results-with-ggplot_gd-and-ggplot_count","dir":"Articles","previous_headings":"Visualizing wingen results","what":"Plot wingen results with ggplot_gd() and ggplot_count()","title":"Wingen","text":"wingen allows plotting maps two ways: ggplot_gd() plots genetic diversity layer, ggplot_count() plots sample count layer. can also provide background map using bkg argument. can produce base R plots using plot_gd() plot_count()","code":"# Plot map of pi ggplot_gd(wgd, bkg = envlayer) + ggtitle(\"Moving window pi\") # Plot sample count map ggplot_count(wgd) + ggtitle(\"Sample count\")"},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"krige-results","dir":"Articles","previous_headings":"Visualizing wingen results","what":"Krige results","title":"Wingen","text":"Kriging type spatial interpolation uses spatial model provide estimates genetic diversity unsampled locations; cae wingen, also allows smoother maps genetic diversity. can krige moving window map using krig_gd() function providing results moving window, raster layer upon kriging performed (“interpolation grid”); interpolation grid provided, kriging done moving window layer. index argument specifies layer want krige across; case, ’ll krige layers 1 (genetic diversity) 2 (sample counts) wgd object eventually want visualize kriged maps. Kriging can computationally intensive, can remedy aggregating raster layer upon kriging performed using either agg_r agg_grd arguments depending whether want aggregate across moving window layer interpolation grid layer, respectively. case, given resolution lyr, want disaggregate factor 5 get smoother interpolated surface, ’ll set disagg_grd = 5. moving window layer provided kriging, can use disagg_r argument set parameter. resulting object, kgd, RasterStack object containing two layers: genetic diversity statistic (pi), sample count information (sample_count). Let’s look plots kriged results, let’s avoid including background shape now (.e., bkg argument). Note overall shape kriged map rectangular lyr raster shape.","code":"kgd <- krig_gd(wgd, index = 1:2, liz_lyr, disagg_grd = 5) #> [using ordinary kriging] #> [using ordinary kriging] summary(kgd) #>        pi           sample_count     #>  Min.   :0.02683   Min.   : 0.0000   #>  1st Qu.:0.06456   1st Qu.: 0.0000   #>  Median :0.06497   Median : 0.0000   #>  Mean   :0.06497   Mean   : 0.6904   #>  3rd Qu.:0.06499   3rd Qu.: 0.6261   #>  Max.   :0.11302   Max.   :10.0000 # Plot kriged map of pi ggplot_gd(kgd) + ggtitle(\"Kriged pi\") # Plot kriged sample count map ggplot_count(kgd) + ggtitle(\"Kriged sample counts\")"},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"mask-using-sample-counts","dir":"Articles","previous_headings":"Visualizing wingen results","what":"Mask using sample counts","title":"Wingen","text":"Finally, may want mask areas ’re interested using mask_gd() function. wingen provides several ways perform masking, focus two vignette. mask_gd() function quite simple takes layer want masked (kgd, case) layer want mask . Let’s first mask areas based sample count. Recall , called krig_gd() using indices 1 2, told wingen krige genetic diversity (pi) sample count layers. ’ll make use kriged sample count layer now masking according . minval argument specifies minimum value areas masked, meaning areas contain samples masked. Let’s compare two maps masked way differing minval values. can see, areas masked increase minval.","code":"mgd_1 <- mask_gd(kgd, kgd[[\"sample_count\"]], minval = 1) mgd_2 <- mask_gd(kgd, kgd[[\"sample_count\"]], minval = 2)  ggplot_gd(mgd_1, bkg = envlayer) + ggtitle(\"Kriged & masked pi\") ggplot_gd(mgd_2, bkg = envlayer) + ggtitle(\"Kriged & masked pi\")"},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"mask-using-state-boundaries","dir":"Articles","previous_headings":"Visualizing wingen results","what":"Mask using state boundaries","title":"Wingen","text":"Next, let’s mask areas outside California state boundaries using envlayer object. One thing keep mind masking using raster, need ensure pixels match object masked object use mask. aren’t , extents different, either get error map look wonky. remedy , can use terra’s resample() function. function resample raster (, envlayer) based inputted raster (, mgd_1).","code":"# Resample envlayer based on masked layer r <- terra::resample(envlayer, mgd_1)  # Perform masking mgd <- mask_gd(mgd_1, r)  # Plot masked map ggplot_gd(mgd, bkg = envlayer) + ggtitle(\"Kriged & masked pi\")"},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"running-wingen-with-wingen_do_everything","dir":"Articles","previous_headings":"","what":"Running wingen with wingen_do_everything()","title":"Wingen","text":"algatr package also option run functionality single function, wingen_do_everything(). want take look preview first, can set preview = TRUE; krige, set kriged = TRUE, mask, set masked = TRUE. preview set TRUE, preview plot printed user can enter console whether like continue wingen run existing parameter settings, else halt run. Please aware do_everything() functions meant exploratory. recommend use final analyses unless certain properly parameterized. WARNING: Many wingen arguments excluded wingen_do_everything() reduce number arguments function. Thus, strongly advise using function actual analyses encourage users explore test individual wingen functions given datasets. , ’ll run wingen following: preview generated running wingen (preview = FALSE) Window size 3x3 (wdim = 3), aggregation factor moving window (fact = 0) Pi genetic diversity statistic (stat = \"pi\"); also default rarefaction (rarify = FALSE) Kriging (genetic diversity sample count layers; kriged = TRUE index = 1:2) disaggregation factor 4 kriging (disagg_grd = 4) Masking California state boundaries (mask = envlayer) Plot kriged masked sample count (plot_count = TRUE)","code":"results <- wingen_do_everything(   gen = liz_vcf,   lyr = liz_lyr,   coords = coords_proj,   wdim = 3,   fact = 0,   sample_count = TRUE,   preview = FALSE,   min_n = 2,   stat = \"pi\",   rarify = FALSE,   kriged = TRUE,   grd = liz_lyr,   index = 1:2,   agg_grd = NULL, disagg_grd = 4,   agg_r = NULL, disagg_r = NULL,   masked = TRUE, mask = envlayer,   bkg = envlayer, plot_count = TRUE ) #> Please be aware: the do_everything functions are meant to be exploratory. We do not recommend their use for final analyses unless certain they are properly parameterized."},{"path":"https://thewanglab.github.io/algatr/articles/wingen_vignette.html","id":"additional-documentation-and-citations","dir":"Articles","previous_headings":"","what":"Additional documentation and citations","title":"Wingen","text":"Retrieve wingen’s vignette:","code":"# vignette(\"wingen-vignette\")"},{"path":"https://thewanglab.github.io/algatr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anusha Bishop. Author, maintainer. Anne Chambers. Author. Ian Wang. Author.","code":""},{"path":"https://thewanglab.github.io/algatr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chambers E, Bishop , Wang (2023). “Individual-based landscape genomics conservation: analysis pipeline.” Molecular Ecology Resources, 00, 1–12. doi:10.1111/1755-0998.13884.","code":"@Article{,   title = {Individual-based landscape genomics for conservation: An analysis pipeline},   author = {E. Anne Chambers and Anusha P. Bishop and Ian J. Wang},   journal = {Molecular Ecology Resources},   year = {2023},   volume = {00},   pages = {1–12},   doi = {10.1111/1755-0998.13884}, }"},{"path":"https://thewanglab.github.io/algatr/index.html","id":"algatr-","dir":"","previous_headings":"","what":"A Landscape Genomic Analysis Toolkit in R","title":"A Landscape Genomic Analysis Toolkit in R","text":"Landscape Genomic Analysis Toolkit R (algatr) built provide researchers step--step, start--finish pipeline perform core landscape genomic analysis methods data.","code":""},{"path":"https://thewanglab.github.io/algatr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"A Landscape Genomic Analysis Toolkit in R","text":"Please cite paper use package: Chambers, E.., Bishop, .P., & Wang, .J. (2023). Individual-based landscape genomics conservation: analysis pipeline. Molecular Ecology Resources.https://doi.org/10.1111/1755-0998.13884. algatr makes use existing software, please also sure cite papers relevant corresponding method:","code":""},{"path":"https://thewanglab.github.io/algatr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Landscape Genomic Analysis Toolkit in R","text":"algatr can installed following code: algatr package depends many packages different methods implemented. ensure algatr can still installed even one many dependencies breaks, packages required method suggested rather imported. install suggested packages set dependencies = TRUE running install_github(). install just packages required method, use *_packages() functions . helpful ’re interested using subset methods provided don’t want install unnecessary packages. ’re installing Ubuntu, may run issues installing rmapshaper package; scroll bottom README information. Alternatively, algatr can run using Docker, case prior installation package dependencies required. First, install Docker, start algatr within Docker container: can also run container RStudio instance: Open localhost:8787 browser log username:rstudio password:yourpassword (substitute yourpassword whatever password like)","code":"devtools::install_github(\"TheWangLab/algatr\") # Install algatr devtools::install_github(\"TheWangLab/algatr\")  library(algatr)  # Option 1: Install all of the packages for algatr alazygatr_packages()  # Option 2: Install subsets of packages based on what methods you want to use: ## Genetic distance processing: gen_dist_packages() ## Genetic data processing: data_processing_packages() ## Environmental and geographic data processing: envirodata_packages() ## LFMM: lfmm_packages() ## RDA: rda_packages() ## MMRR: mmrr_packages() ## GDM: gdm_packages() ## TESS: tess_packages() ## wingen: wingen_packages() docker run --rm -ti ghcr.io/thewanglab/algatr docker run --rm -ti -e PASSWORD=yourpassword -p 8787:8787 ghcr.io/thewanglab/algatr"},{"path":"https://thewanglab.github.io/algatr/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"A Landscape Genomic Analysis Toolkit in R","text":"Landscape genetics (genomics) combines fields landscape ecology population genetics understand environmental variation affects spatial genetic variation. Thus, basic, landscape genetics method requires genetic environmental data input. methods contained within algatr perform analyses : Genomic-scale datasets (.e., generated using reduced representation whole genome sequencing) Datasets individual-based sampling (also work population-based sampling schemes) algatr makes use several existing packages methods, provide citations packages (corresponding publications) whenever possible. Many packages extensive documentation excellent additional resources, provide links corresponding vignettes. added functionality methods within algatr discuss methods’ vignettes. input data processing functions, main functions within algatr named pattern [method]_do_everything(). name implies, functions take raw input data generating results, tables, figures analysis. example, gdm_do_everything() run generalized dissimilarity modeling also generating GDM map, table results, several outputs. [method]_do_everything functions quiet argument , set \"TRUE\", automatically print figures outputs. better understand ’s going hood [method]_do_everything() functions, algatr vignettes provide line--line breakdown individual user-facing functions contained within [method]_do_everything() function () increase user’s understanding method actually works, (b) allow users customizability run analysis, desired. strongly encourage researchers use [method]_do_everything() functions initial first-pass examination data; users follow workflows provided vignettes nuanced parameter control generally better understand methods works. deciding methods within algatr, found best first identify questions methods seek answer, think good framework anyone (particularly beginner landscape genomicists) think landscape genomic methods. questions fall four broad categories analyses: Multiple matrix regression randomization; MMRR (Wang 2013) Generalized dissimilarity modeling; GDM (Ferrier et al. 2007; Freedman et al. 2010; Fitzpatrick & Keller 2015) MMRR vignette GDM vignette mmrr_do_everything() gdm_do_everything() Redundancy analysis; RDA (Capblancq & Forester 2021) Latent factor mixed models; LFMM (Caye et al. 2019) RDA vignette LFMM vignette rda_do_everything() lfmm_do_everything() can also view knitted versions README algatr’s vignettes package’s pkgdown website .","code":""},{"path":"https://thewanglab.github.io/algatr/index.html","id":"the-example-dataset","dir":"","previous_headings":"Introduction","what":"The example dataset","title":"A Landscape Genomic Analysis Toolkit in R","text":"example algatr vignettes, ’ll using Sceloporus RADseq dataset Bouzid et al. 2022. Although original dataset contains >6K SNPs 108 individuals across Western North America, ’ve pruned dataset 1,000 SNPs individuals collected California (53 individuals) make analyses run bit faster. dataset also makes nice test dataset 53 individuals collected 53 separate localities (.e., individual-based sampling used) across state California. four objects loaded within example dataset: liz_coords: sampling coordinates 53 individuals (53 localities) liz_vcf: vcfR object containing variant information liz_gendist: matrix genetic distances generated vcf file (distances calculated using Plink) CA_env: RasterStack object three PC environmental layers Load example dataset take look: Let’s take look environmental layers included example dataset. generated performing raster PCA 19 bioclimatic variables (obtained World Clim database) retaining top 3 PCs. Let’s take look rasters:  can combine three PCs single map scaling rasters correspond either R, G, B using scaleRGB() function subsequently map using plotRGB() function.","code":"load_algatr_example() #>  #> ---------------- example dataset ---------------- #>   #> Objects loaded:  #> *liz_vcf* vcfR object (1000 loci x 53 samples)  #> *liz_gendist* genetic distance matrix (Plink Distance)  #> *liz_coords* dataframe with x and y coordinates  #> *CA_env* RasterStack with PC environmental layers  #>  #> ------------------------------------------------- #> plot(CA_env, col = turbo(100), axes = FALSE) env <- scaleRGB(CA_env) plotRGB(env, r = 1, g = 2, b = 3)  # Add sampling localities on top of this points(liz_coords, pch = 19)"},{"path":"https://thewanglab.github.io/algatr/index.html","id":"your-ngs-data","dir":"","previous_headings":"Introduction","what":"Your NGS data","title":"A Landscape Genomic Analysis Toolkit in R","text":"generate files dataset, ’ll need following: Sampling coordinates (always longitude, latitude [x,y] order; refer liz_coords formatting) Genetic data vcf file format (standard file format reduced representation whole genome sequencing data) Environmental data layers choice sure ordering individuals across coordinate genetic data files consistent!","code":""},{"path":"https://thewanglab.github.io/algatr/index.html","id":"next-steps","dir":"","previous_headings":"Introduction","what":"Next steps","title":"A Landscape Genomic Analysis Toolkit in R","text":"Read vcf file using read.vcfR() function vcfR package. see works, can load example dataset vcf like : ’ll now want processing data, file conversions LD-pruning (see data processing vignette), environmental data checking manipulation (see environmental data processing vignette), calculating genetic distances (see genetic distances vignette). Genotype dosage matrix Environmental layers Sampling coordinates gen coords Kvals Genetic distance matrix Environmental layers Sampling coordinates gendist coords env Genetic distance matrix Environmental layers Sampling coordinates gendist coords envlayers Genotype dosage matrix Environmental layers Sampling coordinates gen env Genotype dosage matrix Environmental layers Sampling coordinates gen env VCF file Raster layer (though necessary) Sampling coordinates gen lyr coords","code":"vcf <- read.vcfR(here(\"inst\", \"extdata\", \"liz_test.vcf\")) #> Scanning file to determine attributes. #> File attributes: #>   meta lines: 6 #>   header_line: 7 #>   variant count: 1000 #>   column count: 62 #> Meta line 6 read in. #> All meta lines processed. #> gt matrix initialized. #> Character matrix gt created. #>   Character matrix gt rows: 1000 #>   Character matrix gt cols: 62 #>   skip: 0 #>   nrows: 1000 #>   row_num: 0 #> Processed variant 1000Processed variant: 1000 #> All variants processed"},{"path":"https://thewanglab.github.io/algatr/index.html","id":"example","dir":"","previous_headings":"Introduction","what":"Example","title":"A Landscape Genomic Analysis Toolkit in R","text":"alligators alligate? can run algatr’s functionality ’ve coded single function, do_everything_for_me(). do_everything functions provide useful first pass analyses, algatr’s methods thoroughly tested parameterized based input data. Given , strongly advise using function final analyses.","code":"# do_everything_for_me(liz_vcf, liz_coords, CA_env)"},{"path":"https://thewanglab.github.io/algatr/index.html","id":"installing-on-ubuntu","dir":"","previous_headings":"Introduction","what":"Installing on Ubuntu","title":"A Landscape Genomic Analysis Toolkit in R","text":"may run issues installing rmapshaper package ’re using Ubuntu system. , run following line code attempting install package:","code":"sudo apt-get install -y libprotobuf-dev protobuf-compiler libjq-dev"},{"path":"https://thewanglab.github.io/algatr/reference/CA_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Example environmental data, calculated by performing a raster PCA on 18 bioclimatic variables for state of California — CA_env","title":"Example environmental data, calculated by performing a raster PCA on 18 bioclimatic variables for state of California — CA_env","text":"Example environmental data, calculated performing raster PCA 18 bioclimatic variables state California","code":""},{"path":"https://thewanglab.github.io/algatr/reference/CA_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example environmental data, calculated by performing a raster PCA on 18 bioclimatic variables for state of California — CA_env","text":"","code":"CA_env"},{"path":"https://thewanglab.github.io/algatr/reference/CA_env.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example environmental data, calculated by performing a raster PCA on 18 bioclimatic variables for state of California — CA_env","text":"RasterStack object three environmental PC layers","code":""},{"path":"https://thewanglab.github.io/algatr/reference/MMRR.html","id":null,"dir":"Reference","previous_headings":"","what":"MMRR performs Multiple Matrix Regression with Randomization analysis — MMRR","title":"MMRR performs Multiple Matrix Regression with Randomization analysis — MMRR","text":"MMRR performs Multiple Matrix Regression Randomization analysis","code":""},{"path":"https://thewanglab.github.io/algatr/reference/MMRR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MMRR performs Multiple Matrix Regression with Randomization analysis — MMRR","text":"","code":"MMRR(Y, X, nperm = 999, scale = TRUE)"},{"path":"https://thewanglab.github.io/algatr/reference/MMRR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MMRR performs Multiple Matrix Regression with Randomization analysis — MMRR","text":"Y dependent distance matrix X list independent distance matrices (optional names) nperm number permutations used significance tests. Default = 999. scale TRUE matrices standardized. Default = TRUE.","code":""},{"path":"https://thewanglab.github.io/algatr/reference/MMRR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MMRR performs Multiple Matrix Regression with Randomization analysis — MMRR","text":"using MMRR, please cite original citation: Wang .J. (2013) Examining full effects landscape heterogeneity spatial genetic variation: multiple matrix regression approach quantifying geographic ecological isolation. Evolution, 67: 3403-3411.","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/alazygatr_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install alazygatr packages — alazygatr_packages","title":"Install alazygatr packages — alazygatr_packages","text":"Checks presence packages required running alazygatr. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/alazygatr_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install alazygatr packages — alazygatr_packages","text":"","code":"alazygatr_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/alazygatr_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install alazygatr packages — alazygatr_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/alazygatr_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install alazygatr packages — alazygatr_packages","text":"","code":"if (FALSE) alazygatr_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/allK_plot_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for all K plotting — allK_plot_helper","title":"Helper function for all K plotting — allK_plot_helper","text":"Helper function K plotting","code":""},{"path":"https://thewanglab.github.io/algatr/reference/allK_plot_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for all K plotting — allK_plot_helper","text":"","code":"allK_plot_helper(K, krig_admix, coords = NULL, col, col_breaks, ...)"},{"path":"https://thewanglab.github.io/algatr/reference/allK_plot_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for all K plotting — allK_plot_helper","text":"K K value krig_admix RasterStack returned tess_krig coords dataframe x y coordinates plotting (optional) col single color code col_breaks number breaks plotting (defaults 20) ... Graphical parameters. argument can passed image.plot base plot","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/bestK.html","id":null,"dir":"Reference","previous_headings":"","what":"Best K Selection based on cross entropy — bestK","title":"Best K Selection based on cross entropy — bestK","text":"Best K Selection based cross entropy","code":""},{"path":"https://thewanglab.github.io/algatr/reference/bestK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Best K Selection based on cross entropy — bestK","text":"","code":"bestK(tess3_obj, Kvals)"},{"path":"https://thewanglab.github.io/algatr/reference/bestK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Best K Selection based on cross entropy — bestK","text":"tess3_obj list produced tess3 Kvals vector K values testing","code":""},{"path":"https://thewanglab.github.io/algatr/reference/bestK.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Best K Selection based on cross entropy — bestK","text":"(source: https://chazhyseni.github.io/NALgen/post/determining_bestk/)","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/check_dists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check geographic and environmental distances for collinearity — check_dists","title":"Check geographic and environmental distances for collinearity — check_dists","text":"Check geographic environmental distances collinearity","code":""},{"path":"https://thewanglab.github.io/algatr/reference/check_dists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check geographic and environmental distances for collinearity — check_dists","text":"","code":"check_dists(envlayers, coords, type = \"Euclidean\", lyr = NULL, sig = 0.05)"},{"path":"https://thewanglab.github.io/algatr/reference/check_dists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check geographic and environmental distances for collinearity — check_dists","text":"envlayers SpatRaster Raster* object coords dataframe x y sample coordinates type type geographic distance calculated; options \"Euclidean\" direct distance, \"topographic\" topographic distances, \"resistance\" resistance distances lyr DEM raster calculating topographic distances resistance raster calculating resistance distances sig significance threshold Mantel test","code":""},{"path":"https://thewanglab.github.io/algatr/reference/check_dists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check geographic and environmental distances for collinearity — check_dists","text":"list (1) dataframe significantly correlated variables, (2) matrix p-values, (3) matrix Mantel's r","code":""},{"path":"https://thewanglab.github.io/algatr/reference/check_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Check environmental layers for collinearity — check_env","title":"Check environmental layers for collinearity — check_env","text":"Check environmental layers collinearity","code":""},{"path":"https://thewanglab.github.io/algatr/reference/check_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check environmental layers for collinearity — check_env","text":"","code":"check_env(envlayers, threshold = 0.7)"},{"path":"https://thewanglab.github.io/algatr/reference/check_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check environmental layers for collinearity — check_env","text":"envlayers SpatRaster Raster* object threshold cutoff correlation coefficient flagging variables collinear (numeric; defaults 0.7)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/check_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check environmental layers for collinearity — check_env","text":"matrix correlation coefficients","code":""},{"path":"https://thewanglab.github.io/algatr/reference/check_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Check extracted values for collinearity — check_vals","title":"Check extracted values for collinearity — check_vals","text":"Check extracted values collinearity","code":""},{"path":"https://thewanglab.github.io/algatr/reference/check_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check extracted values for collinearity — check_vals","text":"","code":"check_vals(envlayers, coords, threshold = 0.7)"},{"path":"https://thewanglab.github.io/algatr/reference/check_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check extracted values for collinearity — check_vals","text":"envlayers SpatRaster Raster* object coords dataframe x y sample coordinates threshold cutoff correlation coefficient flagging variables collinear (numeric)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/check_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check extracted values for collinearity — check_vals","text":"matrix correlation coefficients","code":""},{"path":"https://thewanglab.github.io/algatr/reference/coords_to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from matrix, data frame, or sf to sf (sf is a pass through) — coords_to_sf","title":"Convert from matrix, data frame, or sf to sf (sf is a pass through) — coords_to_sf","text":"Convert matrix, data frame, sf sf (sf pass )","code":""},{"path":"https://thewanglab.github.io/algatr/reference/coords_to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from matrix, data frame, or sf to sf (sf is a pass through) — coords_to_sf","text":"","code":"coords_to_sf(coords)"},{"path":"https://thewanglab.github.io/algatr/reference/coords_to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert from matrix, data frame, or sf to sf (sf is a pass through) — coords_to_sf","text":"coords sf object, data frame, matrix representing coordinates","code":""},{"path":"https://thewanglab.github.io/algatr/reference/coords_to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert from matrix, data frame, or sf to sf (sf is a pass through) — coords_to_sf","text":"converted coords sf format","code":""},{"path":"https://thewanglab.github.io/algatr/reference/coords_to_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from matrix, data frame, or sf to formatted sp — coords_to_sp","title":"Convert from matrix, data frame, or sf to formatted sp — coords_to_sp","text":"Convert matrix, data frame, sf formatted sp","code":""},{"path":"https://thewanglab.github.io/algatr/reference/coords_to_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from matrix, data frame, or sf to formatted sp — coords_to_sp","text":"","code":"coords_to_sp(coords)"},{"path":"https://thewanglab.github.io/algatr/reference/coords_to_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert from matrix, data frame, or sf to formatted sp — coords_to_sp","text":"coords sf object, data frame, matrix representing coordinates","code":""},{"path":"https://thewanglab.github.io/algatr/reference/coords_to_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert from matrix, data frame, or sf to formatted sp — coords_to_sp","text":"converted coords sp format","code":""},{"path":"https://thewanglab.github.io/algatr/reference/cor_df_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create correlation dataframe from matrix and filter based on threshold — cor_df_helper","title":"Helper function to create correlation dataframe from matrix and filter based on threshold — cor_df_helper","text":"Helper function create correlation dataframe matrix filter based threshold","code":""},{"path":"https://thewanglab.github.io/algatr/reference/cor_df_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create correlation dataframe from matrix and filter based on threshold — cor_df_helper","text":"","code":"cor_df_helper(cors, threshold)"},{"path":"https://thewanglab.github.io/algatr/reference/data_processing_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install data processing packages — data_processing_packages","title":"Install data processing packages — data_processing_packages","text":"Checks presence packages required genetic data processing. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/data_processing_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install data processing packages — data_processing_packages","text":"","code":"data_processing_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/data_processing_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install data processing packages — data_processing_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/data_processing_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install data processing packages — data_processing_packages","text":"following packages installed already present: \"gdsfmt\" (Bioconductor repository) \"SeqArray\" (Bioconductor repository) \"SNPRelate\" (Bioconductor repository)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/data_processing_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install data processing packages — data_processing_packages","text":"","code":"if (FALSE) data_processing_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/do_everything_for_me.html","id":null,"dir":"Reference","previous_headings":"","what":"Lazy run of all landscape genomic analyses contained within algatr — do_everything_for_me","title":"Lazy run of all landscape genomic analyses contained within algatr — do_everything_for_me","text":"Disclaimer: probably bad idea...","code":""},{"path":"https://thewanglab.github.io/algatr/reference/do_everything_for_me.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazy run of all landscape genomic analyses contained within algatr — do_everything_for_me","text":"","code":"do_everything_for_me(gen, coords, envlayers, quiet = FALSE, gators = FALSE)"},{"path":"https://thewanglab.github.io/algatr/reference/do_everything_for_me.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazy run of all landscape genomic analyses contained within algatr — do_everything_for_me","text":"gen path vcf file, vcfR type object, dosage matrix coords dataframe x (.e., longitude) y (.e., latitude) coordinates; must order envlayers SpatRaster Raster* mapping (env provided, dataframe column names envlayers layer names ) quiet whether print output tables figures (defaults FALSE) gators set TRUE see gators...","code":""},{"path":"https://thewanglab.github.io/algatr/reference/do_everything_for_me.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lazy run of all landscape genomic analyses contained within algatr — do_everything_for_me","text":"results six analyses contained within algatr","code":""},{"path":"https://thewanglab.github.io/algatr/reference/env_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate distance between environmental vars — env_dist","title":"Calculate distance between environmental vars — env_dist","text":"Calculate distance environmental vars","code":""},{"path":"https://thewanglab.github.io/algatr/reference/env_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate distance between environmental vars — env_dist","text":"","code":"env_dist(env, stdz = TRUE)"},{"path":"https://thewanglab.github.io/algatr/reference/env_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate distance between environmental vars — env_dist","text":"env dataframe vector environmental variables locations stdz TRUE environmental values standardized (default = TRUE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/env_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate distance between environmental vars — env_dist","text":"list environmental distances samples (environmental variable)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/envirodata_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install environmental and geographic data processing packages — envirodata_packages","title":"Install environmental and geographic data processing packages — envirodata_packages","text":"Checks presence packages required environmental geographic data processing. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/envirodata_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install environmental and geographic data processing packages — envirodata_packages","text":"","code":"envirodata_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/envirodata_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install environmental and geographic data processing packages — envirodata_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/envirodata_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install environmental and geographic data processing packages — envirodata_packages","text":"following packages installed already present: \"RStoolbox\" (GitHub repository bleutner/RStoolbox) \"geodata\" \"corrplot\" \"vegan\" \"gdistance\" \"topoDistance\" \"rmapshaper\" \"wingen\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/envirodata_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install environmental and geographic data processing packages — envirodata_packages","text":"","code":"if (FALSE) envirodata_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/extrap_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Create raster mask based on coordinates — extrap_mask","title":"Create raster mask based on coordinates — extrap_mask","text":"Creates raster can used mask areas falling outside observation range dataset, defined coordinates corresponding raster values","code":""},{"path":"https://thewanglab.github.io/algatr/reference/extrap_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create raster mask based on coordinates — extrap_mask","text":"","code":"extrap_mask(coords, envlayers, method = \"range\", nsd = 2, buffer_width = NULL)  range_mask(coords, envlayers)  sd_mask(coords, envlayers, nsd)  buffer_mask(coords, envlayers, buffer_width = 0.8)  chull_mask(coords, envlayers, buffer_width = NULL)"},{"path":"https://thewanglab.github.io/algatr/reference/extrap_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create raster mask based on coordinates — extrap_mask","text":"coords data frame coordinates (first column x second y) envlayers SpatRaster Raster* object environmental values base mask method method create mask (can \"range\", \"sd\", \"buffer\", defaults \"range\"). See details information. nsd number standard deviations use using \"sd\" method buffer_width buffer width supply gBuffer using \"buffer\" method","code":""},{"path":"https://thewanglab.github.io/algatr/reference/extrap_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create raster mask based on coordinates — extrap_mask","text":"SpatRaster values 1 indicate areas fall outside observation range","code":""},{"path":"https://thewanglab.github.io/algatr/reference/extrap_mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create raster mask based on coordinates — extrap_mask","text":"method can either : range - uses range_mask, mask areas values outside range values coords sd - uses sd_mask, mask areas outside mean +/- stdev*nsd values coords (nsd defaults 2) buffer - uses buffer_mask, mask areas outside buffer_width around coords (buffer_width defaults 0.8) chull - uses chull_mask, mask areas outside convex hull points","code":""},{"path":"https://thewanglab.github.io/algatr/reference/extrap_mask.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create raster mask based on coordinates — extrap_mask","text":"range_mask(): mask based range data sd_mask(): mask based mean standard deviation data buffer_mask(): mask based buffers around points chull_mask(): mask based range data","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_coeffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get coefficients for each predictor — gdm_coeffs","title":"Get coefficients for each predictor — gdm_coeffs","text":"Get coefficients predictor","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_coeffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get coefficients for each predictor — gdm_coeffs","text":"","code":"gdm_coeffs(gdm_model)"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_coeffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get coefficients for each predictor — gdm_coeffs","text":"gdm_model model type gdm","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_coeffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get coefficients for each predictor — gdm_coeffs","text":"dataframe coefficients GDM","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dataframe of GDM results — gdm_df","title":"Create dataframe of GDM results — gdm_df","text":"Create dataframe GDM results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dataframe of GDM results — gdm_df","text":"","code":"gdm_df(gdm_result)"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dataframe of GDM results — gdm_df","text":"gdm_result output gdm_run","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create dataframe of GDM results — gdm_df","text":"dataframe gdm model coefficients","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_do_everything.html","id":null,"dir":"Reference","previous_headings":"","what":"GDM function to do everything (fit model, get coefficients, make and save raster) — gdm_do_everything","title":"GDM function to do everything (fit model, get coefficients, make and save raster) — gdm_do_everything","text":"GDM function everything (fit model, get coefficients, make save raster)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_do_everything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDM function to do everything (fit model, get coefficients, make and save raster) — gdm_do_everything","text":"","code":"gdm_do_everything(   gendist,   coords,   envlayers = NULL,   env = NULL,   model = \"full\",   sig = 0.05,   nperm = 50,   geodist_type = \"Euclidean\",   dist_lyr = NULL,   scale_gendist = FALSE,   plot_vars = TRUE,   quiet = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_do_everything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDM function to do everything (fit model, get coefficients, make and save raster) — gdm_do_everything","text":"gendist matrix genetic distances (must range 0 1 set scale_gendist = TRUE) coords dataframe x (.e., longitude) y (.e., latitude) coordinates; must order envlayers SpatRaster Raster* object mapping (env`` provided, dataframe column names envlayers`` layer names ) env dataframe raster object environmental values coordinate; provided, calculated based coords/envlayers model whether fit model variables (\"full\") perform variable selection determine best set variables (\"best\"); defaults \"full\" sig alpha value significance threshold (defaults 0.05); used model = \"best\" nperm number permutations use calculate variable importance; used model = \"best\" (defaults 50) geodist_type type geographic distance calculated; options \"Euclidean\" (default) direct distance, \"topographic\" topographic distances, \"resistance\" resistance distances. Note: creation plotting GDM raster possible \"Euclidean\" distances dist_lyr DEM raster calculating topographic distances resistance raster calculating resistance distances scale_gendist whether scale genetic distance data 0 1 (defaults FALSE) plot_vars whether create PCA plot help variable map interpretation (defaults TRUE) quiet whether print output tables figures (defaults FALSE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_do_everything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GDM function to do everything (fit model, get coefficients, make and save raster) — gdm_do_everything","text":"list final model, predictor coefficients, PCA RGB map","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_do_everything.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GDM function to do everything (fit model, get coefficients, make and save raster) — gdm_do_everything","text":"GDM run using gdm package: Fitzpatrick, M., Mokany, K., Manion, G., Nieto-Lugilde, D., & Ferrier, S. (2022). gdm: Generalized dissimilarity modeling. R package version 1.5.0-3.","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Make map from model — gdm_map","title":"Make map from model — gdm_map","text":"Make map model","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make map from model — gdm_map","text":"","code":"gdm_map(   gdm_model,   envlayers,   coords,   plot_vars = TRUE,   scl = 1,   display_axes = FALSE,   quiet = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make map from model — gdm_map","text":"gdm_model GDM model envlayers SpatRaster Raster* object (LAYER NAMES MUST CORRESPOND GDM MODEL) coords data frame x y coordinates plot_vars whether create PCA plot help variable map interpretation (defaults TRUE) scl constant rescaling variable vectors plotting (defaults 1) display_axes display PC axes text, labels, ticks (defaults FALSE) quiet whether print output tables figures (defaults FALSE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make map from model — gdm_map","text":"GDM RGB map","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install GDM packages — gdm_packages","title":"Install GDM packages — gdm_packages","text":"Checks presence packages required GDM. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install GDM packages — gdm_packages","text":"","code":"gdm_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install GDM packages — gdm_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install GDM packages — gdm_packages","text":"following packages installed already present: \"cowplot\" \"gdm\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install GDM packages — gdm_packages","text":"","code":"if (FALSE) gdm_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_diss.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot compositional dissimilarity spline plots — gdm_plot_diss","title":"Plot compositional dissimilarity spline plots — gdm_plot_diss","text":"generates two plots: plot observed response data raw ecological distance model, plot observed response predicted response model (link function applied)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_diss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot compositional dissimilarity spline plots — gdm_plot_diss","text":"","code":"gdm_plot_diss(gdm_model)"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_diss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot compositional dissimilarity spline plots — gdm_plot_diss","text":"gdm_model GDM model","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_diss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot compositional dissimilarity spline plots — gdm_plot_diss","text":"two spline plots compositional dissimilarity","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_diss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot compositional dissimilarity spline plots — gdm_plot_diss","text":"code modified plot.gdm() function gdm package (Fitzpatrick et al. 2022)","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_isplines.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot I-splines for each variable — gdm_plot_isplines","title":"Plot I-splines for each variable — gdm_plot_isplines","text":"Plot -splines variable","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_isplines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot I-splines for each variable — gdm_plot_isplines","text":"","code":"gdm_plot_isplines(gdm_model)"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_isplines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot I-splines for each variable — gdm_plot_isplines","text":"gdm_model GDM model","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_isplines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot I-splines for each variable — gdm_plot_isplines","text":"plot -spline","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PCA plot for GDM — gdm_plot_vars","title":"Create a PCA plot for GDM — gdm_plot_vars","text":"Create PCA plot GDM","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PCA plot for GDM — gdm_plot_vars","text":"","code":"gdm_plot_vars(   pcaSamp,   pcaRast,   pcaRastRGB,   coords,   x = \"PC1\",   y = \"PC2\",   scl = 1,   display_axes = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PCA plot for GDM — gdm_plot_vars","text":"pcaSamp PCA results running prcomp() pcaRast raster PCA pcaRastRGB raster PCA rescaled RGB coords dataframe x y coordinates x x-axis PC y y-axis PC scl constant rescaling variable vectors plotting display_axes whether display axes","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_plot_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PCA plot for GDM — gdm_plot_vars","text":"GDM PCA plot","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run GDM and return model object — gdm_run","title":"Run GDM and return model object — gdm_run","text":"Run GDM return model object","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run GDM and return model object — gdm_run","text":"","code":"gdm_run(   gendist,   coords,   env,   model = \"full\",   sig = 0.05,   nperm = 50,   scale_gendist = FALSE,   geodist_type = \"Euclidean\",   distPreds = NULL,   dist_lyr = NULL )"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run GDM and return model object — gdm_run","text":"gendist matrix genetic distances (must range 0 1 set scale_gendist = TRUE) coords dataframe x (.e., longitude) y (.e., latitude) coordinates; must order env dataframe raster object environmental values coordinate; provided, calculated based coords/envlayers model whether fit model variables (\"full\") perform variable selection determine best set variables (\"best\"); defaults \"full\" sig alpha value significance threshold (defaults 0.05); used model = \"best\" nperm number permutations use calculate variable importance; used model = \"best\" (defaults 50) scale_gendist whether scale genetic distance data 0 1 (defaults FALSE) geodist_type type geographic distance calculated; options \"Euclidean\" (default) direct distance, \"topographic\" topographic distances, \"resistance\" resistance distances. Note: creation plotting GDM raster possible \"Euclidean\" distances dist_lyr DEM raster calculating topographic distances resistance raster calculating resistance distances","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run GDM and return model object — gdm_run","text":"GDM model","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create gt table of GDM results — gdm_table","title":"Create gt table of GDM results — gdm_table","text":"Create gt table GDM results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create gt table of GDM results — gdm_table","text":"","code":"gdm_table(gdm_result, digits = 2, summary_stats = TRUE, footnote = TRUE)"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create gt table of GDM results — gdm_table","text":"gdm_result output gdm_run gdm_do_everything digits number digits include (defaults 2)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create gt table of GDM results — gdm_table","text":"object class gt_tbl","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gdm_var_sel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get best set of variables from a GDM model — gdm_var_sel","title":"Get best set of variables from a GDM model — gdm_var_sel","text":"Get best set variables GDM model","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gdm_var_sel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get best set of variables from a GDM model — gdm_var_sel","text":"","code":"gdm_var_sel(gdmData, sig = 0.05, nperm = 10)"},{"path":"https://thewanglab.github.io/algatr/reference/gdm_var_sel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get best set of variables from a GDM model — gdm_var_sel","text":"gdmData data formatted using GDM package sig sig level determining variable significance nperm number permutations run variable testing","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate genetic distances — gen_dist","title":"Calculate genetic distances — gen_dist","text":"Calculate genetic distances","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate genetic distances — gen_dist","text":"","code":"gen_dist(   gen = NULL,   dist_type = \"euclidean\",   plink_file = NULL,   plink_id_file = NULL,   npc_selection = \"auto\",   criticalpoint = 2.0234 )"},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate genetic distances — gen_dist","text":"gen path vcf file, vcfR type object, dosage matrix dist_type type genetic distance calculate (options: \"euclidean\" (default), \"bray_curtis\", \"dps\" proportion shared alleles (requires vcf), \"plink\", \"pc\" PC-based) plink_file \"plink\" dist_type used, path plink distance file (typically \".dist\"; required calculating plink distance) plink_id_file \"plink\" dist_type used, path plink id file (typically \".dist.id\"; required calculating plink distance) npc_selection dist_type = \"pc\", perform K selection (options: \"auto\" automatic selection based significant eigenvalues Tracy-Widom test (default), \"manual\" examine PC screeplot enter . PCs console) criticalpoint dist_type = \"pc\" used npc_selection = \"auto\", critical point significance threshold Tracy-Widom test within PCA (defaults 2.0234 corresponds alpha 0.01)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate genetic distances — gen_dist","text":"pairwise distance matrix given distance metric","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate genetic distances — gen_dist","text":"Euclidean Bray-Curtis distances calculated using ecodist package: Goslee, S.C. Urban, D.L. 2007. ecodist package dissimilarity-based analysis ecological data. Journal Statistical Software 22(7):1-19. DOI:10.18637/jss.v022.i07. Proportions shared alleles calculated using adegenet package: Jombart T. Ahmed . (2011) adegenet 1.3-1: new tools analysis genome-wide SNP data. Bioinformatics. doi:10.1093/bioinformatics/btr521. calculating proportions shared alleles, missing values ignored (.e., prop shared alleles calculated present values; scaling performed)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the relationship between two distance metrics — gen_dist_corr","title":"Plot the relationship between two distance metrics — gen_dist_corr","text":"Plot relationship two distance metrics","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the relationship between two distance metrics — gen_dist_corr","text":"","code":"gen_dist_corr(dist_x, dist_y, metric_name_x, metric_name_y)"},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the relationship between two distance metrics — gen_dist_corr","text":"dist_x df containing square distance matrix x axis dist_y df containing square distance matrix y axis metric_name_x name distance metric x axis; DPS used, must \"dps\" metric_name_y name distance metric y axis; DPS used, must \"dps\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the relationship between two distance metrics — gen_dist_corr","text":"scatterplot comparing two user-defined genetic distance metrics","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_hm.html","id":null,"dir":"Reference","previous_headings":"","what":"Make heatmap of genetic distances — gen_dist_hm","title":"Make heatmap of genetic distances — gen_dist_hm","text":"Make heatmap genetic distances","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_hm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make heatmap of genetic distances — gen_dist_hm","text":"","code":"gen_dist_hm(dist)"},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_hm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make heatmap of genetic distances — gen_dist_hm","text":"dist Matrix genetic distances","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_hm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make heatmap of genetic distances — gen_dist_hm","text":"heatmap genetic distances","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install genetic distance packages — gen_dist_packages","title":"Install genetic distance packages — gen_dist_packages","text":"Checks presence packages required genetic distance calculations. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install genetic distance packages — gen_dist_packages","text":"","code":"gen_dist_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install genetic distance packages — gen_dist_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install genetic distance packages — gen_dist_packages","text":"following packages installed already present: \"adegenet\" \"AssocTests\" \"readr\" \"tibble\" \"ecodist\" \"cowplot\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_dist_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install genetic distance packages — gen_dist_packages","text":"","code":"if (FALSE) gen_dist_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/gen_to_geno.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert dosage matrix or vcf to geno type object (N.B.: this only works for diploids!) — gen_to_geno","title":"Convert dosage matrix or vcf to geno type object (N.B.: this only works for diploids!) — gen_to_geno","text":"Convert dosage matrix vcf geno type object (N.B.: works diploids!)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_to_geno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert dosage matrix or vcf to geno type object (N.B.: this only works for diploids!) — gen_to_geno","text":"","code":"gen_to_geno(gen)"},{"path":"https://thewanglab.github.io/algatr/reference/gen_to_geno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert dosage matrix or vcf to geno type object (N.B.: this only works for diploids!) — gen_to_geno","text":"gen dosage matrix, object class 'vcfR', object type snmfProject","code":""},{"path":"https://thewanglab.github.io/algatr/reference/gen_to_geno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert dosage matrix or vcf to geno type object (N.B.: this only works for diploids!) — gen_to_geno","text":"matrix encoded geno type object","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/geno_to_dosage.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert lfmm/geno matrix to dosage matrix (N.B.: this only works for diploids!) — geno_to_dosage","title":"Convert lfmm/geno matrix to dosage matrix (N.B.: this only works for diploids!) — geno_to_dosage","text":"Convert lfmm/geno matrix dosage matrix (N.B.: works diploids!)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/geno_to_dosage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert lfmm/geno matrix to dosage matrix (N.B.: this only works for diploids!) — geno_to_dosage","text":"","code":"geno_to_dosage(geno)"},{"path":"https://thewanglab.github.io/algatr/reference/geno_to_dosage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert lfmm/geno matrix to dosage matrix (N.B.: this only works for diploids!) — geno_to_dosage","text":"geno matrix LEA geno lfmm format (.e., 0 corresponds zero reference alleles)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/geno_to_dosage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert lfmm/geno matrix to dosage matrix (N.B.: this only works for diploids!) — geno_to_dosage","text":"matrix encoded dosage type object (0 corresponds two reference alleles)","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/geo_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate geographic distance between coordinates — geo_dist","title":"Calculate geographic distance between coordinates — geo_dist","text":"Calculate geographic distance coordinates","code":""},{"path":"https://thewanglab.github.io/algatr/reference/geo_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate geographic distance between coordinates — geo_dist","text":"","code":"geo_dist(coords, type = \"Euclidean\", lyr = NULL)"},{"path":"https://thewanglab.github.io/algatr/reference/geo_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate geographic distance between coordinates — geo_dist","text":"coords dataframe x y coordinates type type geographic distance calculated; options \"Euclidean\" direct distance, \"topographic\" topographic distances, \"resistance\" resistance distances. lyr SpatRaster Raster* DEM calculating topographic distances resistance raster calculating resistance distances (RasterLayer SpatRaster object)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/geo_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate geographic distance between coordinates — geo_dist","text":"geographic distance matrix","code":""},{"path":"https://thewanglab.github.io/algatr/reference/geo_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate geographic distance between coordinates — geo_dist","text":"Euclidean, linear, distances calculated using geodist package: Padgham M, Sumner M (2021). geodist: Fast, Dependency-Free Geodesic Distance Calculations. R package version 0.0.7, Available: https://CRAN.R-project.org/package=geodist. Topographic distances calculated using topoDistance package: Wang .J. (2020) Topographic path analysis modeling dispersal functional connectivity: calculating topographic distances using TOPODISTANCE R package. Methods Ecology Evolution, 11: 265-272. Resistance distances calculated using gdistance package: van Etten, J. (2017). R package gdistance: Distances routes geographical grids. Journal Statistical Software, 76(1), 1–21.","code":""},{"path":"https://thewanglab.github.io/algatr/reference/get_worldclim.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and merge WorldClim data for study area — get_worldclim","title":"Download and merge WorldClim data for study area — get_worldclim","text":"Download merge WorldClim data study area","code":""},{"path":"https://thewanglab.github.io/algatr/reference/get_worldclim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and merge WorldClim data for study area — get_worldclim","text":"","code":"get_worldclim(coords, res = 0.5, buff = 0.01, save_output = FALSE)"},{"path":"https://thewanglab.github.io/algatr/reference/get_worldclim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and merge WorldClim data for study area — get_worldclim","text":"coords Dataframe x y sample coordinates. res resolution WorldClim data download; options 0.5, 2.5, 5, 10 arc-minutes (default = 0.5). buff buffer area around sample points cropping data layers, expressed proportion spatial extent coordinates (default = 0.01). save_output Whether save downloaded worldclim data tmp folder working directory (default = FALSE).","code":""},{"path":"https://thewanglab.github.io/algatr/reference/get_worldclim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and merge WorldClim data for study area — get_worldclim","text":"SpatRaster WorldClim layers.","code":""},{"path":"https://thewanglab.github.io/algatr/reference/get_worldclim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and merge WorldClim data for study area — get_worldclim","text":"res = 0.5 individual WorldClim tiles cover sample coordinates downloaded merged. res > 2.5 global layers downloaded. buffer area maintains large extent final cropped data layers around sample coordinates. e.g. buff = 0.01 creates 1% buffer area around coordinates.","code":""},{"path":"https://thewanglab.github.io/algatr/reference/ggbarplot_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for TESS barplots using ggplot — ggbarplot_helper","title":"Helper function for TESS barplots using ggplot — ggbarplot_helper","text":"Helper function TESS barplots using ggplot","code":""},{"path":"https://thewanglab.github.io/algatr/reference/ggbarplot_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for TESS barplots using ggplot — ggbarplot_helper","text":"","code":"ggbarplot_helper(dat)"},{"path":"https://thewanglab.github.io/algatr/reference/ggbarplot_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for TESS barplots using ggplot — ggbarplot_helper","text":"dat Q matrix","code":""},{"path":"https://thewanglab.github.io/algatr/reference/ggbarplot_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for TESS barplots using ggplot — ggbarplot_helper","text":"barplot Q-values individuals, colorized K-value","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/krig_agg_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for krig_helper; calculates aggregated/disaggregated raster cell size — krig_agg_helper","title":"Helper function for krig_helper; calculates aggregated/disaggregated raster cell size — krig_agg_helper","text":"Helper function krig_helper; calculates aggregated/disaggregated raster cell size","code":""},{"path":"https://thewanglab.github.io/algatr/reference/krig_agg_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for krig_helper; calculates aggregated/disaggregated raster cell size — krig_agg_helper","text":"","code":"krig_agg_helper(to_krig, agg_disagg, agg_spec = \"agg\")"},{"path":"https://thewanglab.github.io/algatr/reference/krig_agg_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for krig_helper; calculates aggregated/disaggregated raster cell size — krig_agg_helper","text":"to_krig object create grid kriging, grd r krig_gd agg_disagg aggregation disaggregation parameter, one agg_grd, disagg_grd, agg_r, disagg_r krig_gd agg_spec whether aggregation disaggregation performed, options \"disagg\" \"agg\" (defaults \"agg\")","code":""},{"path":"https://thewanglab.github.io/algatr/reference/krig_agg_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for krig_helper; calculates aggregated/disaggregated raster cell size — krig_agg_helper","text":"number cells contained final (aggregated disaggregated) raster layer","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/krig_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for kriging wingen moving window; checks raster resolution and runs kriging — krig_helper","title":"Helper function for kriging wingen moving window; checks raster resolution and runs kriging — krig_helper","text":"Helper function kriging wingen moving window; checks raster resolution runs kriging","code":""},{"path":"https://thewanglab.github.io/algatr/reference/krig_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for kriging wingen moving window; checks raster resolution and runs kriging — krig_helper","text":"","code":"krig_helper(   map,   grd = NULL,   index = 1,   agg_grd = NULL,   disagg_grd = NULL,   agg_r = NULL,   disagg_r = NULL )"},{"path":"https://thewanglab.github.io/algatr/reference/krig_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for kriging wingen moving window; checks raster resolution and runs kriging — krig_helper","text":"map RasterLayer RasterStack produced window_gd() grd object create grid kriging; inherits krig_gd (defaults NULL) index integer indices layers raster stack krige; inherits krig_gd (defaults 1) agg_grd factor use aggregation grd; inherits krig_gd (defaults NULL) disagg_grd factor use disaggregation grd; inherits krig_gd (defaults NULL) agg_r factor use aggregation r; inherits krig_gd (defaults NULL) disagg_r factor use disaggregation r; inherits krig_gd (defaults NULL)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/krig_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for kriging wingen moving window; checks raster resolution and runs kriging — krig_helper","text":"kriged map","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/krig_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to make a custom legend for TESS maps — krig_legend","title":"Helper function to make a custom legend for TESS maps — krig_legend","text":"Helper function make custom legend TESS maps","code":""},{"path":"https://thewanglab.github.io/algatr/reference/krig_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to make a custom legend for TESS maps — krig_legend","text":"","code":"krig_legend(gg_df, plot_method, ggplot_fill, minQ)"},{"path":"https://thewanglab.github.io/algatr/reference/krig_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to make a custom legend for TESS maps — krig_legend","text":"gg_df dataframe tidy format Q values tess_ggplot plot_method method making rainbow map kriged layers (options: \"maxQ\" plot max Q value cell (default), \"allQ\" plot Q values greater minQ, \"maxQ_poly\" \"allQ_poly\" create plots previously described, polygons K instead continuous Q values) ggplot_fill ggplot2 scale fill discrete function (default: scale_fill_viridis_d, option = \"turbo\") minQ threshold minimum Q-value rainbow plotting plot_method = \"allQ\" plot_method = \"allQ_poly\" used (defaults 0.10)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/krig_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to make a custom legend for TESS maps — krig_legend","text":"legend kriged map TESS","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/ld_prune.html","id":null,"dir":"Reference","previous_headings":"","what":"ld_prune prunes SNPs based on linkage disequilibrium using SNPRelate and SeqArray packages — ld_prune","title":"ld_prune prunes SNPs based on linkage disequilibrium using SNPRelate and SeqArray packages — ld_prune","text":"ld_prune prunes SNPs based linkage disequilibrium using SNPRelate SeqArray packages","code":""},{"path":"https://thewanglab.github.io/algatr/reference/ld_prune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ld_prune prunes SNPs based on linkage disequilibrium using SNPRelate and SeqArray packages — ld_prune","text":"","code":"ld_prune(   vcf,   out_name,   out_format,   nodes = 1,   ld.threshold = 0.6,   slide.max.n = 100,   maf = 0.05,   seed = 1234,   method = c(\"corr\"),   save_output = TRUE )"},{"path":"https://thewanglab.github.io/algatr/reference/ld_prune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ld_prune prunes SNPs based on linkage disequilibrium using SNPRelate and SeqArray packages — ld_prune","text":"vcf path vcf file containing SNPs out_name prefix name output files (append param settings) out_format output file format (\"plink\" produce ped map files \"vcf\" produce vcf GDS) nodes number parallel processors (numeric) ld.threshold threshold LD pruning (numeric; 0 - 1; defaults 0.6) slide.max.n maximum number SNPs sliding window (numeric; defaults 100) maf minor allele frequency cutoff (numeric; defaults 0.05) seed random starting seed (defaults 1234) method LD threshold method; default corr r2 correlation coefficient save_output TRUE, saves SNP GDS ped (plink) files retained SNPs new directory; FALSE returns object (defaults TRUE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/ld_prune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ld_prune prunes SNPs based on linkage disequilibrium using SNPRelate and SeqArray packages — ld_prune","text":"LD-pruned vcf-type object","code":""},{"path":"https://thewanglab.github.io/algatr/reference/ld_prune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ld_prune prunes SNPs based on linkage disequilibrium using SNPRelate and SeqArray packages — ld_prune","text":"SNPRelate package citation: Zheng et al. (2012): https://doi.org/10.1093/bioinformatics/bts606","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert LFMM results into a tidy dataframe for downstream processing — lfmm_df","title":"Convert LFMM results into a tidy dataframe for downstream processing — lfmm_df","text":"Convert LFMM results tidy dataframe downstream processing","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert LFMM results into a tidy dataframe for downstream processing — lfmm_df","text":"","code":"lfmm_df(x)"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert LFMM results into a tidy dataframe for downstream processing — lfmm_df","text":"x lfmm_test_result element lfmm_run results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert LFMM results into a tidy dataframe for downstream processing — lfmm_df","text":"tidy dataframe LFMM results SNP, p-value, association env var relevant statistics","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_do_everything.html","id":null,"dir":"Reference","previous_headings":"","what":"LFMM function to do everything — lfmm_do_everything","title":"LFMM function to do everything — lfmm_do_everything","text":"LFMM function everything","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_do_everything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LFMM function to do everything — lfmm_do_everything","text":"","code":"lfmm_do_everything(   gen,   env,   coords = NULL,   impute = \"structure\",   K_impute = 3,   entropy = TRUE,   repetitions = 10,   project = \"new\",   quiet_impute = TRUE,   save_output = FALSE,   output_filename = NULL,   K = NULL,   lfmm_method = \"ridge\",   K_selection = \"tracy_widom\",   Kvals = 1:10,   sig = 0.05,   p_adj = \"fdr\",   calibrate = \"gif\",   criticalpoint = 2.0234,   low = 0.08,   max.pc = 0.9,   perc.pca = 90,   max.n.clust = 10,   quiet = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_do_everything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LFMM function to do everything — lfmm_do_everything","text":"gen genotype dosage matrix (rows = individuals & columns = SNPs) vcfR object env dataframe environmental data Raster* type object environmental values coordinates can extracted coords dataframe coordinates (needed K selection performed TESS environmental values provided) impute NAs gen, imputation performed missing values; options \"structure\" uses str_impute() function impute based population structure inferred LEA::snmf (default); option \"simple\" based simple_impute() imputes median K_impute impute = \"structure\", integer vector (range single value) corresponding number ancestral populations sNMF algorithm estimates calculated (defaults 3) entropy boolean value. true, cross-entropy criterion calculated      (see create.dataset      cross.entropy.estimation). repetitions integer corresponding number repetitions value      K. project character string among \"continue\", \"new\", \"force\". \"continue\",     results stored current project. \"new\", current      project removed new one created store result.      \"force\", results stored current project even input      file modified since creation project. quiet_impute impute = \"structure\", whether print results cross-entropy scores (defaults TRUE; K range values); displays run minimum cross-entropy save_output impute = \"structure\", TRUE, saves SNP GDS ped (plink) files retained SNPs new directory; FALSE returns object (defaults FALSE) output_filename impute = \"structure\" save_output = TRUE, name prefix saved .geno file, SNMF project file, SNMF output file results (defaults FALSE, files saved) K number latent factors (left NULL (default), K value selection conducted) lfmm_method lfmm method (either \"ridge\" (default) \"lasso\") K_selection method performing k selection (can either \"tracy_widom\" (default), \"quick_elbow\", \"tess\", \"find_clusters\") Kvals values K test \"tess\" sig alpha level determining candidate SNPs (defaults 0.05) p_adj method use p-value correction (defaults \"fdr\"); options can found p.adjust calibrate character string, \"gif\" \"median+MAD\". \"gif\" option set (default), significance values calibrated using genomic control method. Genomic control uses robust estimate variance z-scores called \"genomic inflation factor\". \"median+MAD\" option set, pvalues calibrated computing median MAD zscores. NULL, pvalues calibrated. criticalpoint K_selection = \"tracy_widom\", numeric value corresponding significance level. significance level 0.05, 0.01, 0.005, 0.001, criticalpoint set 0.9793, 2.0234, 2.4224, 3.2724, respectively (defaults 2.0234) low K_selection = \"quick_elbow\", numeric, zero one, threshold defines whether principal component explains 'much' variance (defaults 0.08). max.pc K_selection = \"quick_elbow\", maximum percentage variance capture elbow (cumulative sum PC 'n'; defaults 0.90). perc.pca K_selection = \"find_clusters\", numeric value 0 100 indicating minimal percentage total variance data expressed retained axes PCA (defaults 90). max.n.clust K_selection = \"find_clusters\", integer indicating maximum number clusters try. Values 'k' picked 1 max.n.clust (defaults 10) quiet whether print output tables figures (defaults FALSE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_do_everything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LFMM function to do everything — lfmm_do_everything","text":"list candidate SNPs, model results, K-value","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_do_everything.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LFMM function to do everything — lfmm_do_everything","text":"LFMM run using lfmm package: Jumentier, B. (2021). lfmm: Latent Factor Mixed Models. R package version 1.1. See also: Caye, K., Jumentier, B., Lepeule, J., & François, O. (2019). LFMM 2: Fast accurate inference gene-environment associations genome-wide studies. Mol. Biol. Evol. 36(4):852-860. doi: https://doi.org/10.1093/molbev/msz008","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_manhattanplot.html","id":null,"dir":"Reference","previous_headings":"","what":"LFMM Manhattan Plot — lfmm_manhattanplot","title":"LFMM Manhattan Plot — lfmm_manhattanplot","text":"LFMM Manhattan Plot","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_manhattanplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LFMM Manhattan Plot — lfmm_manhattanplot","text":"","code":"lfmm_manhattanplot(df, sig, group = NULL, var = NULL)"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_manhattanplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LFMM Manhattan Plot — lfmm_manhattanplot","text":"df dataframe lfmm test results produced lfmm_df sig significance cutoff","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_manhattanplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LFMM Manhattan Plot — lfmm_manhattanplot","text":"Manhattan plot","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install LFMM packages — lfmm_packages","title":"Install LFMM packages — lfmm_packages","text":"Checks presence packages required LFMM. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install LFMM packages — lfmm_packages","text":"","code":"lfmm_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install LFMM packages — lfmm_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install LFMM packages — lfmm_packages","text":"following packages installed already present: \"adegenet\" \"AssocTests\" \"lfmm\" \"tess3r\" (GitHub repository bcm-uga/TESS3_encho_sen) \"LEA\" (Bioconductor repository)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install LFMM packages — lfmm_packages","text":"","code":"if (FALSE) lfmm_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_qqplot.html","id":null,"dir":"Reference","previous_headings":"","what":"LFMM QQplot — lfmm_qqplot","title":"LFMM QQplot — lfmm_qqplot","text":"LFMM QQplot","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_qqplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LFMM QQplot — lfmm_qqplot","text":"","code":"lfmm_qqplot(df)"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_qqplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LFMM QQplot — lfmm_qqplot","text":"df dataframe LFMM test results produced lfmm_df","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_qqplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LFMM QQplot — lfmm_qqplot","text":"QQ-plot","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run LFMM — lfmm_run","title":"Run LFMM — lfmm_run","text":"Run LFMM","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run LFMM — lfmm_run","text":"","code":"lfmm_run(   gen,   env,   K,   lfmm_method = \"ridge\",   p_adj = \"fdr\",   sig = 0.05,   calibrate = \"gif\" )"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run LFMM — lfmm_run","text":"gen genotype dosage matrix (rows = individuals & columns = SNPs) vcfR object env dataframe environmental data Raster* type object environmental values coordinates can extracted K number latent factors (left NULL (default), K value selection conducted) lfmm_method lfmm method (either \"ridge\" (default) \"lasso\") p_adj method use p-value correction (defaults \"fdr\"); options can found p.adjust sig alpha level determining candidate SNPs (defaults 0.05) calibrate character string, \"gif\" \"median+MAD\". \"gif\" option set (default), significance values calibrated using genomic control method. Genomic control uses robust estimate variance z-scores called \"genomic inflation factor\". \"median+MAD\" option set, pvalues calibrated computing median MAD zscores. NULL, pvalues calibrated.","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create gt table of LFMM results — lfmm_table","title":"Create gt table of LFMM results — lfmm_table","text":"Create gt table LFMM results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create gt table of LFMM results — lfmm_table","text":"","code":"lfmm_table(   df,   sig = 0.05,   sig_only = TRUE,   top = FALSE,   order = FALSE,   var = NULL,   rows = NULL,   digits = 2,   footnotes = TRUE )"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create gt table of LFMM results — lfmm_table","text":"df df element lfmm_run results sig alpha level determining candidate snps (defaults 0.5) sig_only include SNPs exceeded significance threshold table (defaults TRUE) top SNPs significantly associated multiple environmental variables, display top association (.e., variable maximum B value; defaults FALSE) order TRUE, order rows decreasing B value (defaults FALSE orders rows based variable) var display significant SNPs associated particular environmental variable (defaults NULL) rows number rows include table (defaults NULL) digits number decimal points include (defaults 2)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create gt table of LFMM results — lfmm_table","text":"table LFMM results","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_test_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to tidy LFMM test results — lfmm_test_tidy","title":"Helper function to tidy LFMM test results — lfmm_test_tidy","text":"Helper function tidy LFMM test results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_test_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to tidy LFMM test results — lfmm_test_tidy","text":"","code":"lfmm_test_tidy(colname, lfmm_test_result)"},{"path":"https://thewanglab.github.io/algatr/reference/lfmm_test_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to tidy LFMM test results — lfmm_test_tidy","text":"colname names elements within lfmm_test_result lfmm_test_result LFMM test results","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/liz_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Example coordinates from Bouzid et al. 2022 — liz_coords","title":"Example coordinates from Bouzid et al. 2022 — liz_coords","text":"Example coordinates Bouzid et al. 2022","code":""},{"path":"https://thewanglab.github.io/algatr/reference/liz_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example coordinates from Bouzid et al. 2022 — liz_coords","text":"","code":"liz_coords"},{"path":"https://thewanglab.github.io/algatr/reference/liz_coords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example coordinates from Bouzid et al. 2022 — liz_coords","text":"dataframe x y coordinates 53 samples","code":""},{"path":"https://thewanglab.github.io/algatr/reference/liz_coords.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example coordinates from Bouzid et al. 2022 — liz_coords","text":"https://doi.org/10.1111/mec.15836","code":""},{"path":"https://thewanglab.github.io/algatr/reference/liz_gendist.html","id":null,"dir":"Reference","previous_headings":"","what":"Example genetic distance matrix, calculated with Plink using data from Bouzid et al. 2022 — liz_gendist","title":"Example genetic distance matrix, calculated with Plink using data from Bouzid et al. 2022 — liz_gendist","text":"Example genetic distance matrix, calculated Plink using data Bouzid et al. 2022","code":""},{"path":"https://thewanglab.github.io/algatr/reference/liz_gendist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example genetic distance matrix, calculated with Plink using data from Bouzid et al. 2022 — liz_gendist","text":"","code":"liz_gendist"},{"path":"https://thewanglab.github.io/algatr/reference/liz_gendist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example genetic distance matrix, calculated with Plink using data from Bouzid et al. 2022 — liz_gendist","text":"dataframe genetic distances 53 samples","code":""},{"path":"https://thewanglab.github.io/algatr/reference/liz_gendist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example genetic distance matrix, calculated with Plink using data from Bouzid et al. 2022 — liz_gendist","text":"https://doi.org/10.1111/mec.15836","code":""},{"path":"https://thewanglab.github.io/algatr/reference/liz_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Example VCF from Bouzid et al. 2022 — liz_vcf","title":"Example VCF from Bouzid et al. 2022 — liz_vcf","text":"Example VCF Bouzid et al. 2022","code":""},{"path":"https://thewanglab.github.io/algatr/reference/liz_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example VCF from Bouzid et al. 2022 — liz_vcf","text":"","code":"liz_vcf"},{"path":"https://thewanglab.github.io/algatr/reference/liz_vcf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example VCF from Bouzid et al. 2022 — liz_vcf","text":"vcfR object 1000 loci 53 samples","code":""},{"path":"https://thewanglab.github.io/algatr/reference/liz_vcf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example VCF from Bouzid et al. 2022 — liz_vcf","text":"https://doi.org/10.1111/mec.15836","code":""},{"path":"https://thewanglab.github.io/algatr/reference/load_algatr_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Load example data — load_algatr_example","title":"Load example data — load_algatr_example","text":"Example dataset Bouzid et al. 2022. code used create dataset can found data-raw/DATASET","code":""},{"path":"https://thewanglab.github.io/algatr/reference/load_algatr_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load example data — load_algatr_example","text":"","code":"load_algatr_example(quiet = FALSE)"},{"path":"https://thewanglab.github.io/algatr/reference/load_algatr_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load example data — load_algatr_example","text":"quiet whether load without messages","code":""},{"path":"https://thewanglab.github.io/algatr/reference/load_algatr_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load example data — load_algatr_example","text":"loads liz_vcf, liz_gendist, liz_coords, CA_env objects","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Make nice dataframe from MMRR results — mmrr_df","title":"Make nice dataframe from MMRR results — mmrr_df","text":"Make nice dataframe MMRR results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make nice dataframe from MMRR results — mmrr_df","text":"","code":"mmrr_df(mod)"},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make nice dataframe from MMRR results — mmrr_df","text":"mod fitted MMRR model","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make nice dataframe from MMRR results — mmrr_df","text":"dataframe MMRR results","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_do_everything.html","id":null,"dir":"Reference","previous_headings":"","what":"MMRR function to do everything — mmrr_do_everything","title":"MMRR function to do everything — mmrr_do_everything","text":"MMRR function everything","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_do_everything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MMRR function to do everything — mmrr_do_everything","text":"","code":"mmrr_do_everything(   gendist,   coords,   env,   geo = TRUE,   model = \"full\",   geodist_type = \"Euclidean\",   dist_lyr = NULL,   nperm = 999,   stdz = TRUE,   quiet = FALSE,   plot_type = \"all\" )"},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_do_everything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MMRR function to do everything — mmrr_do_everything","text":"gendist matrix genetic distances coords dataframe x y coordinates env dataframe environmental data Raster* type object environmental values coordinates can extracted geo whether include geographic, topographic, resistance distance independent variable (defaults TRUE) model whether fit model variables (\"full\") perform variable selection determine best set variables (\"best\"); defaults \"full\" geodist_type geo = TRUE, type geographic distance calculated; options \"Euclidean\" (default) direct distance, \"topographic\" topographic distances, \"resistance\" resistance distances dist_lyr geodist_type = \"topographic\", DEM raster calculating topographic distances geodist_type = \"resistance\", resistance raster calculating resistance distances nperm number permutations use calculate variable importance; used model = \"best\" (default = 999) stdz TRUE matrices standardized (default = TRUE) quiet whether plot results (default = FALSE) plot_type quiet = FALSE, plots produce (options: (1) \"vars\" plot single variable relationships, (2) \"fitted\" plot fitted relationship, (3) \"cov\" plot covariances predictor variables, (4) \"\" produce plots (default))","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_do_everything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MMRR function to do everything — mmrr_do_everything","text":"list final model results regression coefficients","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_do_everything.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MMRR function to do everything — mmrr_do_everything","text":"MMRR method described : Wang, .J. (2013). Examining full effects landscape heterogeneity spatial genetic variation: multiple matrix regression approach quantifying geographic ecological isolation. Evolution 67(12):3403-3411. doi: https://doi.org/10.1111/evo.12134","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install MMRR packages — mmrr_packages","title":"Install MMRR packages — mmrr_packages","text":"Checks presence packages required MMRR. package already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install MMRR packages — mmrr_packages","text":"","code":"mmrr_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install MMRR packages — mmrr_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install MMRR packages — mmrr_packages","text":"following package installed already present: \"GGally\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install MMRR packages — mmrr_packages","text":"","code":"if (FALSE) mmrr_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MMRR results — mmrr_plot","title":"Plot MMRR results — mmrr_plot","text":"Plot MMRR results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MMRR results — mmrr_plot","text":"","code":"mmrr_plot(   Y = NULL,   X,   mod = NULL,   plot_type = \"all\",   stdz = TRUE,   var_names = NULL )"},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MMRR results — mmrr_plot","text":"Y dependent variable form distance matrix X list independent variables form distance matrices (required plot_type = \"fitted\", vars \"\") mod fitted MMRR model (required plot_type = \"fitted\" \"\") plot_type plots produce (options: (1) \"vars\" plot single variable relationships, (2) \"fitted\" plot fitted relationship, (3) \"cov\" plot covariances predictor variables, (4) \"\" produce plots (default)) stdz TRUE matrices standardized (default = TRUE) var_names add variable names plot (defaults NULL)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MMRR results — mmrr_plot","text":"plots MMRR single variable relationships, fitted relationship, covariances predictor variables","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run MMRR and return model object — mmrr_run","title":"Run MMRR and return model object — mmrr_run","text":"Run MMRR return model object","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run MMRR and return model object — mmrr_run","text":"","code":"mmrr_run(Y, X, nperm = 999, stdz = TRUE, model = \"full\")"},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run MMRR and return model object — mmrr_run","text":"Y dependent distance matrix X list independent distance matrices (optional names) nperm number permutations use calculate variable importance; used model = \"best\" (default = 999) stdz TRUE matrices standardized (default = TRUE) model whether fit model variables (\"full\") perform variable selection determine best set variables (\"best\"); defaults \"full\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run MMRR and return model object — mmrr_run","text":"list final model results regression coefficients","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create gt table of MMRR results — mmrr_table","title":"Create gt table of MMRR results — mmrr_table","text":"Create gt table MMRR results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create gt table of MMRR results — mmrr_table","text":"","code":"mmrr_table(mmrr_results, digits = 2, summary_stats = TRUE)"},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create gt table of MMRR results — mmrr_table","text":"mmrr_results results MMRR digits number decimal places round summary_stats whether add summary statistics (R-squared, F-statistic, F p-value) bottom table (defaults TRUE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create gt table of MMRR results — mmrr_table","text":"object class gt_tbl","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_var_sel.html","id":null,"dir":"Reference","previous_headings":"","what":"mmrr_var_sel performs MMRR with backward elimination variable selection — mmrr_var_sel","title":"mmrr_var_sel performs MMRR with backward elimination variable selection — mmrr_var_sel","text":"mmrr_var_sel performs MMRR backward elimination variable selection","code":""},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_var_sel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mmrr_var_sel performs MMRR with backward elimination variable selection — mmrr_var_sel","text":"","code":"mmrr_var_sel(Y, X, nperm = 999, stdz = TRUE)"},{"path":"https://thewanglab.github.io/algatr/reference/mmrr_var_sel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mmrr_var_sel performs MMRR with backward elimination variable selection — mmrr_var_sel","text":"Y dependent distance matrix X list independent distance matrices (optional names) nperm number permutations use calculate variable importance; used model = \"best\" (default = 999) stdz TRUE matrices standardized (default = TRUE)","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://thewanglab.github.io/algatr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://thewanglab.github.io/algatr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://thewanglab.github.io/algatr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://thewanglab.github.io/algatr/reference/plot_crossent.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to plot cross entropy scores from SNMF — plot_crossent","title":"Helper function to plot cross entropy scores from SNMF — plot_crossent","text":"Helper function plot cross entropy scores SNMF","code":""},{"path":"https://thewanglab.github.io/algatr/reference/plot_crossent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to plot cross entropy scores from SNMF — plot_crossent","text":"","code":"plot_crossent(ce_values)"},{"path":"https://thewanglab.github.io/algatr/reference/plot_crossent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to plot cross entropy scores from SNMF — plot_crossent","text":"ce_values df run, K-value, cross entropy created snmf_bestK","code":""},{"path":"https://thewanglab.github.io/algatr/reference/plot_crossent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to plot cross entropy scores from SNMF — plot_crossent","text":"ggplots cross entropy values compared K-values (across runs)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/plot_extrap_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mask on top of map — plot_extrap_mask","title":"Plot mask on top of map — plot_extrap_mask","text":"Plots raster another raster \"mask\" top ","code":""},{"path":"https://thewanglab.github.io/algatr/reference/plot_extrap_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mask on top of map — plot_extrap_mask","text":"","code":"plot_extrap_mask(   map_r,   map_mask,   RGB_cols = TRUE,   mask_col = rgb(0, 0, 0, alpha = 0.9) )"},{"path":"https://thewanglab.github.io/algatr/reference/plot_extrap_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mask on top of map — plot_extrap_mask","text":"map_r SpatRaster Raster* object masked map_mask SpatRaster Raster* object 1s want mask NA everywhere else (.e., want keep, produced extrap_mask) RGB_cols whether plot RGB-based mask_col color transparency mask (defaults black alpha = 0.9)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/plot_extrap_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot mask on top of map — plot_extrap_mask","text":"plot map areas masked based map_mask","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/pops_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get population assignments for best K — pops_helper","title":"Helper function to get population assignments for best K — pops_helper","text":"Helper function get population assignments best K","code":""},{"path":"https://thewanglab.github.io/algatr/reference/pops_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get population assignments for best K — pops_helper","text":"","code":"pops_helper(gen, tess3_obj, K)"},{"path":"https://thewanglab.github.io/algatr/reference/pops_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get population assignments for best K — pops_helper","text":"gen genotype dosage matrix (rows = individuals & columns = SNPs) vcfR object tess3_obj list produced tess3 K K value","code":""},{"path":"https://thewanglab.github.io/algatr/reference/pops_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get population assignments for best K — pops_helper","text":"population assignments individual based max Q values","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/quick_elbow.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly choose an elbow for a PC — quick_elbow","title":"Quickly choose an elbow for a PC — quick_elbow","text":"variance 5% per component, choose largest % drop. Designed variance percentages, also work given full set Evalues. Quickly estimate 'elbow' scree plot (PCA)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/quick_elbow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly choose an elbow for a PC — quick_elbow","text":"","code":"quick_elbow(varpc, low = 0.08, max.pc = 0.9)"},{"path":"https://thewanglab.github.io/algatr/reference/quick_elbow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly choose an elbow for a PC — quick_elbow","text":"varpc numeric, vector eigenvalues, 'percentage variance' explained datapoints principal component. using partial set components, first pass estimate.eig.vpcs() estimate missing eigenvalues low numeric (zero one); threshold defines whether principal component explains 'much' variance max.pc maximum percentage variance capture elbow (cumulative sum PC 'n')","code":""},{"path":"https://thewanglab.github.io/algatr/reference/quick_elbow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly choose an elbow for a PC — quick_elbow","text":"number principal components keep, prior determined elbow cutoff","code":""},{"path":"https://thewanglab.github.io/algatr/reference/quick_elbow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quickly choose an elbow for a PC — quick_elbow","text":"function uses rough algorithm estimate sensible 'elbow' choose PCA screeplot eigenvalues. function looks initial arbitrarily 'low' level variance looks first eigenvalue lower . first eigenvalue actually lower (.e, PCs explanatory) 'low' value iteratively halved longer case. starting arbitrary threshold drop variance explained pair consecutive PCs standardized dividing larger pair. largest percentage drop series 'low' % selected 'elbow'.","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/quick_elbow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quickly choose an elbow for a PC — quick_elbow","text":"Nicholas Cooper","code":""},{"path":"https://thewanglab.github.io/algatr/reference/quick_elbow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly choose an elbow for a PC — quick_elbow","text":"","code":"# correlated data mat <- sim.cor(100, 50) #> Error in sim.cor(100, 50): could not find function \"sim.cor\" result <- princomp(mat) #> Error in eval(expr, envir, enclos): object 'mat' not found eig <- result$sdev^2 #> Error in eval(expr, envir, enclos): object 'result' not found elb.a <- quick_elbow(eig) #> Error in eval(expr, envir, enclos): object 'eig' not found pca.scree.plot(eig, elbow = elb.a, M = mat) #> Error in pca.scree.plot(eig, elbow = elb.a, M = mat): could not find function \"pca.scree.plot\" elb.b <- quick_elbow(eig, low = .05) # decrease 'low' to select more components #> Error in eval(expr, envir, enclos): object 'eig' not found pca.scree.plot(eig, elbow = elb.b, M = mat) #> Error in pca.scree.plot(eig, elbow = elb.b, M = mat): could not find function \"pca.scree.plot\" # random (largely independent) data, usually higher elbow # mat2 <- generate.test.matrix(5, 3) #> Error in generate.test.matrix(5, 3): could not find function \"generate.test.matrix\" result2 <- princomp(mat2) #> Error in eval(expr, envir, enclos): object 'mat2' not found eig2 <- result2$sdev^2 #> Error in eval(expr, envir, enclos): object 'result2' not found elb2 <- quick_elbow(result2$sdev^2) #> Error in eval(expr, envir, enclos): object 'result2' not found pca.scree.plot(eig2, elbow = elb2, M = mat2) #> Error in pca.scree.plot(eig2, elbow = elb2, M = mat2): could not find function \"pca.scree.plot\""},{"path":"https://thewanglab.github.io/algatr/reference/rda_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Genotype-environment correlation test — rda_cor","title":"Genotype-environment correlation test — rda_cor","text":"Genotype-environment correlation test","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genotype-environment correlation test — rda_cor","text":"","code":"rda_cor(gen, var)"},{"path":"https://thewanglab.github.io/algatr/reference/rda_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Genotype-environment correlation test — rda_cor","text":"gen dosage matrix var dataframe predictor variables","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Genotype-environment correlation test — rda_cor","text":"dataframe r p-values correlation test","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/rda_do_everything.html","id":null,"dir":"Reference","previous_headings":"","what":"RDA function to do everything — rda_do_everything","title":"RDA function to do everything — rda_do_everything","text":"RDA function everything","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_do_everything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RDA function to do everything — rda_do_everything","text":"","code":"rda_do_everything(   gen,   env,   coords = NULL,   impute = \"structure\",   K_impute = 3,   entropy = TRUE,   repetitions = 10,   project = \"new\",   quiet_impute = TRUE,   save_output = FALSE,   output_filename = NULL,   model = \"full\",   correctGEO = FALSE,   correctPC = FALSE,   outlier_method = \"p\",   sig = 0.05,   z = 3,   p_adj = \"fdr\",   cortest = TRUE,   nPC = 3,   varpart = FALSE,   naxes = \"all\",   Pin = 0.05,   R2permutations = 1000,   R2scope = T,   stdz = TRUE,   quiet = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/rda_do_everything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RDA function to do everything — rda_do_everything","text":"gen genotype dosage matrix (rows = individuals & columns = SNPs) vcfR object env dataframe environmental data Raster* type object environmental values coordinates can extracted coords dataframe coordinates (needed correctGEO = TRUE) env Raster* values extracted impute NAs gen, imputation performed missing values; options \"structure\" uses str_impute() function impute based population structure inferred LEA::snmf (default); option \"simple\" based simple_impute() imputes median K_impute impute = \"structure\", integer vector (range single value) corresponding number ancestral populations sNMF algorithm estimates calculated (defaults 3) entropy boolean value. true, cross-entropy criterion calculated      (see create.dataset      cross.entropy.estimation). repetitions integer corresponding number repetitions value      K. project character string among \"continue\", \"new\", \"force\". \"continue\",     results stored current project. \"new\", current      project removed new one created store result.      \"force\", results stored current project even input      file modified since creation project. quiet_impute impute = \"structure\", whether print results cross-entropy scores (defaults TRUE; K range values); displays run minimum cross-entropy save_output impute = \"structure\", TRUE, saves SNP GDS ped (plink) files retained SNPs new directory; FALSE returns object (defaults FALSE) output_filename impute = \"structure\" save_output = TRUE, name prefix saved .geno file, SNMF project file, SNMF output file results (defaults FALSE, files saved) model whether fit model variables (\"full\") perform variable selection determine best set variables (\"best\"); defaults \"full\" correctGEO whether condition geographic coordinates correctPC whether condition PCs PCA genotypes outlier_method method determine outliers. Can either \"p\" use p-value method \"z\" use z-score based method sig outlier_method = \"p\", significance level use identify SNPs (defaults 0.05) z outlier_method = \"z\", number standard deviations use identify SNPs (defaults 3) p_adj outlier_method = \"p\", method use p-value correction (defaults \"fdr\"); options can found p.adjust() cortest whether create table correlations SNPs environmental variable (defaults TRUE) nPC number PCs use correctPC = TRUE (defaults 3); set \"manual\" selection option terminal prompt provided varpart whether perform variance partitioning (defaults FALSE) naxes number RDA axes use (defaults \"\" use axes), set \"manual\" selection option terminal prompt given, otherwise can integer less equal total number axes Pin model = \"best\", limits permutation P-values adding (Pin) term model, dropping (Pout) model. Term added P <= Pin, removed P > Pout (see ordiR2step) (defaults 0.05) R2permutations model = \"best\", number permutations used estimation adjusted R2 cca using RsquareAdj (see ordiR2step) (defaults 1000) R2scope model = \"best\" set TRUE (default), use adjusted R2 stopping criterion: models lower adjusted R2 scope accepted (see ordiR2step) stdz whether center scale environmental data (defaults TRUE) quiet whether print output tables figures (defaults FALSE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_do_everything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RDA function to do everything — rda_do_everything","text":"list containing (1) outlier SNPs, (2) dataframe correlation test results, cortest = TRUE, (3) RDA model, (4) results outlier analysis (output rda_getoutliers), (5) RDA R-Squared, (6) RDA ANOVA, (7) p-values outlier_method = \"p\", (8) results variance partitioning analysis, varpart = TRUE","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_do_everything.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RDA function to do everything — rda_do_everything","text":"Much algatr's code adapted Capblancq T., Forester B.R. 2021. Redundancy analysis: swiss army knife landscape genomics. Methods Ecol. Evol. 12:2298-2309. doi: https://doi.org/10.1111/2041-210X.13722.","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/rda_getoutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get significant outliers from RDA model — rda_getoutliers","title":"Get significant outliers from RDA model — rda_getoutliers","text":"Get significant outliers RDA model","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_getoutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get significant outliers from RDA model — rda_getoutliers","text":"","code":"rda_getoutliers(   mod,   naxes = \"all\",   outlier_method = \"p\",   p_adj = \"fdr\",   sig = 0.05,   z = 3,   plot = TRUE )"},{"path":"https://thewanglab.github.io/algatr/reference/rda_getoutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get significant outliers from RDA model — rda_getoutliers","text":"naxes number RDA axes use (defaults \"\" use axes), set \"manual\" selection option terminal prompt given, otherwise can integer less equal total number axes outlier_method method determine outliers. Can either \"p\" use p-value method \"z\" use z-score based method p_adj outlier_method = \"p\", method use p-value correction (defaults \"fdr\"); options can found p.adjust() sig outlier_method = \"p\", significance level use identify SNPs (defaults 0.05) z outlier_method = \"z\", number standard deviations use identify SNPs (defaults 3) plot whether produce scree plot RDA axes (defaults TRUE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_getoutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get significant outliers from RDA model — rda_getoutliers","text":"results outlier tests. outlier_method = \"p\", list outlier SNPs, p-values, results rdadapt (see Capblancq et al. 2018). outlier_method = \"z\", dataframe outlier SNP Z-scores axis","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/rda_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install RDA packages — rda_packages","title":"Install RDA packages — rda_packages","text":"Checks presence packages required RDA. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install RDA packages — rda_packages","text":"","code":"rda_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/rda_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install RDA packages — rda_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install RDA packages — rda_packages","text":"following packages installed already present: \"ggrepel\" \"qvalue\" (Bioconductor repository) \"robust\" \"tibble\" \"vegan\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install RDA packages — rda_packages","text":"","code":"if (FALSE) rda_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/rda_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot RDA results — rda_plot","title":"Plot RDA results — rda_plot","text":"Plot RDA results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot RDA results — rda_plot","text":"","code":"rda_plot(   mod,   rda_snps = NULL,   pvalues = NULL,   axes = \"all\",   biplot_axes = NULL,   sig = 0.05,   manhattan = NULL,   rdaplot = NULL,   binwidth = NULL )"},{"path":"https://thewanglab.github.io/algatr/reference/rda_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot RDA results — rda_plot","text":"mod model object class rda; provided, histograms loadings generated rda_snps vector outlier SNPs (defaults NULL) pvalues creating Manhattan plot (.e., manhattan = TRUE), matrix p-values (defaults NULL) axes RDA axes include plotting (defaults \"\") biplot_axes creating RDA biplot (.e., rdaplot = TRUE), pairs axes plot. Defaults plotting pairs axes possible, otherwise can set single pair axes (e.g., c(1,2)) list axes pairs (e.g., list(c(1,2), c(2,3)))) sig creating Manhattan plot, significance threshold y axis (defaults 0.05) manhattan whether produce Manhattan plot (defaults TRUE) rdaplot whether produce RDA biplot (defaults TRUE). one axis provided, instead biplot, histogram created binwidth width bins histograms (defaults NULL)","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/rda_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run RDA — rda_run","title":"Run RDA — rda_run","text":"Run RDA","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run RDA — rda_run","text":"","code":"rda_run(   gen,   env,   coords = NULL,   model = \"full\",   correctGEO = FALSE,   correctPC = FALSE,   nPC = 3,   Pin = 0.05,   R2permutations = 1000,   R2scope = T )"},{"path":"https://thewanglab.github.io/algatr/reference/rda_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run RDA — rda_run","text":"gen genotype dosage matrix (rows = individuals & columns = SNPs) vcfR object env dataframe environmental data Raster* type object environmental values coordinates can extracted coords dataframe coordinates (needed correctGEO = TRUE) env Raster* values extracted model whether fit model variables (\"full\") perform variable selection determine best set variables (\"best\"); defaults \"full\" correctGEO whether condition geographic coordinates correctPC whether condition PCs PCA genotypes nPC number PCs use correctPC = TRUE (defaults 3); set \"manual\" selection option terminal prompt provided Pin model = \"best\", limits permutation P-values adding (Pin) term model, dropping (Pout) model. Term added P <= Pin, removed P > Pout (see ordiR2step) (defaults 0.05) R2permutations model = \"best\", number permutations used estimation adjusted R2 cca using RsquareAdj (see ordiR2step) (defaults 1000) R2scope model = \"best\" set TRUE (default), use adjusted R2 stopping criterion: models lower adjusted R2 scope accepted (see ordiR2step)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run RDA — rda_run","text":"RDA model","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/rda_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create gt table of RDA results — rda_table","title":"Create gt table of RDA results — rda_table","text":"Create gt table RDA results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create gt table of RDA results — rda_table","text":"","code":"rda_table(   cor_df,   sig = 0.05,   sig_only = TRUE,   top = FALSE,   order = FALSE,   var = NULL,   nrow = NULL,   digits = 2 )"},{"path":"https://thewanglab.github.io/algatr/reference/rda_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create gt table of RDA results — rda_table","text":"cor_df dataframe correlation results output rda_cor sig outlier_method = \"p\", significance level use identify SNPs (defaults 0.05) sig_only whether include loci p-values less sig (defaults TRUE) top whether include keep top variable snp table strength correlation (defaults FALSE) order whether order magnitude correlation (defaults FALSE) var variables include (defaults including variables) nrow number rows display (defaults displaying rows) digits number digits include (defaults 2)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create gt table of RDA results — rda_table","text":"object class gt_tbl","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/rda_varpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial RDA variance partitioning — rda_varpart","title":"Partial RDA variance partitioning — rda_varpart","text":"Partial RDA variance partitioning","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_varpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial RDA variance partitioning — rda_varpart","text":"","code":"rda_varpart(gen, env, coords, Pin, R2permutations, R2scope, nPC)"},{"path":"https://thewanglab.github.io/algatr/reference/rda_varpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial RDA variance partitioning — rda_varpart","text":"gen genotype dosage matrix (rows = individuals & columns = SNPs) vcfR object env dataframe environmental data Raster* type object environmental values coordinates can extracted coords dataframe coordinates (needed correctGEO = TRUE) env Raster* values extracted Pin model = \"best\", limits permutation P-values adding (Pin) term model, dropping (Pout) model. Term added P <= Pin, removed P > Pout (see ordiR2step) (defaults 0.05) R2permutations model = \"best\", number permutations used estimation adjusted R2 cca using RsquareAdj (see ordiR2step) (defaults 1000) R2scope model = \"best\" set TRUE (default), use adjusted R2 stopping criterion: models lower adjusted R2 scope accepted (see ordiR2step) nPC number PCs use correctPC = TRUE (defaults 3); set \"manual\" selection option terminal prompt provided","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_varpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partial RDA variance partitioning — rda_varpart","text":"df relevant statistics variance partitioning analysis","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/rda_varpart_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create gt table with RDA variance partitioning results — rda_varpart_table","title":"Create gt table with RDA variance partitioning results — rda_varpart_table","text":"Create gt table RDA variance partitioning results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_varpart_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create gt table with RDA variance partitioning results — rda_varpart_table","text":"","code":"rda_varpart_table(df, digits = 2, call_col = FALSE)"},{"path":"https://thewanglab.github.io/algatr/reference/rda_varpart_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create gt table with RDA variance partitioning results — rda_varpart_table","text":"df dataframe variance partitioning results output rda_varpart digits number digits include (defaults 2) call_col whether include column RDA call (defaults FALSE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rda_varpart_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create gt table with RDA variance partitioning results — rda_varpart_table","text":"object class gt RDA variance partitioning results","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/rm_islands.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove islands from mapping — rm_islands","title":"Remove islands from mapping — rm_islands","text":"Remove islands mapping","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rm_islands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove islands from mapping — rm_islands","text":"","code":"rm_islands(input, shape, min_vertices = 10000)"},{"path":"https://thewanglab.github.io/algatr/reference/rm_islands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove islands from mapping — rm_islands","text":"input SpatRaster Raster* object islands removed; also accepts coords shape SpatialPolygons, sf, sfc, polygon object filter; also accepts SpatVector object min_vertices minimum number vertices polygons retain (defaults 10000)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/rm_islands.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove islands from mapping — rm_islands","text":"object (input type) islands removed","code":""},{"path":"https://thewanglab.github.io/algatr/reference/scale01.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale genetic distances from 0 to 1 — scale01","title":"Scale genetic distances from 0 to 1 — scale01","text":"Scale genetic distances 0 1","code":""},{"path":"https://thewanglab.github.io/algatr/reference/scale01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale genetic distances from 0 to 1 — scale01","text":"","code":"scale01(x)"},{"path":"https://thewanglab.github.io/algatr/reference/scale01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale genetic distances from 0 to 1 — scale01","text":"x genetic distance matrix","code":""},{"path":"https://thewanglab.github.io/algatr/reference/scale01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale genetic distances from 0 to 1 — scale01","text":"genetic distance matrix scaled 0 1","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/scaleRGB.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale three layers of environmental data to R, G, and B for mapping — scaleRGB","title":"Scale three layers of environmental data to R, G, and B for mapping — scaleRGB","text":"Scale three layers environmental data R, G, B mapping","code":""},{"path":"https://thewanglab.github.io/algatr/reference/scaleRGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale three layers of environmental data to R, G, and B for mapping — scaleRGB","text":"","code":"scaleRGB(env)"},{"path":"https://thewanglab.github.io/algatr/reference/scaleRGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale three layers of environmental data to R, G, and B for mapping — scaleRGB","text":"env SpatRaster Raster* three layers","code":""},{"path":"https://thewanglab.github.io/algatr/reference/scaleRGB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale three layers of environmental data to R, G, and B for mapping — scaleRGB","text":"RGB-scaled values","code":""},{"path":"https://thewanglab.github.io/algatr/reference/select_K.html","id":null,"dir":"Reference","previous_headings":"","what":"K selection — select_K","title":"K selection — select_K","text":"K selection","code":""},{"path":"https://thewanglab.github.io/algatr/reference/select_K.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K selection — select_K","text":"","code":"select_K(   gen,   K_selection = \"tracy_widom\",   coords = NULL,   Kvals = 1:10,   criticalpoint = 2.023,   low = 0.08,   max.pc = 0.9,   perc.pca = 90,   max.n.clust = 10 )  select_K_tw(gen, criticalpoint = 2.0234)  select_K_elbow(gen, low = 0.08, max.pc = 0.9)  select_K_tess(   gen,   coords,   Kvals = 1:10,   tess_method = \"projected.ls\",   ploidy = 2 )  select_K_fc(gen, perc.pca, max.n.clust)"},{"path":"https://thewanglab.github.io/algatr/reference/select_K.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K selection — select_K","text":"gen genotype matrix K_selection method performing K selection (options: \"tracy_widom\" (default), \"quick_elbow\", \"tess\") coords coordinates \"tess\" Kvals values K test \"tess\" criticalpoint K_selection = \"tracy_widom\", numeric value corresponding significance level. significance level 0.05, 0.01, 0.005, 0.001, criticalpoint set 0.9793, 2.0234, 2.4224, 3.2724, respectively (defaults 2.0234) low K_selection = \"quick_elbow\", numeric, zero one, threshold defines whether principal component explains 'much' variance (defaults 0.08). max.pc K_selection = \"quick_elbow\", maximum percentage variance capture elbow (cumulative sum PC 'n'; defaults 0.90). perc.pca K_selection = \"find_clusters\", numeric value 0 100 indicating minimal percentage total variance data expressed retained axes PCA (defaults 90). max.n.clust K_selection = \"find_clusters\", integer indicating maximum number clusters try. Values 'k' picked 1 max.n.clust (defaults 10) tess_method method use \"tess\" ploidy ploidy \"tess\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/select_K.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K selection — select_K","text":"prints best K value given specified K selection procedure","code":""},{"path":"https://thewanglab.github.io/algatr/reference/select_K.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"K selection — select_K","text":"select_K_tw(): select K using Tracy-Widom Test select_K_elbow(): select K using PCA quick_elbow method select_K_tess(): select K using TESS bestK method select_K_fc(): select K using find.clusters method","code":""},{"path":"https://thewanglab.github.io/algatr/reference/select_K.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"K selection — select_K","text":"uses tw function uses find.clusters function","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/simple_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute NA values\nNOTE: use extreme caution when using this form of simplistic imputation. We mainly provide this code for creating test datasets and highly discourage its use in analyses. — simple_impute","title":"Impute NA values\nNOTE: use extreme caution when using this form of simplistic imputation. We mainly provide this code for creating test datasets and highly discourage its use in analyses. — simple_impute","text":"Impute NA values NOTE: use extreme caution using form simplistic imputation. mainly provide code creating test datasets highly discourage use analyses.","code":""},{"path":"https://thewanglab.github.io/algatr/reference/simple_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute NA values\nNOTE: use extreme caution when using this form of simplistic imputation. We mainly provide this code for creating test datasets and highly discourage its use in analyses. — simple_impute","text":"","code":"simple_impute(x, FUN = median)"},{"path":"https://thewanglab.github.io/algatr/reference/simple_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute NA values\nNOTE: use extreme caution when using this form of simplistic imputation. We mainly provide this code for creating test datasets and highly discourage its use in analyses. — simple_impute","text":"x matrix f function use imputation (defaults median)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/simple_impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute NA values\nNOTE: use extreme caution when using this form of simplistic imputation. We mainly provide this code for creating test datasets and highly discourage its use in analyses. — simple_impute","text":"matrix values missing values imputed","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/snmf_bestK.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to select ","title":"Helper function to select ","text":"Helper function select \"best\" K based minimizing cross-entropy criteria sNMF results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/snmf_bestK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to select ","text":"","code":"snmf_bestK(snmf_proj, K, quiet)"},{"path":"https://thewanglab.github.io/algatr/reference/snmf_bestK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to select ","text":"snmf_proj object type snmfProject K integer corresponding K-value quiet whether print results cross-entropy scores (defaults TRUE; one K-value); displays run minimum cross-entropy","code":""},{"path":"https://thewanglab.github.io/algatr/reference/snmf_bestK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to select ","text":"list best K-value run number cross-entropy scores","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/snmf_crossent_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to retrieve cross entropy scores from SNMF project — snmf_crossent_helper","title":"Helper function to retrieve cross entropy scores from SNMF project — snmf_crossent_helper","text":"Helper function retrieve cross entropy scores SNMF project","code":""},{"path":"https://thewanglab.github.io/algatr/reference/snmf_crossent_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to retrieve cross entropy scores from SNMF project — snmf_crossent_helper","text":"","code":"snmf_crossent_helper(snmf_proj, K, select_min = TRUE)"},{"path":"https://thewanglab.github.io/algatr/reference/snmf_crossent_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to retrieve cross entropy scores from SNMF project — snmf_crossent_helper","text":"snmf_proj object type snmfProject K K-value(s) select_min whether return minimum","code":""},{"path":"https://thewanglab.github.io/algatr/reference/snmf_crossent_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to retrieve cross entropy scores from SNMF project — snmf_crossent_helper","text":"cross entropy scores given K","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/str_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation of missing values using population structure inferred with LEA::snmf — str_impute","title":"Imputation of missing values using population structure inferred with LEA::snmf — str_impute","text":"Imputation missing values using population structure inferred LEA::snmf","code":""},{"path":"https://thewanglab.github.io/algatr/reference/str_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation of missing values using population structure inferred with LEA::snmf — str_impute","text":"","code":"str_impute(   gen,   K,   entropy = TRUE,   repetitions = 10,   project = \"new\",   quiet = TRUE,   save_output = FALSE,   output_filename = NULL )"},{"path":"https://thewanglab.github.io/algatr/reference/str_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation of missing values using population structure inferred with LEA::snmf — str_impute","text":"gen dosage matrix, object class 'vcfR', object type snmfProject K integer vector corresponding number ancestral populations     snmf algorithm estimates calculated. entropy boolean value. true, cross-entropy criterion calculated      (see create.dataset      cross.entropy.estimation). repetitions integer corresponding number repetitions value      K. project character string among \"continue\", \"new\", \"force\". \"continue\",     results stored current project. \"new\", current      project removed new one created store result.      \"force\", results stored current project even input      file modified since creation project. quiet whether print results cross-entropy scores (defaults TRUE; one K-value); displays run minimum cross-entropy save_output TRUE, saves SNP GDS ped (plink) files retained SNPs new directory; FALSE returns object (defaults FALSE) output_filename save_output = TRUE, name prefix saved .geno file, sNMF project file, sNMF output file results (defaults FALSE, files saved)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/str_impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation of missing values using population structure inferred with LEA::snmf — str_impute","text":"dosage matrix imputed missing values","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/tess_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create TESS barplot — tess_barplot","title":"Create TESS barplot — tess_barplot","text":"Based code : https://github.com/bcm-uga/TESS3_encho_sen/blob/master/R/plotQ.R","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create TESS barplot — tess_barplot","text":"","code":"tess_barplot(   qmat,   col_pal = algatr_col_default(\"base\"),   sort_by_Q = TRUE,   legend = TRUE,   legend_position = \"bottomright\",   border = NA,   space = 0,   ... )"},{"path":"https://thewanglab.github.io/algatr/reference/tess_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create TESS barplot — tess_barplot","text":"qmat Q matrix sort_by_Q whether sort bars Q value (equivalent barplot sort..Q) legend whether display legend (defaults TRUE) legend_position x y coordinates keyword determine legend position (defaults bottom right) border color used border bars.     Use border = NA omit borders.  shading     lines, border = TRUE means use colour     border shading lines. space amount space (fraction average bar     width) left bar.  May given single number     one number per bar.  height matrix     beside TRUE, space may specified     two numbers, first space bars     group, second space groups.      given explicitly, defaults c(0,1) height     matrix beside TRUE, 0.2     otherwise. ... parameters function barplot.default.","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create TESS barplot — tess_barplot","text":"STRUCTURE-style bar plot TESS results","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/tess_col_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Create default TESS color palette — tess_col_default","title":"Create default TESS color palette — tess_col_default","text":"Create default TESS color palette","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_col_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create default TESS color palette — tess_col_default","text":"","code":"tess_col_default(n, alpha = 1)"},{"path":"https://thewanglab.github.io/algatr/reference/tess_col_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create default TESS color palette — tess_col_default","text":"n number colors generate (must less 9)","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/tess_do_everything.html","id":null,"dir":"Reference","previous_headings":"","what":"TESS function to do everything — tess_do_everything","title":"TESS function to do everything — tess_do_everything","text":"TESS function everything","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_do_everything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TESS function to do everything — tess_do_everything","text":"","code":"tess_do_everything(   gen,   coords,   grid = NULL,   Kvals = 1:10,   K_selection = \"manual\",   plot_method = \"maxQ\",   col_breaks = 20,   minQ = 0.1,   tess_method = \"projected.ls\",   lambda = 1,   ploidy = 2,   correct_kriged_Q = TRUE,   quiet = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/tess_do_everything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TESS function to do everything — tess_do_everything","text":"gen genotype dosage matrix (rows = individuals & columns = snps) vcfR object coords dataframe x y coordinates grid SpatRaster kriging Kvals vector K values test K_selection perform K selection (\"manual\" enter console (default) \"auto\" automatic selection based bestK) plot_method method making rainbow map kriged layers (options: \"maxQ\" plot max Q value cell (default), \"allQ\" plot Q values greater minQ, \"maxQ_poly\" \"allQ_poly\" create plots previously described, polygons K instead continuous Q values) col_breaks number breaks plotting (defaults 20) minQ threshold minimum Q value rainbow plotting method = \"\" used (defaults 0.10) tess_method type TESS method run (\"projected.ls\" projected least squares algorithm (default) \"qp\" quadratic programming algorithm) lambda numeric value spatial regularization parameter. default value lambda = 1 attributes equal weights loss function penalty function. ploidy ploidy data (defaults 2) correct_kriged_Q whether correct kriged Q values values greater 1 set 1 values less 0 set 0 (defaults TRUE) quiet whether print output tables figures (defaults FALSE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_do_everything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TESS function to do everything — tess_do_everything","text":"list TESS results, final K value, final kriged raster","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_do_everything.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TESS function to do everything — tess_do_everything","text":"TESS run using tess3r package: Caye, K., François, O. (2016). tess3r: Inference Spatial Population Genetic Structure. R package version 1.1.0. See also: Caye, K., Deist, T.M., Martins, H., Michel, O., François, O. (2016). TESS3: fast inference spatial population structure genome scans selection. Mol. Ecol. Res. 16(2):540-548. https://doi.org/10.1111/1755-0998.12471","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/tess_ggbarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create TESS barplot using ggplot2 — tess_ggbarplot","title":"Create TESS barplot using ggplot2 — tess_ggbarplot","text":"Create TESS barplot using ggplot2","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_ggbarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create TESS barplot using ggplot2 — tess_ggbarplot","text":"","code":"tess_ggbarplot(   qmat,   ggplot_fill = algatr_col_default(\"ggplot\"),   sort_by_Q = TRUE,   legend = TRUE )"},{"path":"https://thewanglab.github.io/algatr/reference/tess_ggbarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create TESS barplot using ggplot2 — tess_ggbarplot","text":"qmat Q matrix ggplot_fill ggplot2 scale fill discrete function (default: scale_fill_viridis_d, option = \"turbo\") sort_by_Q whether sort bars Q value (equivalent barplot sort..Q) legend whether display legend (defaults TRUE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_ggbarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create TESS barplot using ggplot2 — tess_ggbarplot","text":"ggplot object TESS results barplot","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/tess_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot of TESS results — tess_ggplot","title":"ggplot of TESS results — tess_ggplot","text":"ggplot TESS results","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot of TESS results — tess_ggplot","text":"","code":"tess_ggplot(   krig_admix,   coords = NULL,   plot_method = \"maxQ\",   ggplot_fill = algatr_col_default(\"ggplot\"),   minQ = 0.1,   plot_axes = FALSE,   rel_widths = c(3, 1),   list = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/tess_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot of TESS results — tess_ggplot","text":"krig_admix SpatRaster returned tess_krig coords dataframe x y coordinates plotting (optional) plot_method method making rainbow map kriged layers (options: \"maxQ\" plot max Q value cell (default), \"allQ\" plot Q values greater minQ, \"maxQ_poly\" \"allQ_poly\" create plots previously described, polygons K instead continuous Q values) ggplot_fill ggplot2 scale fill discrete function (default: scale_fill_viridis_d, option = \"turbo\") minQ threshold minimum Q-value rainbow plotting plot_method = \"allQ\" plot_method = \"allQ_poly\" used (defaults 0.10) plot_axes whether plot axes (defaults FALSE) rel_widths plot_method = \"maxQ\" plot_method = \"allQ\" used, sets relative widths kriged TESS map legend (defaults 3:1), plot_grid list plot_method = \"maxQ\" \"allQ\", whether output list ggplots (.e., base plot legend; TRUE) single plot (FALSE; default). Use list = TRUE like add additional ggplot2 functions plot","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot of TESS results — tess_ggplot","text":"ggplot object TESS results","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/tess_krig.html","id":null,"dir":"Reference","previous_headings":"","what":"Krige admixture values — tess_krig","title":"Krige admixture values — tess_krig","text":"Krige admixture values","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_krig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Krige admixture values — tess_krig","text":"","code":"tess_krig(qmat, coords, grid = NULL, correct_kriged_Q = TRUE)"},{"path":"https://thewanglab.github.io/algatr/reference/tess_krig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Krige admixture values — tess_krig","text":"qmat qmatrix coords dataframe x y coordinates grid SpatRaster kriging correct_kriged_Q whether correct kriged Q values values greater 1 set 1 values less 0 set 0 (defaults TRUE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_krig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Krige admixture values — tess_krig","text":"Raster\\* type object kriged Q values","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/tess_ktest.html","id":null,"dir":"Reference","previous_headings":"","what":"Test multiple K values — tess_ktest","title":"Test multiple K values — tess_ktest","text":"Test multiple K values","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_ktest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test multiple K values — tess_ktest","text":"","code":"tess_ktest(   gen,   coords,   Kvals = 1:10,   grid = NULL,   tess_method = \"projected.ls\",   lambda = 1,   K_selection = \"manual\",   ploidy = 2,   quiet = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/tess_ktest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test multiple K values — tess_ktest","text":"gen genotype dosage matrix (rows = individuals & columns = snps) vcfR object coords dataframe x y coordinates Kvals vector K values test grid SpatRaster kriging tess_method type TESS method run (\"projected.ls\" projected least squares algorithm (default) \"qp\" quadratic programming algorithm) lambda numeric value spatial regularization parameter. default value lambda = 1 attributes equal weights loss function penalty function. K_selection perform K selection (\"manual\" enter console (default) \"auto\" automatic selection based bestK) ploidy ploidy data (defaults 2) quiet whether print output tables figures (defaults FALSE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_ktest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test multiple K values — tess_ktest","text":"list results testing different K-values","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/tess_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install TESS packages — tess_packages","title":"Install TESS packages — tess_packages","text":"Checks presence packages required TESS. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install TESS packages — tess_packages","text":"","code":"tess_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/tess_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install TESS packages — tess_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install TESS packages — tess_packages","text":"following packages installed already present: \"automap\" \"graphics\" \"LEA\" (Bioconductor repository) \"tess3r\" (GitHub repository bcm-uga/TESS3_encho_sen) \"fields\" \"rworldmap\" \"cowplot\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install TESS packages — tess_packages","text":"","code":"if (FALSE) tess_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/tess_plot_allK.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot all kriged Q values for each K — tess_plot_allK","title":"Plot all kriged Q values for each K — tess_plot_allK","text":"Plot kriged Q values K","code":""},{"path":"https://thewanglab.github.io/algatr/reference/tess_plot_allK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot all kriged Q values for each K — tess_plot_allK","text":"","code":"tess_plot_allK(   krig_admix,   coords = NULL,   col_pal = algatr_col_default(\"base\"),   col_breaks = 20,   ... )"},{"path":"https://thewanglab.github.io/algatr/reference/tess_plot_allK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot all kriged Q values for each K — tess_plot_allK","text":"krig_admix RasterStack returned tess_krig coords dataframe x y coordinates plotting (optional) col_breaks number breaks plotting (defaults 20) ... Graphical parameters. argument can passed image.plot base plot","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/unfold.html","id":null,"dir":"Reference","previous_headings":"","what":"unfold converts the lower diagonal elements of a matrix into a vector — unfold","title":"unfold converts the lower diagonal elements of a matrix into a vector — unfold","text":"unfold converts lower diagonal elements matrix vector","code":""},{"path":"https://thewanglab.github.io/algatr/reference/unfold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unfold converts the lower diagonal elements of a matrix into a vector — unfold","text":"","code":"unfold(X, scale = TRUE)"},{"path":"https://thewanglab.github.io/algatr/reference/unfold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"unfold converts the lower diagonal elements of a matrix into a vector — unfold","text":"X distance matrix scale TRUE matrices standardized (defaults TRUE)","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/vcf_to_dosage.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a vcf to a dosage matrix — vcf_to_dosage","title":"Convert a vcf to a dosage matrix — vcf_to_dosage","text":"Convert vcf dosage matrix","code":""},{"path":"https://thewanglab.github.io/algatr/reference/vcf_to_dosage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a vcf to a dosage matrix — vcf_to_dosage","text":"","code":"vcf_to_dosage(x)"},{"path":"https://thewanglab.github.io/algatr/reference/vcf_to_dosage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a vcf to a dosage matrix — vcf_to_dosage","text":"x can either object class 'vcfR' path .vcf file","code":""},{"path":"https://thewanglab.github.io/algatr/reference/vcf_to_dosage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a vcf to a dosage matrix — vcf_to_dosage","text":"dosage matrix","code":""},{"path":"https://thewanglab.github.io/algatr/reference/wingen_do_everything.html","id":null,"dir":"Reference","previous_headings":"","what":"wingen function to do everything  (preview and generate moving window maps, krige, and mask) — wingen_do_everything","title":"wingen function to do everything  (preview and generate moving window maps, krige, and mask) — wingen_do_everything","text":"wingen function everything  (preview generate moving window maps, krige, mask)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/wingen_do_everything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wingen function to do everything  (preview and generate moving window maps, krige, and mask) — wingen_do_everything","text":"","code":"wingen_do_everything(   gen,   lyr,   coords,   wdim = 3,   fact = 0,   sample_count = TRUE,   min_n = 2,   preview = FALSE,   stat = \"pi\",   rarify = FALSE,   kriged = FALSE,   grd = NULL,   index = 1,   agg_grd = NULL,   disagg_grd = NULL,   agg_r = NULL,   disagg_r = NULL,   masked = FALSE,   mask = NULL,   bkg = NULL,   plot_count = FALSE,   quiet = FALSE )"},{"path":"https://thewanglab.github.io/algatr/reference/wingen_do_everything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wingen function to do everything  (preview and generate moving window maps, krige, and mask) — wingen_do_everything","text":"gen genetic data either object type vcf path vcf file (note: order matters! coordinate genetic data order; currently checks ) lyr SpatRaster RasterLayer slide window across (see Details important information projections). method = \"resist\" also conductivity layer (see resist_gd) coords coordinates samples sf points, two-column matrix, data.frame representing x y coordinates (see Details important information projections) wdim method = \"window\", dimensions (height x width) window; one value provided, square window created (defaults 3 x 3 window) fact aggregation factor apply lyr (defaults 0; note: increasing value reduces computational time) sample_count whether create plot sample counts cell (defaults TRUE) min_n minimum number samples use calculations (focal cell window containing less number samples assigned value NA) preview whether produce preview raster layer, window focal cell size using preview_gd (default = FALSE) stat genetic diversity statistic(s) calculate (see Details, defaults \"pi\"). Can single statistic vector statistics rarify rarify = TRUE, rarefaction performed (defaults FALSE) kriged whether smooth mapped values using kriging using krig_gd (default = FALSE) grd object create grid kriging; can SpatRaster, RasterLayer, SpatialPointsDataFrame, gridded object defined 'sp'. undefined, use r create grid. index integer indices layers raster stack krige (defaults 1; .e., first layer) agg_grd factor use aggregation grd, provided (decrease resolution final kriged raster; defaults NULL) disagg_grd factor use disaggregation grd, provided (increase resolution final kriged raster; defaults NULL) agg_r factor use aggregation r, provided (decrease number points used kriging model; defaults NULL) disagg_r factor use disaggregation, r provided (increase number points used kriging model; defaults NULL) masked whether mask areas outside region interest using mask_gd (default = FALSE) plot_count TRUE, whether visualize sample counts using plot_count (default = FALSE) quiet whether print output tables figures (defaults FALSE)","code":""},{"path":"https://thewanglab.github.io/algatr/reference/wingen_do_everything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wingen function to do everything  (preview and generate moving window maps, krige, and mask) — wingen_do_everything","text":"RasterBrick object final raster","code":""},{"path":"https://thewanglab.github.io/algatr/reference/wingen_do_everything.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"wingen function to do everything  (preview and generate moving window maps, krige, and mask) — wingen_do_everything","text":"using wingen, please cite original citation: Bishop, .P., Chambers, E.., Wang, .J. (2023). Generating continuous maps genetic diversity using moving windows. Methods Ecol. Evol. doi: https://doi.org/10.1111/2041-210X.14090 N.B.: aware function sets many wingen function arguments defaults, result sub optimal results. highly advise researchers run wingen function separately best results.","code":""},{"path":[]},{"path":"https://thewanglab.github.io/algatr/reference/wingen_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Install wingen packages — wingen_packages","title":"Install wingen packages — wingen_packages","text":"function checks presence packages required wingen. packages already installed, automatically install .","code":""},{"path":"https://thewanglab.github.io/algatr/reference/wingen_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install wingen packages — wingen_packages","text":"","code":"wingen_packages()"},{"path":"https://thewanglab.github.io/algatr/reference/wingen_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install wingen packages — wingen_packages","text":"None","code":""},{"path":"https://thewanglab.github.io/algatr/reference/wingen_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install wingen packages — wingen_packages","text":"following package installed already present: \"wingen\"","code":""},{"path":"https://thewanglab.github.io/algatr/reference/wingen_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install wingen packages — wingen_packages","text":"","code":"if (FALSE) wingen_packages()"}]
